{"version":3,"sources":["apps/tools/update-state.js","apps/tools/tools.js","apps/layout/checkout_page/checkout_page.js","apps/layout/1.jpeg","apps/layout/layout.js","apps/authenticate/1.jpeg","apps/authenticate/login.js","apps/right-click/right-click.js","index.js","apps/power-table/columns/label.js","apps/store/store.js","apps/power-table/columns/img-path.js","apps/power-table/columns/main.js","apps/power-table/columns/help-array.js","apps/power-table/columns/bool.js","apps/power-table/columns/char.js","apps/power-table/columns/money.js","apps/power-table/columns/china-time.js","apps/power-table/columns/year-time.js","apps/power-table/columns/map.js","apps/power-table/columns/video.js","apps/power-table/columns/file.js","apps/power-table/columns/progress.js","apps/power-table/columns/link.js","apps/power-table/columns/utc-time.js","apps/power-table/columns/user-info.js","apps/store/handle.js","apps/power-table/power-table.js","apps/power-table/table-upate-line.js","apps/power-table/fields/img-head/img-head.js","apps/power-table/fields/img-head/cropper-component.js","apps/power-table/coumns-detail/render/render.js","apps/power-table/modal.js","apps/power-table/table-upate-part.js","apps/power-table/table-create-part.js","apps/power-table/table-create.js","apps/power-table/table-create-copy.js","apps/power-table/table-create-batch.js","apps/power-table/table-detail-line.js","apps/power-table/head/DownLoad.js","apps/power-table/columns/render.js","apps/power-table/head/help/help.js","apps/power-table/head/filters/filters.js","apps/power-table/head/dynamic_filter_type/dynamic_filter.js","apps/power-table/head/dynamic_filters/dynamic_filters.js","apps/power-table/head/count/count.js","apps/power-table/help.png","apps/power-table/head/jump/jump.js","apps/assistant/album/album_tool.js","apps/power-table/fields/InputFramework/InputFramework.js","apps/power-table/fields/char/char.js","apps/power-table/fields/text/text.js","apps/power-table/fields/multiple-choices/multiple-choices.js","apps/power-table/fields/single-small-choices/single-small-choices.js","apps/power-table/fields/single-deep-choices/single-deep-choices.js","apps/power-table/fields/file/file.js","apps/power-table/fields/multiple-file/multiple-file.js","apps/power-table/fields/multiple-img/multiple-img.js","apps/power-table/fields/bool/bool.js","apps/power-table/fields/img-path/img-path.js","apps/power-table/fields/img-show/img-show.js","apps/power-table/fields/dynamic/dynamic.js","apps/power-table/fields/time/time.js","apps/power-table/fields/time-year/time.js","apps/power-table/fields/time-day/time-day.js","apps/power-table/fields/single-search-choices/single-search-choices.js","apps/power-table/fields/single-deep-choices-new/single-deep-new-choices.js","apps/power-table/fields/react-field/react-field.js","apps/power-table/coumns-detail/char/char.js","apps/power-table/coumns-detail/money/money.js","apps/power-table/coumns-detail/help-array/help-array.js","apps/power-table/coumns-detail/bool/bool.js","apps/power-table/coumns-detail/img-path/img-path.js","apps/power-table/coumns-detail/label/label.js","apps/power-table/coumns-detail/label/label-help.js","apps/power-table/coumns-detail/dynamic/dynamic.js","apps/power-table/coumns-detail/file/file.js","apps/power-table/coumns-detail/map/map.js","apps/power-table/coumns-detail/chinaTime/china-time.js","apps/power-table/coumns-detail/yearTime/year-time.js","apps/power-table/coumns-detail/utcTime/utc-time.js","apps/power-table/coumns-detail/userInfo/char.js","public_setting.js","setting.js"],"names":["actionUpdateState","type","storeHandles","registerHandle","state","action","Object","assign","tool","rightInfo","message_style","isMobile","fontSize","title","$","text","args","this","ajax","headers","getStateSpace","path","get_url","data","columnsMap","nowRole","nowRoleLanguage","english2chines","textInfo","textError","Unknown","info","res_json","keys","new_infos","i","map","key","keyInfo","temp","length","message","error","content","style","then","_","responseText","infos","Array","isArray","success","r","hasOwnProperty","leftInfo","_ip","http","window","location","protocol","host","ip","replace","url_args","pk","get_ip","url_args_str","slice","url","JSON","stringify","param","searchParams","URLSearchParams","href","super_username","get","state_end","state_static","strIsInStr","param_str","space","null2value","spacePath","getStateReturnDefaultValue","store","getState","updateFatherSpace","fatherSpacePath","subKey","subSpace","fatherSpace","dispatch","targetObject","attributePath","defaultValue","value","attribute","allowType","attributeType","prototype","toString","call","isInArray","undefined","array","findIndex","item","str1","str2","indexOf","utc_str","date_obj","Date","setHours","getHours","year","getFullYear","month","getMonth","day","getDate","hours","minutes","getMinutes","values","search","substring","split","pair","roleInfo","setting","code","push","start","end","arguments","parseInt","Math","random","stateTableOnloadPath","getAttribute","concat","setStateSpace","CheckoutPageUnConnected","pageMap","buttons","onClick","role","jumps","jump","help","className","React","Component","CheckoutPage","connect","SubMenu","Menu","Header","Layout","Content","Sider","Footer","ComponentLayout","props","fileChange","event","files","target","file","size","show_info","fileReader","FileReader","onload","dataURL","result","setState","src","fileName","name","readAsDataURL","onClickMenu","bind","getMenus","getContent","getLoginOut","getChoiceButton","getMenuKey","spacePrivatePath","lineSpacePath","isPath","paramFather","spacePrivateKey","spacePrivate","stateTableOnload","menuKey","selectedMenu","selectedKey","selectedSpacePath","selectedGroup","selectedGroupSpacePath","isSetHeadShowPath","isSetHeadShow","reacts","spaceTitlePath","spaceTitle","webTitlePath","webTitle","textAlign","onBlur","setTitle","visible","open","onCancel","footer","width","ToolOutlined","moveMenuPos","direction","spaceArray","newMenus","sign","startsWith","index","indexTarget","newSpace","_key","reactMenus","menuSpace","menuSpacePath","menuUrlPath","isDir","menuSpaceHiddenPath","menuSpaceHidden","float","description","onConfirm","_menuKey","okText","cancelText","DeleteOutlined","color","Group","onChange","marginLeft","menuNamePath","newMenuSpace","sub","table","columns","col","columnsDetailLine","floor","newData","field_test","isSetMenuShowPath","isSetMenuShow","height","getReactMenuEditButton","menuInfo","getMenu","lineInfo","reactName","menuStyle","marginBottom","Item","menuReact","lineKey","getSetLine","document","cookie","localStorage","removeItem","authentication","username","clearAuthenticate","display","position","top","right","pos","border","borderRadius","overflow","setPasswordPath","stateShowPath","oldPasswordPath","newPasswordPath","closeAndClear","setPassword","stateShow","oldPassword","newPassword","reactChangePassword","onOk","old_password","new_password","param_request","show_success","show_error","post","Password","placeholder","addonBefore","lineSpace","react","isShow","inputId","ceil","buttonStyle","marginTop","id","accept","click","coverPath","cover","setCoverPath","setCover","handleOk","canvas","cropper","toBlob","blob","a","File","FormData","append","setPath","contentType","processData","path_join","divStyle","avatar","shape","icon","alt","submitStyle","ref","viewMode","zoomable","aspectRatio","menu","stateAffixMenu","stateAffixMenuRole","mode","borderRight","selectedKeys","hiddenMenu","zIndex","nowPage","history","pushState","reactHead","layoutStyle","systemTitle","loginOut","changePassword","getChangePassword","getCover","affixMenuReact","getAffixMenuReact","backgroundColor","left","getReactHeadEditButton","contentStyle","padding","margin","minHeight","backgroundImage","bottom","open_edit","ChoiceRole","setItem","authenticatePath","authenticate","choiceRole","roleTitle","buttonDivStyle","roleButtons","role_name","onChoice","setTimeout","selectedCode","getItem","titleStyle","closeIcon","Login","change","submit","password","remember","field","urlPath","requestParam","responseData","abstract_role_name","roleInfoHandler","jwtToken","authorization","div_0","backgroundSize","div_1","transform","div_2","input_height","button_style","input_style","logo","logoPath","Text","prefix","onPressEnter","RightClick","getRightMenu","spacePublicPath","detailPath","hiddenDetailPath","hiddenDetail","textDetailPath","textDetail","createPath","hiddenCreatePath","hiddenCreate","textCreatePath","textCreate","updatePath","hiddenUpdatePath","hiddenUpdate","textUpdatePath","textUpdate","update1Path","hiddenUpdate1Path","hiddenUpdate1","textUpdate1Path","textUpdate1","deleteHiddenPath","deleteHidden","textDeletePath","textDelete","copyHiddenPath","copyHidden","textCopyPath","textCopy","isSetRightShowPath","isSetRightShow","spacePublic","spaceRowPath","record","fatherRecord","recordId","filterValue","filtersInfo","filtersChoices","filterNow","columnsCreatePath","columnsUpdatePath","showC","showCp","showU","showUPart","showD","showDelete","showInfo","columnsUpdatePartPath","columnsDetailLinePath","columnsCreateSpace","columnsUpdateSpace","columnsUpdatePartSpace","columnsDetailLineSpace","disableDeleteSpace","disableCopy","disableUpdate","disableCreate","filterColumnsUpdate","filterColumnsCreate","filterDisableDelete","filterDisableCopy","filterDisableUpdate","hiddenCopyPath","hiddenCopy","text_detail","filterTextDetail","text_delete","filterTextDelete","text_create","filterTextCreate","text_copy","filterTextCopy","text_update","textUpdatePart","text_update_part","filterTextUpdate","onClickU","columnsUpdate","getColumnsUpdate","trigger","menu__","rightClick","show","infoModalPath","infoModal","nowType","paramModal","onClickUPart","getColumnsUpdatePart","onMouseEnter","onMouseLeave","detailOnload","onClickDetail","onClickCreate","onClickCopy","danger","okButtonProps","urlParam","requestPathPath","requestPath","success_state","res","status","show_success_299","resultsPath","results","newResults","onTableMenu","delete","onClickDelete","getSetRight","x","y","openEditPath","Root","getNowPage","boxShadow","settings","settingsKey","console","log","CloudUploadOutlined","root","getRoot","getPath","reactOpenEdit","getReactConfPush","router","defaultRoot","router_custom","ReactDOM","render","getElementById","clickSign","oncontextmenu","onmousedown","origin","button","now","rightClickPath","confUrl","parse","newSetting","getLabelReact","label","str","valueUtf8s","TextEncoder","encode","valueMap","charAt","Number","helps","labelReacts","dictLabel","textLabel","placement","createStore","getHandle","imgPath","mapping","emptyArray","helpArray","line","bool","textBool","char","money","chinaTime","yearTime","mapChoices","mapValue","imgShow","imgHead","video","columnKey","spaceKey","showSpacePath","modalWidthPath","modalWidth","showSpace","video_id","setWidth","video_obj","pause","controls","Video","textLink","rel","progress","selfProgress","background","link","utcTime","utc_to_china","userInfo","getColumnRender","columnType","columnInfo","funType","first","func","getColumnsType","rightSpacePublicPath","paramSpacePublicPath","isChoice","components","messageRightIsShow","messageRight","getUrlParam","initState","componentInfo","componentKey","component","lastSign","PowerTable","addSubColumns","addTrigger","getColumns","getDataTable","getTableHead","getSubTableReact","getPagination","getSearchBorder","getFatherId","updateData","_1","_2","page","page_size","filter","isObject","requestUrlPath","requestUrl","params","signLength","valueDefault","filterKey","searchKey","mySign","textSuccess","timestamp","getTime","searchWaiting","lastUpdateTime","nowTime","stateUpdate","columnsInfo","filterColumns","ellipsis","column","rate","dataIndex","tableData","oneLine","fieldName","totalWidth","parseFloat","getSubColumn","columnName","columnTitle","columnRate","columnHidden","hidden","is_show","expandedRowKeysPath","expandedRowKeys","spaceRowKey","nowSelectedColumnPath","nowSelectedColumn","newExpandedRowKeys","expandedRowKey","spaceSubPublicPath","spaceSubPrivateKey","spaceSubPrivatePath","spaceSubPrivate","spaceRow","onlyRecordId","onClickSubColumn","getTriggerColumn","triggerPublicSpacePath","textButton","buttonType","triggerPrivateSpacePath","disabled","funcMapping","spaceSubPublic","fatherLastClickRecordId","onContextMenu","rightClickSpace","clientX","clientY","columnsCreate","textPath","columnsCreateBatchPath","onUpdateData","searchHiddenPath","textSearchHelp","searchWord","verticalAlign","addonAfter","searchWordPath","searchPath","searchHelp","searchHidden","isSetSearchShowPath","isSetSearchShow","isSetFilterShowPath","isSetFilterShow","filterInfoPath","filterInfo","keyPath","reactChoices","choices","choiceKey","newChoices","_choiceKey","useKey","newFilterInfo","_value","default","newSpacePublic","getReactFieldAppend","typePath","textBoolPath","mapPath","lines","mapKey","newMap","userKey","userValue","renderPath","defaultFunc","errorInfo","eval","TextArea","row","string","isSetColShowPath","isSetColShow","reactColumns","movePos","columnsPath","columnsArray","newColumns","_columnKey","movePosSub","subArray","indexSub","movePosTrigger","triggerArray","reactFieldAppend","options","helpTextPath","helpHiddenPath","helpHidden","helpText","rows","isSetHelpShowPath","isSetHelpShow","downloadHiddenPath","downloadHidden","isSetDownloadShowPath","isSetDownloadShow","getReactColEditButton","getReactSearchEditButton","getReactFilterEditButton","getReactHelpEditButton","getReactDownloadEditButton","createButtonReact","getCreateButtonReact","createBatchButtonReact","getCreateBatchButtonReact","updateDataButton","getUpdateDataButton","searchBorder","marginRight","count","total","defaultPageSize","onloadInfo","current","loading","onRow","getOnRow","tableHead","pagination","showHeader","dataSource","rowKey","expandIcon","expandable","expandedRowRender","getFooter","mapStateToTable","RightMessage","setClose","mapStateToMessage","RootTable","spaceMenuPath","spaceMenu","mapStateToRoot","UpdateTableLine","fieldType","fieldMapping","fieldReacts","columnUpdate","mapColumnKey","fun_is_show","getFieldReact","progressInfo","percent","dataKey","dataPath","paramUrl","dataObj","stateSplitTwo","stateUpdateUploadPath","otherData","filesData","fileKey","percentPath","response","show_success_298","stateUpdateUpload","xhr","ajaxSettings","upload","addEventListener","loaded","patch","columnPath","choicesPath","choice","_choice","_help","userObj","moveUpdatePos","hiddenPath","newColumnUpdates","isSetUpdateColShowPath","isSetUpdateColShow","textTitlePath","textTitle","getProgress","reactSetUpdate","getReactSetUpdate","FieldImageHead","reader","dataBase64","dealImage","arr","mime","match","bStr","atob","n","u8arr","Uint8Array","charCodeAt","file_obj","getImgUrl","URL","createObjectURL","fileUrl","getCorp","nowSrc","url_back","base64","w","callback","imgWidth","imgHeight","newImage","global","Image","quality","setAttribute","createElement","ctx","getContext","max","clearRect","drawImage","toDataURL","onLoad","imgObj","ratio","getOriginImgReact","onClose","onSubmit","columnCreate","nowImageReact","choiceButton","CropperComponent","handleSubmit","FieldDetailRender","paramModalPath","funcTemp","mapStateToUpdate","MyModal","my_modal_param","UpdateTablePart","getOk","getNowPagePath","nowPagePath","nextPage","last","updatePartSpaceKey","columnsUpdatePart","filterColumnsUpdatePart","updatePart","getColumnUpdatePartPath","columnsUpdatePartTargetPath","targetPage","_updatePartSpaceKey","pagePath","leftButton","ok","onPrevious","CreateTablePart","getColumnsCreatePart","createPartSpaceKey","columnsCreatePartPath","columnsCreatePart","filterColumnsCreatePart","createPartPath","createPart","CreateTable","stateCreateUploadPath","stateCreateUpload","moveCreatePos","newColumnCreates","isSetCreateColShowPath","isSetCreateColShow","isShowPart","reactSetCreate","getReactSetCreate","CreateCopyTable","CreateBatchTable","count_error","fileOnload","workbook","XL","sheet","Sheets","sheet_to_json","mapData","newLine","readData","updateState","e","readAsBinaryString","sheetData","getData","columnWidths","option","datas","ExportJsonExcel","saveExcel","onImportExcel","info__state","info__param","info_show","downloadExcel","getDownloadExcelReact","submitExcel","getSubmitExcelReact","dataReact","getDataReact","mapDataPath","makeCount","t","reg","DetailLine","getFieldType","isHelpArray","spaceDetailPath","spaceDetail","moveDetailPos","newSpaceDetail","isSetDetailColShowPath","isSetDetailColShow","filterColumnsDetailLine","getSetDetail","columnDetailLine","mapStateToDetail","DownloadUnConnected","download","get_sheet_data","data_to_excel","down_text","nextProps","file_name","sheet_title","sheet_body","sheetHeader","warning","spin","sheet_data","Download","HelpUnConnected","getTextInfo","getStateShowPath","reactHelpPath","reactHelp","textHelpPath","dangerouslySetInnerHTML","__html","helpPath","getHelp","Help","FilterOldUnConnected","getFilters","filterValuePath","filterSpace","filterChoices","Option","Select","filterChoiceKey","filterText","FilterOld","FilterRowUnConnected","reactButtons","Button","valueSelected","reactList","FilterRow","FilterColUnConnected","FilterCol","FilterUnConnected","Filter","lastUpdate","DynamicFilterUnConnected","handleMenuClick","handleChange","dynamicFilter","valueOf","fatherId","father_id","dynamicFilterPath","updateChoices","getComponent","DynamicFilter","DynamicFiltersUnConnected","items","overlay","buttonsRender","rightButton","cloneElement","DynamicFilters","CountUnConnected","showCount","Count","JumpUnConnected","div","Jump","userAgent","navigator","vendor","opera","test","isMobileDevice","InputFrameworkFieldUnConnected","getFieldInfo","required","class_name_content","out_height","style_content","fieldInfo","no_show_input","no_show_border","InputFrameworkField","FieldChar","textHelp","mainTextHelp","Input","FieldText","FieldMultipleChoices","columnUpdatePath","columnCreatePath","line_id","newDefaultValue","choiceReacts","selected","selectedState","checked","valuePath","newValue","FieldSingleSmallChoices","getPartPath","record_id","key_id","multiple","target_value","FieldSingleDeepChoices","isLeaf","columnCreatePartPath","path_origin","loadData","selectedOptions","targetOption","use_path","count_path","children","changeOnSelect","FieldFile","getInputInfo","resultValue","inputInfo","originFile","fileInfo","back","fileSize","toFixed","sizeInfo","FieldMultipleFile","Dragger","Upload","FieldMultipleImage","fileList","originFileObj","uid","valueHandle","dataValue","dataNew","dataKeys","beforeUpload","information","LIST_IGNORE","customRequest","InboxOutlined","FieldBool","getColumnsCreate","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","defaultChecked","mainTitle","FieldImagePath","originImgReact","middle","getMiddle","getNowImgReact","FieldImageShow","webkitURL","getObjectURL","FieldDynamic","defaultValues","FieldTime","moment_obj","moment","getDefaultValue","locale","zh_CN","showTime","format","time_obj","FieldTimeYear","picker","FieldTimeDay","FieldSingleSearchChoices","extraParam","showSearch","filterOption","input","toLowerCase","FieldSingleDeepNewChoices","FieldReact","getReact","FieldDetailChar","FieldDetailMoney","FieldDetailHelpArray","valueReacts","FieldDetailBool","valueText","FieldDetailImgPath","valueImg","valueImgPath","FieldDetailLabel","FieldDetailLabelHelp","FieldDetailDynamic","FieldDetailFile","FieldDetailMap","FieldDetailChinaTime","FieldDetailYearTime","FieldDetailUtcTime","FieldDetailUserInfo","lineDatum","multipleFile","multipleChoice","SingleSmallChoice","singleSmallChoice","singSearchChoice","singDeepChoice","singNewDeepChoice","multipleImg","dynamic","time","timeYear","timeDay","fieldDetailMapping","labelHelp","conf","encodeURIComponent","conf2mapping","FormFooter","loginPath","logoImage","english","programmer","menu__sys","menu__base_account","email","age","text__update_title","disableDownload","menu__roles","menu__setting","follow","updated_at","value_choice","text__update_right","sub__sub_setting_choices","menu__front","file_count","order","columnsUpdate_1","disableDelete","menu__backend","filesize","name_origin","text__create_button","menu__cloud","file_type","path_local","path_cloud","relation_count","text__detail_right","filters","menu__robot_info","created_at","info_type","menu__robot_public","last_year","executing_year","last_month","executing_month","last_day","executing_day","last_hour","executing_hour","last_minute","executing_minute","admin","menu__submit","first_name","last_name","gender","date_of_birth","instagram","resume","how_did_you_hear","art_attention","favorite_ways","current_status","why_join","expectations","additional_info","submitted_at"],"mappings":"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","file":"static/js/main.7be8aa8f.chunk.js","sourcesContent":["import {storeHandles} from \"../store/handle\";\n\nlet actionUpdateState = {type: 'actionUpdateState'};\n\nfunction updateState(state, action) {\n    if (!action.state) return Object.assign({}, state);\n    return action.state;\n}\n\nstoreHandles.registerHandle(actionUpdateState, updateState);\nexport {actionUpdateState};","import {store} from '../store/store';\nimport {actionUpdateState} from \"./update-state\";\nimport $ from 'jquery';\nimport {message} from 'antd';\nimport {isMobile} from \"../assistant/album/album_tool\";\n\n// login\nclass Tools {\n\n    rightInfo = {};\n    message_style = isMobile ? {fontSize: '56px',} : {};\n\n    setTitle(title) {\n        $('title').text(title);\n    }\n\n    get(args) {\n        args['method'] = 'get';\n        this.ajax(args);\n    }\n\n    post(args) {\n\n        args['method'] = 'post';\n        this.ajax(args);\n    }\n\n    put(args) {\n        args['method'] = 'put';\n        this.ajax(args);\n    }\n\n    patch(args) {\n        args['method'] = 'patch';\n        this.ajax(args);\n    }\n\n    delete(args) {\n        args['method'] = 'delete';\n        // let url = args['url'];\n        // let last = url.charAt(url.length - 1);\n        // if (last === '/') {\n        //     url = url.slice(0, url.length - 1);\n        //     args['url'] = url;\n        // }\n\n        this.ajax(args);\n    }\n\n    ajax(args) {\n        let headers = args['headers'];\n        if (!headers) headers = this.getStateSpace(['setting', 'authenticate', 'headers',]);\n        args = Object.assign({}, args,);\n        if (headers) args['headers'] = headers;\n\n        // 添加ip地址\n        let path = args['path'];\n        if (path) args['url'] = this.get_url(path);\n\n        $.ajax(args);\n    }\n\n    show_error(data, columnsMap) {\n        const nowRole = this.getStateSpace(['setting', 'authenticate', 'role',]);\n        const nowRoleLanguage = this.getStateSpace(['setting', nowRole, 'language',], 1,);\n        let english2chines = {};\n\n        let textInfo = 'info';\n        let textError = 'error';\n        let Unknown = 'Unknown exception';\n        english2chines[textInfo] = '提示';\n        english2chines[textError] = '异常';\n        english2chines[Unknown] = '未知异常';\n\n\n        if (nowRoleLanguage === 1) {\n            textInfo = english2chines[textInfo];\n            textError = english2chines[textError];\n            Unknown = english2chines[Unknown];\n        }\n        columnsMap = Object.assign({}, columnsMap);\n        columnsMap['info'] = {title: textInfo,};\n\n        let info = null;\n\n        let res_json = data['responseJSON'];\n\n        if (res_json) {\n            if (typeof (res_json) === 'string') {\n                info = {'info': res_json};\n            } else {\n                info = Object.assign({}, res_json);\n            }\n\n            let keys = Object.keys(info);\n            let new_infos = {};\n            for (let i in keys) if (keys[i] !== 'fields_info') new_infos[keys[i]] = info[keys[i]];\n\n            Object.keys(new_infos).map(key => {\n                let keyInfo = key;\n                if (columnsMap && columnsMap[key]) keyInfo = columnsMap[key].title;\n                let temp = `${keyInfo}:${new_infos[key]}    `;\n                if (temp.length > 200) temp = Unknown;\n                // message.error(temp);\n\n                message.error({\n                    content: temp,\n                    style: this.message_style,\n                }).then(_ => {\n                });\n                return null;\n            });\n        } else {\n            let info = textError + '[' + data.responseText + ']';\n            if (info.length > 200) info = Unknown;\n            message.error({\n                content: info,\n                style: this.message_style,\n            }).then(_ => {\n            });\n            // message.error(info).then(r => {\n            // });\n        }\n    }\n\n    show_success(infos) {\n        if (!Array.isArray(infos)) infos = [infos];\n        for (let info of infos) message.success({\n            content: info,\n            style: this.message_style,\n        }).then(r => {\n        });\n    }\n\n    show_success_298(data) {\n        for (let key in data) {\n            if (!data.hasOwnProperty(key)) continue;\n            let leftInfo = key;\n            if (leftInfo === 'info') leftInfo = '提示';\n            let info = `${leftInfo}:${data[key]}`;\n            message.info(info);\n        }\n    }\n\n    show_success_299(data) {\n        for (let key in data) {\n            if (!data.hasOwnProperty(key)) continue;\n            let leftInfo = key;\n            if (leftInfo === 'info') leftInfo = '提示';\n            let info = `${leftInfo}:${data[key]}`;\n            message.success(info);\n        }\n    }\n\n    show_info(infos) {\n        if (!Array.isArray(infos)) infos = [infos];\n        for (let info of infos) message.info(info).then(() => {\n        });\n    }\n\n    get_ip() {\n        if (this._ip) return this._ip;\n        let http = window.location.protocol;\n        let host = window.location.host;\n        let ip = `${http}//${host}`;\n        ip = ip.replace(':3000', ':8000');\n        ip = ip.replace(':3001', ':8001');\n        this._ip = ip;\n        return ip;\n    }\n\n    get_url(path, ip = false, url_args = {}, pk = null) {\n\n        if (!ip) ip = this.get_ip();\n\n        if (!ip || !path || !url_args) return null;\n\n\n        if (path[0] !== '/') path = '/' + path;\n\n        let args = Object.assign({}, url_args,);\n        let keys = Object.keys(args);\n\n\n        let url_args_str = '';\n        for (let i = 0; i < keys.length; i++) {\n            let key = keys[i];\n            let temp = `${key}=${args[key]}&`;\n            url_args_str += temp;\n        }\n        if (url_args_str) url_args_str = url_args_str.slice(0, url_args_str.length - 1);\n\n        let url = `${ip}${path}`;\n        if (pk) url = `${url}${pk}`;\n\n        if (url_args_str) {\n            if (url.slice(url.length - 1, url.length) === '/') url = url.slice(0, url.length - 1);\n            url = `${url}/?${url_args_str}`;\n        }\n        if (JSON.stringify(url_args) === '{}') {\n            if (pk && url[url.length - 1] !== '/') url = url + '/';\n        }\n\n        return url;\n    }\n\n    // 拼接url路径\n    path_join(path, param = {}, pk = null) {\n        // 方便测试 免登录\n        let searchParams = new URLSearchParams(window.location.href);\n        let super_username = searchParams.get('super_username');\n        if (super_username) param['super_username'] = super_username;\n\n\n        if (!path) return path;\n        //是否携带主机地址\n        let state = false;\n        if (path.length > 7 && path.slice(0, 7) === 'http://') state = true;\n        if (path.length > 8 && path.slice(0, 8) === 'https://') state = true;\n\n\n        // 处理基础路径 media  => /media/ 未加http/https时才允许自动加\n        if (!state) {\n            if (!state && path[0] !== '/') path = '/' + path;\n            // 结尾是否没有斜杠\n            let state_end = path[path.length - 1] !== '/';\n\n            //路径是否是访问静态文件\n            let state_static = false;\n            if (this.strIsInStr('media/', path)) state_static = true;\n            if (this.strIsInStr('static/', path)) state_static = true;\n\n            if (state_end && !state_static) path = path + '/';\n        }\n\n        //拼接pk\n        if (pk) path = `${path}${pk}/`;\n\n        //拼接get参数 {a:1, b:2, } => ?a=1&b=2\n        param = Object.assign({}, param,);\n        let keys = Object.keys(param);\n        let param_str = '';\n        for (let i = 0; i < keys.length; i++) {\n            let key = keys[i];\n            let temp = `${key}=${param[key]}&`;\n            param_str += temp;\n        }\n        if (param_str) {\n            param_str = param_str.slice(0, param_str.length - 1);//去掉最后面的&\n            param_str = '?' + param_str;\n        }\n        if (param_str) path = path + param_str\n\n        //拼接ip\n        if (!state) {\n            let ip = this.get_ip();\n            path = ip + path;\n        }\n        return path;\n    }\n\n    getStateReturnDefaultValue(space, null2value,) {\n        if (space || null2value === false) return space;\n        return null2value;\n    }\n\n    /**\n     * @param spacePath\n     * @param {*} [null2value=false] - The parameter can be of any type.\n     */\n    getStateSpace(spacePath, null2value = false,) {\n        if (!spacePath) return this.getStateReturnDefaultValue(null, null2value,);\n        //通过路径从state存储空间获得子空间.例spacePath = ['setting', 'table',].\n        let space = store.getState();\n        for (let path of spacePath) {\n            if (!space) return this.getStateReturnDefaultValue(null, null2value,);\n            space = space[path];\n        }\n        if (null2value && !space) return null2value;\n        return this.getStateReturnDefaultValue(space, null2value,);\n    }\n\n    setStateSpace(spacePath, space) {\n        if (!spacePath) return null;\n        let updateFatherSpace = (fatherSpacePath, subKey, subSpace) => {\n            let fatherSpace = this.getStateSpace(fatherSpacePath);\n            fatherSpace = Object.assign({}, fatherSpace);\n            fatherSpace[subKey] = subSpace;\n            return fatherSpace;\n        };\n\n\n        let subSpace = space;\n        let fatherSpacePath = spacePath.slice(0, spacePath.length - 1);\n\n        for (let i = spacePath.length - 1; i >= 0; i--) {\n            let subKey = spacePath[i];\n\n            subSpace = updateFatherSpace(fatherSpacePath, subKey, subSpace);\n            fatherSpacePath = fatherSpacePath.slice(0, fatherSpacePath.length - 1);\n        }\n        let action = Object.assign({}, actionUpdateState, {state: subSpace});\n        store.dispatch(action);\n    }\n\n    getAttribute(targetObject, attributePath, defaultValue,) {\n        // 准备返回值\n        let value;\n        value = defaultValue;\n\n        // 母数据不存在\n        if (!targetObject) return value;\n\n        // 非数组路径修正\n        if (!Array.isArray(attributePath)) attributePath = [attributePath];\n\n        // 初始化当前值为母数据\n        let attribute = targetObject;\n\n        // 逐步获取当前值\n        const allowType = [\n            '[object Object]',\n            '[object Location]',\n        ];\n        for (let i = 0; i < attributePath.length; i++) {\n            let path = attributePath[i];\n            attribute = attribute[path];\n\n            // 当前值不支持继续迭代,返回默认值  除非后面无需迭代了\n            const attributeType = Object.prototype.toString.call(attribute);\n            if (!this.isInArray(allowType, attributeType) && i < attributePath.length - 1) {\n                return value;\n            }\n        }\n\n        if (attribute === undefined) return value;\n        value = attribute;\n        return value;\n    }\n\n    isInArray(array, value) {\n        let index = array.findIndex(item => item === value);\n        return index !== -1;\n    }\n\n    strIsInStr(str1, str2) {\n        let state;\n        state = str2.indexOf(str1);\n        return state !== -1;\n    }\n\n    utc_to_china(utc_str) {\n        if (!utc_str) return null;\n        let date_obj = new Date(utc_str);\n        date_obj.setHours(date_obj.getHours() + 8);\n        let year = date_obj.getFullYear();\n        let month = date_obj.getMonth() + 1;\n        let day = date_obj.getDate();\n\n        let hours = date_obj.getHours();\n        let minutes = date_obj.getMinutes();\n        return `${year}年${month}月${day}日 ${hours}点${minutes}分`;\n    }\n\n    china_to_china(utc_str) {\n        if (!utc_str) return null;\n        let date_obj = new Date(utc_str);\n        date_obj.setHours(date_obj.getHours());\n        let year = date_obj.getFullYear();\n        let month = date_obj.getMonth() + 1;\n        let day = date_obj.getDate();\n\n        let hours = date_obj.getHours();\n        let minutes = date_obj.getMinutes();\n        return `${year}年${month}月${day}日 ${hours}点${minutes}分`;\n    }\n\n    getUrlParam(key) {\n        let query = window.location.search.substring(1);\n        let values = query.split(\"&\");\n        for (let i = 0; i < values.length; i++) {\n            let pair = values[i].split(\"=\");\n            if (pair[0] === key) {\n                return pair[1];\n            }\n        }\n        return null;\n    }\n\n    roleInfoHandler(roleInfo) {\n        let setting = this.getStateSpace(['setting']);\n        // 未注册的角色过滤掉\n        let temp = [];\n        for (let item of roleInfo) if (setting[item.code]) temp.push(item);\n        return temp;\n    }\n\n    //生成从start到end的随机数\n    getRandomInt(start, end) {\n        switch (arguments.length) {\n            case 1:\n                return parseInt((Math.random() * start + 1) + '', 10);\n            case 2:\n                return parseInt(Math.random() * (end - start + 1) + start, 10);\n            default:\n                return 0;\n        }\n    }\n\n    // 触发器函数 更新当前列表\n    update(param) {\n        let spacePrivatePath = this.getAttribute(param, ['spacePrivatePath',]);\n        let stateTableOnloadPath = spacePrivatePath.concat(['stateTableOnload']);\n        this.setStateSpace(stateTableOnloadPath, 'page');\n    }\n}\n\nlet tool = new Tools();\n\nexport {tool,}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport './checkout_page.css';\nimport {Button} from \"antd\";\nimport {tool} from \"../../tools/tools\";\n\n\n//切换页面\nclass CheckoutPageUnConnected extends React.Component {\n    onClick(key) {\n        let nowPagePath = ['nowPage',];\n        tool.setStateSpace(nowPagePath, key,);\n    }\n\n    render() {\n        let pageMap = tool.getStateSpace(['setting', 'pageMap',], {},);\n\n        let buttons = [];\n        for (let key in pageMap) {\n            let value = pageMap[key];\n            let title = tool.getAttribute(value, 'title', '标题未配置',);\n            let onTitle = tool.getAttribute(value, 'onTitle', false,);\n            // let react = tool.getAttribute(value, 'react', null,);\n            if (!onTitle) continue;\n\n            buttons.push(<Button type={'link'} key={key} onClick={() => this.onClick(key)}>\n                {title}\n            </Button>);\n        }\n\n        // 私有jump按钮\n        const role = tool.getStateSpace(['setting', 'authenticate', 'role',]);\n        const jumps = tool.getStateSpace(['setting', role, 'jumps',], [],);\n        for (const jump of jumps) {\n            const key = jump[0];\n            const help = jump[1];\n            buttons.push(<Button type={'link'} key={key} onClick={() => this.onClick(key)}>\n                {help}\n            </Button>);\n        }\n\n        return <div className={'checkout_page-button'}>{buttons}</div>\n    }\n}\n\nfunction state_to_page(state) {\n\n    return {};\n}\n\nfunction page_to_state(_) {\n    return {};\n}\n\nlet CheckoutPage = connect(state_to_page, page_to_state)(CheckoutPageUnConnected);\n\nexport {CheckoutPage}\n","export default __webpack_public_path__ + \"static/media/1.a257951a.jpeg\";","import React from 'react';\nimport {Affix, Avatar, Button, Divider, Input, Layout, Menu, Modal, Popconfirm, Radio,} from 'antd';\nimport {RootTable} from \"../power-table/power-table\";\nimport {CheckoutPage} from \"./checkout_page/checkout_page\";\n\nimport {connect} from 'react-redux';\nimport {tool} from \"../tools/tools\";\nimport {setting} from \"../../setting\";\nimport './layout.css';\nimport file from './1.jpeg';\nimport UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\nimport Cropper from \"react-cropper\";\nimport $ from \"jquery\";\nimport {isMobile} from \"../assistant/album/album_tool\";\nimport {DeleteOutlined, ToolOutlined} from \"@ant-design/icons\";\n\nlet SubMenu = Menu.SubMenu;\nconst {Header, Content, Sider, Footer,} = Layout;\n\nfunction clearAuthenticate() {\n    document.cookie = \"jwt_token='';Path=/\";\n    localStorage.removeItem('selectedCode');\n    tool.setStateSpace(['setting'], setting);\n}\n\n// let menuKeyInt = 1; \"react\"' 'react' children\nlet pos = 0;\n\n//资源菜单栏 换个头像 点击换图 提交 已登录 修改密码 退出 red close 关闭目录\nclass ComponentLayout extends React.Component {\n\n    constructor(props) {\n        super(props);\n        // this.updateTableData = this.updateTableData.bind(this);\n        this.onClickMenu = this.onClickMenu.bind(this);\n        this.getMenus = this.getMenus.bind(this);\n        this.getContent = this.getContent.bind(this);\n        this.getLoginOut = this.getLoginOut.bind(this);\n        this.getChoiceButton = this.getChoiceButton.bind(this);\n        this.fileChange = this.fileChange.bind(this);\n        this.state = {\n            // file: null,\n            fileName: '默认.jpg',\n            src: null,\n        }\n        this.getMenuKey = spacePrivatePath => {\n            // console.log('line--', lineInfo)\n            // menuKeyInt += 1;\n            // return menuKeyInt;\n            // console.log(lineInfo)\n            // return lineInfo.name + lineInfo.path;\n            // return lineInfo.name;\n            // console.log('sp---------', spacePrivatePath)\n            return spacePrivatePath.toString();\n        };\n    }\n\n    onClickMenu(lineSpacePath, isPath, paramFather = false) {\n        // lineSpacePath 选中的菜单空间\n        // isPath 是否资源菜单\n        // paramFather 非手动调用参数\n\n        //选中的资源表格空间里面的表格数据加载状态(stateTableOnload)修改为true\n        let spacePrivateKey = `spacePrivate__root`; //根表格的私有空间key\n        let spacePrivatePath = lineSpacePath.concat(['table', spacePrivateKey,]);\n        // console.log('sp', spacePrivatePath)\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        spacePrivate = Object.assign({}, spacePrivate, {\n            stateTableOnload: true,\n        });\n        tool.setStateSpace(spacePrivatePath, spacePrivate);\n\n        //更新选中的资源\n        // let lineInfo = tool.getStateSpace(lineSpacePath);\n        // let menuKey = this.getMenuKey(lineInfo);\n        let menuKey = this.getMenuKey(spacePrivatePath);\n\n        let setting = tool.getStateSpace(['setting',]);\n        let selectedMenu = tool.getAttribute(setting, ['selectedMenu',]);\n        if (isPath) {\n            selectedMenu = Object.assign({}, selectedMenu, {\n                selectedKey: menuKey,\n                selectedSpacePath: lineSpacePath,\n                paramFather: paramFather,\n            });\n        } else {\n            selectedMenu = Object.assign({}, selectedMenu, {\n                selectedGroup: menuKey,\n                selectedGroupSpacePath: lineSpacePath,\n            });\n        }\n\n        setting = Object.assign({}, setting, {\n            selectedMenu: selectedMenu,\n            onClickMenu: this.onClickMenu,\n        });\n\n        tool.setStateSpace(['setting',], setting);\n    }\n\n    //  开发模式 编辑head\n    getReactHeadEditButton(spacePath) {\n        let open_edit = tool.getStateSpace(['open_edit']);\n        if (!open_edit) return null;\n\n        // 编辑菜单\n        let isSetHeadShowPath = spacePath.concat(['isSetHeadShow']);\n        let isSetHeadShow = tool.getStateSpace(isSetHeadShowPath, false);\n\n        let reacts = [];\n\n        // 编辑框标题\n        reacts.push(<div key={'edit_title'}>\n            <Divider>编辑头部信息</Divider>\n        </div>);\n\n        // 头部标题\n        let spaceTitlePath = spacePath.concat(['systemTitle']);\n        let spaceTitle = tool.getStateSpace(spaceTitlePath);\n\n        let webTitlePath = spacePath.concat(['webTitle']);\n        let webTitle = tool.getStateSpace(webTitlePath);\n\n\n        reacts.push(<table style={{textAlign: 'left',}} key={'table'}>\n            <thead>\n\n            {/*    /!*第1行 系统标题*!/*/}\n            <tr>\n                <th>系统标题:</th>\n                <th>\n                    <input\n                        onBlur={event => {\n                            let value = event.target.value;\n                            tool.setStateSpace(spaceTitlePath, value);\n                        }}\n                        defaultValue={spaceTitle}\n                    />\n                </th>\n            </tr>\n\n            {/*    /!*第2行 web标题*!/*/}\n            <tr>\n                <th>浏览器标签标题:</th>\n                <th>\n                    <input\n                        onBlur={event => {\n                            let value = event.target.value;\n                            tool.setStateSpace(webTitlePath, value);\n                            tool.setTitle(value);\n                        }}\n                        defaultValue={webTitle}\n                    />\n                </th>\n            </tr>\n\n\n            </thead>\n        </table>);\n\n\n        let content = <Modal\n            visible={isSetHeadShow}\n            open={isSetHeadShow}\n            onCancel={() => tool.setStateSpace(isSetHeadShowPath, false,)}\n            footer={null}\n        >\n            <br/><br/>\n            {reacts}\n        </Modal>\n\n\n        let react;\n        react = <div style={{\n            textAlign: 'center',\n        }}>\n            {content}\n            <Button\n                onClick={() => {\n                    tool.setStateSpace(isSetHeadShowPath, true,);\n                }}\n                style={{width: '100%',}}\n            ><ToolOutlined/>设置头</Button>\n        </div>;\n        return react;\n    }\n\n    //  开发模式 编辑菜单\n    getReactMenuEditButton(spacePath) {\n        let space = tool.getStateSpace(spacePath);\n\n        // 菜单位置移动\n        const moveMenuPos = (menuKey, direction = -1) => {\n            // direction=-1 上移 direction=1 下移\n            let space = tool.getStateSpace(spacePath);\n            let spaceArray = Object.keys(space);\n            let newMenus = [];\n            const sign = 'menu__';\n            for (const key of spaceArray) {\n                if (!key.startsWith(sign)) continue;\n                newMenus.push(key);\n            }\n            let index = newMenus.indexOf(menuKey);\n\n            let indexTarget = index + direction;\n            if (indexTarget < 0) {\n                tool.show_info('已经在最顶部.');\n                return;\n            }\n            if (indexTarget > newMenus.length - 1) {\n                tool.show_info('已经在最底部.');\n                return;\n            }\n\n            let temp = newMenus[indexTarget];\n            newMenus[indexTarget] = newMenus[index];\n            newMenus[index] = temp;\n\n            let newSpace = {};\n            for (const _key of newMenus)\n                newSpace[_key] = space[_key];\n\n            for (const _key of spaceArray)\n                if (!_key.startsWith(sign)) newSpace[_key] = space[_key];\n            tool.setStateSpace(spacePath, newSpace);\n        };\n\n        let reacts = [];\n\n        // 菜单列表\n        let reactMenus = [];\n        for (const menuKey in space) {\n            const sign = 'menu__';\n            if (!menuKey.startsWith(sign)) continue;\n            let menuSpace = space[menuKey];\n            let menuSpacePath = spacePath.concat([menuKey]);\n            let menuUrlPath = menuSpacePath.concat(['table', 'path']);\n            let url = tool.getStateSpace(menuUrlPath);\n\n            // 是否文件夹\n            let isDir = false;\n            let sub = tool.getAttribute(menuSpace, ['sub'], false);\n            if (sub) isDir = true;\n\n            let menuSpaceHiddenPath = spacePath.concat([menuKey, 'hidden',]);\n            let menuSpaceHidden = tool.getStateSpace(menuSpaceHiddenPath);\n            if (!menuSpaceHidden) menuSpaceHidden = false;\n\n            reactMenus.push(<div key={menuKey}>\n                <Divider>{menuSpace['name']}{isDir ? '(文件夹)' : ''}</Divider>\n\n\n                {/*删除菜单*/}\n                <div\n                    style={{float: 'right',}}>\n                    <Popconfirm\n                        title=\"删除这个菜单吗?\"\n                        description=\"删除这个菜单吗?\"\n                        onConfirm={() => {\n                            let newSpace = {};\n                            for (const _menuKey in space) {\n                                if (_menuKey === menuKey) continue;\n                                newSpace[_menuKey] = space[_menuKey];\n                            }\n                            tool.setStateSpace(spacePath, newSpace);\n                        }}\n                        onCancel={() => tool.show_info('已取消')}\n                        okText=\"删除\"\n                        cancelText=\"不要\"\n                    >\n                        <DeleteOutlined style={{color: 'red',}}/>\n                    </Popconfirm></div>\n\n\n                <table style={{textAlign: 'left',}}>\n                    <thead>\n\n                    {/*第1行 是否显示*/}\n                    <tr>\n                        <th>是否显示:</th>\n                        <th><Radio.Group\n                            onChange={event => {\n                                tool.setStateSpace(menuSpaceHiddenPath, event.target.value,);\n                            }}\n                            value={menuSpaceHidden}\n                            style={{\n                                marginLeft: '10px',\n                            }}\n                        >\n                            <Radio value={false}>显示</Radio>\n                            <Radio value={true}>隐藏</Radio>\n                        </Radio.Group></th>\n                    </tr>\n\n                    {/*第2行 修改名称*/}\n                    <tr>\n                        <th>\n                            修改名称:\n                        </th>\n                        <th>\n                            <Input\n                                onBlur={event => {\n                                    let menuNamePath = menuSpacePath.concat(['name']);\n                                    tool.setStateSpace(menuNamePath, event.target.value,);\n                                }}\n                                defaultValue={menuSpace['name']}\n                            />\n                        </th>\n                    </tr>\n\n                    {/*第3行 url*/}\n                    <tr>\n                        <th>\n                            修改url:\n                        </th>\n                        <th>\n                            <Input\n                                onBlur={event => {\n                                    tool.setStateSpace(menuUrlPath, event.target.value,);\n                                }}\n                                defaultValue={url}\n                            />\n                        </th>\n                    </tr>\n\n                    {/*第4行 类型*/}\n                    <tr>\n                        <th>类型:</th>\n                        <th><Radio.Group\n                            onChange={event => {\n                                let value = event.target.value;\n                                if (value === isDir) return;\n\n                                // 转化为文件夹\n                                if (value) {\n                                    let newMenuSpace = {sub: {},};\n                                    for (const _key in menuSpace) newMenuSpace[_key] = menuSpace[_key];\n                                    tool.setStateSpace(menuSpacePath, newMenuSpace);\n                                } else {// 转化为菜单\n                                    let newMenuSpace = {\n                                        table: {\n                                            path: 'xxx/yyy/',\n                                            columns: {\n                                                col: {title: '演示字段',},\n                                            },\n                                            columnsDetailLine: {\n                                                col: {title: '演示字段',},\n                                            },\n                                        },\n                                    };\n                                    for (const _key in menuSpace) if (_key !== 'sub') newMenuSpace[_key] = menuSpace[_key];\n                                    tool.setStateSpace(menuSpacePath, newMenuSpace);\n                                }\n\n                            }}\n                            value={isDir}\n                            style={{\n                                marginLeft: '10px',\n                            }}\n                        >\n                            <Radio value={false}>菜单</Radio>\n                            <Radio value={true}>菜单夹</Radio>\n                        </Radio.Group></th>\n                    </tr>\n\n                    {/*第5行 位置*/}\n                    <tr>\n                        <th>\n                            位置:\n                        </th>\n                        <th>\n                            <Button\n                                onClick={() => moveMenuPos(menuKey, -1)}\n                                style={{width: '50%',}}>上移</Button>\n                            <Button\n                                onClick={() => moveMenuPos(menuKey, 1)}\n                                style={{width: '50%',}}>下移</Button>\n                        </th>\n                    </tr>\n\n                    </thead>\n                </table>\n\n\n            </div>);\n        }\n\n        // 增加菜单\n        let random = Math.random() * 100000;\n        random = Math.floor(random);\n        reactMenus.push(<div key={`menu__${random}`} style={{width: '100%',}}>\n            <Divider/>\n            <Button\n                onClick={() => {\n                    let space = tool.getStateSpace(spacePath);\n                    let newData = {};\n                    let random = Math.random() * 100000;\n                    random = Math.floor(random);\n                    newData[`menu__${random}`] = {\n                        name: '新菜单',\n                        table: {\n                            path: 'xxx/xxx/',\n                            columns: {\n                                field_test: {title: '新字段',},\n                            },\n                        },\n                    };\n                    let newSpace = Object.assign(space, newData);\n                    tool.setStateSpace(spacePath, newSpace);\n                }}\n                style={{width: '100%',}}>增加菜单</Button>\n            <Divider/>\n        </div>);\n        reacts.push(reactMenus);\n\n\n        // 编辑菜单\n        let isSetMenuShowPath = spacePath.concat(['isSetMenuShow']);\n        let isSetMenuShow = tool.getStateSpace(isSetMenuShowPath, false);\n\n        let content = <Modal\n            visible={isSetMenuShow}\n            open={isSetMenuShow}\n            onCancel={() => tool.setStateSpace(isSetMenuShowPath, false,)}\n            footer={null}\n        >\n            <br/><br/>\n            {reacts}\n        </Modal>\n\n\n        let style = {\n            width: '100%',\n            height: '100%',\n        };\n        let setLine;\n        setLine = <div style={style}>\n            {content}\n            <Button\n                onClick={() => tool.setStateSpace(isSetMenuShowPath, true,)}\n                style={{width: '100%', height: '100%',}}\n            ><ToolOutlined/>设置菜单</Button>\n        </div>;\n        return setLine;\n    }\n\n    // 开发模式 菜单设置\n    getSetLine(spacePath) {\n        let open_edit = tool.getStateSpace(['open_edit']);\n        if (!open_edit) return null;\n\n        let setLine;\n        let style = {\n            height: '50px',\n        };\n        setLine = <div style={style}>\n            {/*菜单设置按钮*/}\n            {this.getReactMenuEditButton(spacePath)}\n        </div>;\n        return setLine;\n    }\n\n    getMenus(spacePath) {\n        if (!spacePath) {\n            let rolePath = ['setting', 'authenticate', 'role',];\n            let role = tool.getStateSpace(rolePath);\n            if (!role) return null;\n\n            spacePath = ['setting', role,];\n        }\n\n        let menuInfo = tool.getStateSpace(spacePath);\n        // console.log('menuINfo', menuInfo)\n        let getMenu = (lineSpacePath) => {\n            let lineInfo = tool.getStateSpace(lineSpacePath);\n            let react;\n\n            let sub = tool.getAttribute(lineInfo, 'sub',);\n            let name = tool.getAttribute(lineInfo, 'name',);\n            let spacePrivateKey = `spacePrivate__root`; //根表格的私有空间key\n            let spacePrivatePath = lineSpacePath.concat(['table', spacePrivateKey,]);\n            // let key = this.getMenuKey(lineInfo);\n            let key = this.getMenuKey(spacePrivatePath);\n\n            // 菜单文字\n            let reactName = <div>{name}</div>;\n            if (isMobile) reactName = <div\n                style={{fontSize: '240%',}}\n            >{name}</div>;\n\n            // 菜单style\n            let menuStyle = {\n                width: '100%',\n                marginBottom: '20px',\n            };\n\n            if (sub) {\n                react = <SubMenu\n                    style={menuStyle}\n                    key={key}\n                    title={reactName}\n                    onClick={() => this.onClickMenu(lineSpacePath)}\n                >\n                    {this.getMenus(lineSpacePath.concat(['sub']))}\n                </SubMenu>;\n            } else {\n                // console.log('name-key----', name, key)\n                react = <Menu.Item\n                    key={key}\n                    onClick={() => this.onClickMenu(lineSpacePath, true,)}\n                    style={menuStyle}\n                >\n                    {reactName}\n                </Menu.Item>\n            }\n            return react;\n        };\n\n        let menuReact = [];\n        for (let lineKey in menuInfo) {\n            if (!menuInfo.hasOwnProperty(lineKey)) continue;\n            if (lineKey.slice(0, 6) !== 'menu__') continue;\n            let hidden = tool.getAttribute(menuInfo[lineKey], 'hidden', false);\n            if (hidden) continue;\n\n            menuReact.push(getMenu(spacePath.concat([lineKey])));\n        }\n        menuReact.push(<div key={'setMenus'}>\n            {this.getSetLine(spacePath)}\n        </div>)\n        return menuReact;\n    }\n\n    clearAuthenticate() {\n        // document.cookie = \"jwt_token='';Path=/\";\n        // tool.setStateSpace(['setting'], setting);\n        clearAuthenticate();\n    }\n\n    getLoginOut() {\n        let authenticatePath = ['setting', 'authenticate',];\n        let authentication = tool.getStateSpace(authenticatePath);\n        let username = tool.getAttribute(authentication, 'username');\n        let name = tool.getAttribute(authentication, 'name');\n\n        let onClick = () => {\n            // document.cookie = \"jwt_token='';Path=/\";\n            // tool.setStateSpace(['setting'], setting);\n            this.clearAuthenticate();\n            tool.show_info('已退出系统');\n        };\n        if (isMobile) {\n            return <div>\n\n                {/*名字*/}\n                <div style={{\n                    display: 'inline-block',\n                    position: 'absolute',\n                    top: '5%',\n                    right: `${pos + 100}px`,\n                    height: '90%',\n                }}>\n                    <div style={{\n                        fontSize: '120%',\n                        color: 'white',\n                        border: 'white solid 3px',\n                        borderRadius: '10px',\n                        textAlign: 'center',\n                        width: '80px',\n                        overflow: 'auto',\n                    }}>{name}</div>\n                </div>\n\n                {/*退出*/}\n                <div style={{\n                    display: 'inline-block',\n                    position: 'absolute',\n                    top: '5%',\n                    right: `${pos + 80}px`,\n                    height: '80%',\n                }}>\n                    <Button\n                        type={'link'}\n                        onClick={onClick}\n                        style={{\n                            position: 'absolute',\n                            height: '80%',\n\n                            fontSize: '140%',\n                            color: 'white',\n                            border: 'white solid 3px',\n                            borderRadius: '10px',\n                        }}\n                    >退出</Button>\n                </div>\n            </div>\n        } else {\n            return <div className={'login-out'}>\n                <div className={'login-out-button'}><Button type={'link'}\n                                                            onClick={onClick}>退出</Button>\n                </div>\n                <div className={'username-info'}>{name}({username})已登录</div>\n            </div>\n        }\n    }\n\n    getChangePassword() {\n        let setPasswordPath = ['setting', 'setPassword',];\n        let stateShowPath = ['setting', 'setPassword', 'stateShow',];\n        let oldPasswordPath = ['setting', 'setPassword', 'oldPassword',];\n        let newPasswordPath = ['setting', 'setPassword', 'newPassword',];\n\n        let closeAndClear = () => {\n            let setPassword = tool.getStateSpace(setPasswordPath);\n            setPassword = Object.assign({}, setPassword, {\n                stateShow: false,\n                oldPassword: '',\n                newPassword: '',\n            });\n            tool.setStateSpace(setPasswordPath, setPassword);\n        };\n        let handleOk = () => {\n            let oldPassword = tool.getStateSpace(oldPasswordPath);\n            let newPassword = tool.getStateSpace(newPasswordPath);\n            let data = {\n                old_password: oldPassword,\n                new_password: newPassword,\n            };\n            let setPath = tool.getStateSpace(['setting', 'authenticate', 'setPath',]);\n            // console.log('set---', setPath)\n            let param_request = {\n                path: setPath,\n                data: data,\n                success: data => {\n                    tool.show_success(['修改成功！']);\n                    closeAndClear();\n\n                    // 清除登录信息\n                    this.clearAuthenticate();\n\n                },\n                error: data => {\n                    tool.show_error(data);\n                },\n            };\n            tool.post(param_request);\n        };\n\n\n        // 显示状态\n        let stateShow = tool.getStateSpace(stateShowPath);\n\n        // 输入框内容\n        let oldPassword = tool.getStateSpace(oldPasswordPath);\n        if (oldPassword === undefined) oldPassword = '';\n        let newPassword = tool.getStateSpace(newPasswordPath);\n        if (newPassword === undefined) newPassword = '';\n\n        // 修改密码组件\n        let reactChangePassword;\n        if (isMobile) {\n            reactChangePassword = <div style={{\n                // border: 'white 2px solid',\n                position: 'absolute',\n                height: '90%',\n                top: '5%',\n                right: `${pos + 200}px`,\n                // borderRadius: '10px',\n            }}>\n                <Button\n                    type={'link'}\n                    onClick={() => tool.setStateSpace(stateShowPath, true)}\n                    style={{\n                        fontSize: '140%',\n                        color: 'white',\n                        border: 'white solid 3px',\n                        borderRadius: '10px',\n                    }}\n                >\n                    修改密码\n                </Button></div>;\n        } else {\n            reactChangePassword = <div className={'login-out-button'}>\n                <Button\n                    type={'link'}\n                    onClick={() => tool.setStateSpace(stateShowPath, true)}\n                >\n                    修改密码\n                </Button></div>;\n        }\n\n        return (<div className={'login-out'}>\n            {reactChangePassword}\n            <Modal title=\"修改密码\"\n                   open={stateShow}\n                   visible={stateShow}\n                   onOk={handleOk}\n                   onCancel={() => closeAndClear()}\n                   okText={'提交'}\n                   cancelText={'关闭'}\n                   width={'300px'}\n            >\n                <Input.Password\n                    placeholder=\"输入旧密码\"\n                    addonBefore={'旧密码'}\n                    style={{width: '80%',}}\n                    value={oldPassword}\n                    // value={6}\n                    onChange={event => {\n                        let value = event.target.value;\n                        tool.setStateSpace(oldPasswordPath, value);\n                    }}\n                />\n                <br/><br/>\n                <Input.Password\n                    placeholder=\"输入新密码\"\n                    addonBefore={'新密码'}\n                    style={{width: '80%',}}\n                    value={newPassword}\n                    onChange={event => {\n                        let value = event.target.value;\n                        tool.setStateSpace(newPasswordPath, value);\n                    }}\n                />\n            </Modal>\n        </div>);\n    }\n\n    getContent() {\n        let lineSpacePath = ['setting', 'selectedMenu', 'selectedSpacePath',];\n        let lineSpace = tool.getStateSpace(lineSpacePath);\n        let react = tool.getAttribute(lineSpace, 'react');\n        if (react) return react();\n        if (!lineSpace) return null;\n        return <RootTable/>;\n    }\n\n    fileChange = event => {\n        const MAX_FILE_SIZE = 5 * 1024 * 1024 // 文件最大限制为5M 裁剪\n        let files = event.target.files;\n        let file = null;\n        if (files.length > 0) file = event.target.files[0];\n        if (!file) return null;\n        if (file.size > MAX_FILE_SIZE) {\n            tool.show_info('文件过大');\n            return null;\n        }\n\n        const fileReader = new FileReader();\n        fileReader.onload = event => {\n            const dataURL = event.target.result\n            this.setState({\n                src: dataURL,\n                fileName: file.name,\n            })\n        };\n        fileReader.readAsDataURL(file);\n    }\n\n    getChoiceButton() {\n        if (this.state.isShow) return null;\n\n        let inputId = Math.ceil(Math.random() * 10).toString();\n        // 点击换图的样式表\n        let buttonStyle = {};\n        if (isMobile) buttonStyle = {\n            fontSize: '50px',\n            height: '80px',\n            marginTop: '10px',\n        };\n        return (\n\n            <div className={'fields-img-path-button'}>\n                <input\n                    id={inputId}\n                    className={'file-input'}\n                    type={'file'}\n                    onChange={this.fileChange}\n                    accept={\"image/gif, image/jpeg,image/jpg,image/png,image/bmp,\"}\n                />\n                <div className={'fields-img-path-button-one'}>\n                    <Button\n                        type={'primary'}\n                        onClick={() => $(`#${inputId}`).click()}\n                        style={buttonStyle}\n                    >\n                        点击换图\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n\n    getCover() {\n        let coverPath = ['setting', 'authenticate', 'responseData', 'user_info', 'cover',];\n        let cover = tool.getStateSpace(coverPath);\n\n        let setCoverPath = ['setting', 'setCover',];\n        let stateShowPath = ['setting', 'setCover', 'stateShow',];\n\n        let closeAndClear = () => {\n            let setCover = tool.getStateSpace(setCoverPath);\n            setCover = Object.assign({}, setCover, {\n                stateShow: false,\n                cover: '',\n            });\n            tool.setStateSpace(setCoverPath, setCover);\n        };\n\n        let handleOk = () => {\n            let canvas;\n            canvas = this.cropper['getCroppedCanvas']();\n            if (!canvas) {\n                tool.show_info('没有内容.')\n                return;\n            }\n            canvas.toBlob(async blob => {\n                let file = new window.File([blob], this.state.fileName, {type: 'image/jpeg'});\n                let data = new FormData();\n                data.append('cover', file);\n                let setPath = tool.getStateSpace(['setting', 'authenticate', 'setPath',]);\n                let param_request = {\n                    path: setPath,\n                    data: data,\n                    contentType: false,\n                    processData: false,\n                    success: data => {\n                        tool.setStateSpace(coverPath, data['src']);\n                        tool.show_success(['修改成功！']);\n                        closeAndClear();\n                    },\n                    error: data => {\n                        tool.show_error(data);\n                    },\n                };\n                tool.post(param_request);\n            })\n        };\n\n        // 显示状态\n        let stateShow = tool.getStateSpace(stateShowPath);\n        if (cover) cover = tool.path_join(cover);\n\n        // 计算src\n        let src = this.state.src;\n        if (!src) src = cover;\n\n        let divStyle = {};\n        if (isMobile) divStyle = {\n            // border: 'red solid 1px',\n            // wight: '100px',\n            height: '90%',\n            top: '5%',\n            position: \"absolute\",\n            right: '5px',\n            // borderRadius: '10px',\n            // overflow: 'hidden',\n        };\n\n        // 头像\n        let avatar = <div onClick={() => tool.setStateSpace(stateShowPath, true)}>\n            <Avatar shape=\"square\" src={cover} icon={<UserOutlined/>}/>\n        </div>;\n        if (isMobile) avatar = <img\n            onClick={() => tool.setStateSpace(stateShowPath, true)}\n            src={cover} alt={'头像'}\n            style={{\n                height: '100%',\n                width: 'auto',\n                position: \"absolute\",\n                right: '0',\n                borderRadius: '10px',\n            }}/>;\n        // 提交和取消的样式表\n        let submitStyle = {};\n        if (isMobile) submitStyle = {\n            fontSize: '50px',\n            height: '80px',\n        };\n\n        return <div className={isMobile ? '' : 'login-cover'} style={divStyle}>\n            {avatar}\n            <Modal\n                title={<div style={{\n                    fontSize: isMobile ? '240%' : '100%',\n                    textAlign: 'center',\n                }}>换个头像</div>}\n                open={stateShow}\n                visible={stateShow}\n                onOk={handleOk}\n                onCancel={() => tool.setStateSpace(stateShowPath, false)}\n                okText={<div style={submitStyle}>提交</div>}\n                cancelText={<div style={submitStyle}>关闭</div>}\n                width={isMobile ? '80%' : '300px'}\n                footer={<div>\n                    <Button onClick={() => tool.setStateSpace(stateShowPath, false)} style={submitStyle}>取消</Button>\n                    <Button onClick={handleOk} style={submitStyle} type={'primary'}>提交</Button>\n                </div>}\n            >\n                <div className=\"cropper-container\">\n                    <Cropper\n                        src={src}\n                        ref={cropper => this.cropper = cropper}\n                        viewMode={1}\n                        zoomable={false}\n                        aspectRatio={1}\n                    />\n                    {this.getChoiceButton()}\n                </div>\n            </Modal>\n\n        </div>;\n    }\n\n    getAffixMenuReact() {\n        let rolePath = ['setting', 'authenticate', 'role',];\n        let role = tool.getStateSpace(rolePath);\n        let spacePath = ['setting', role,];\n        let menuReact = this.getMenus(spacePath);\n\n        let stateAffixMenuGlobal;\n        stateAffixMenuGlobal = tool.getStateSpace(['setting', 'stateAffixMenu',]);\n        let stateAffixMenu = stateAffixMenuGlobal;\n        let stateAffixMenuRole = tool.getStateSpace(spacePath.concat(['stateAffixMenu']));\n        if (stateAffixMenuRole !== undefined) stateAffixMenu = stateAffixMenuRole;\n\n        if (stateAffixMenu) {\n            return <Affix>\n                <Menu\n                    mode=\"horizontal\"\n                    // mode=\"inline\"\n                    style={{\n                        height: '100%',\n                        // backgroundColor: 'red',\n                        borderRight: 0,\n                        'boxShadow': '2px 2px 10px #909090',\n                    }}\n                    selectedKeys={[tool.getStateSpace(['setting', 'selectedMenu', 'selectedKey',],)]}\n                >\n                    {menuReact}\n                </Menu>\n            </Affix>\n        } else {\n            let menu;\n            if (isMobile) {\n                if (!this.props.hiddenMenu) {\n                    menu = <Menu\n                        mode=\"inline\"\n                        style={{\n                            width: '500px',\n                            height: '100%',\n                            // marginTop: '20px',\n                            borderRight: 0,\n                            'boxShadow': '2px 2px 10px #909090',\n\n                        }}\n                        selectedKeys={[tool.getStateSpace(['setting', 'selectedMenu', 'selectedKey',],)]}\n                    >\n                        {menuReact}\n                    </Menu>;\n                }\n            } else {\n                menu = <Menu\n\n                    // 把{menuReact}替换成items可以解除警告[antd: Menu] `children` will be removed in next major version. Please use `items` instead.\n                    // items={[\n                    //     {label: '菜单项一', key: 'item-1'}, // 菜单项务必填写 key\n                    //     {label: '菜单项二', key: 'item-2'},\n                    //     {\n                    //         label: '子菜单',\n                    //         key: 'submenu',\n                    //         children: [{label: '子菜单项', key: 'submenu-item-1'}],\n                    //     },\n                    // ]}\n                    mode=\"inline\"\n                    style={{\n                        borderRight: 0,\n                        'boxShadow': '2px 2px 10px #909090',\n                    }}\n                    selectedKeys={[tool.getStateSpace(['setting', 'selectedMenu', 'selectedKey',],)]}\n                >\n                    {menuReact}\n                </Menu>;\n            }\n\n            return <Sider\n                width={200}\n                className=\"site-layout-background\"\n                style={{\n                    height: '100%',\n                    width: '5px',\n                    marginLeft: '20px',\n                    marginTop: isMobile ? '40px' : '26px',\n                    marginBottom: '100px',\n                    // overflow:'hidden',\n\n                    // width:'600px',\n                    // backgroundColor: 'red',\n                    zIndex: 100,\n                }}\n            >\n                {menu}\n            </Sider>\n        }\n    }\n\n    render() {\n        let rolePath = ['setting', 'authenticate', 'role',];\n        let role = tool.getStateSpace(rolePath);\n        if (!role) return null;\n\n        let spacePath = ['setting', role,];\n        let menuInfo = tool.getStateSpace(spacePath);\n\n        // 向第3方页面跳转\n        let path = tool.getAttribute(menuInfo, 'path');\n        if (path) {\n            path = tool.path_join(path);\n            window.location.href = path;\n        }\n\n        // 向扩展页面跳转 共享store\n        let nowPage = tool.getAttribute(menuInfo, 'nowPage');\n        if (nowPage) {\n            window.history.pushState({}, 'xxx', '?nowPage=s');\n            return tool.getStateSpace(['setting', 'pageMap', nowPage, 'react',]);\n        }\n\n\n        let content = this.getContent();\n\n        let systemTitle = tool.getStateSpace(['setting', role, 'systemTitle',]);\n\n        let loginOut = this.getLoginOut();\n        let changePassword = this.getChangePassword();\n        let cover = this.getCover();\n        let footer = tool.getStateSpace(['setting', role, 'footer',]);\n        let affixMenuReact = this.getAffixMenuReact();\n\n        let reactHead, layoutStyle;\n        if (isMobile) {\n            let hiddenMenu = this.props.hiddenMenu;\n            let headHeight = 100;\n            layoutStyle = {\n                backgroundColor: 'rgba(255,255,255,0)',\n                top: `${headHeight}px`,\n                // border:'red 1px solid',\n                position: \"relative\",\n            };\n            reactHead = <div style={{\n                width: '100%',\n                position: \"fixed\",\n                zIndex: 200,\n            }}>\n\n                <div style={{\n                    backgroundColor: 'black',\n                    position: \"relative\",\n                    width: '100%',\n                    height: `${headHeight}px`,\n                    // zIndex: 200,\n                }}>\n                    <div style={{\n                        position: \"absolute\",\n                        top: '25%',\n                        height: '50%',\n                        left: '5%',\n                        width: '80%',\n                    }}>\n                        <div style={{\n                            fontSize: '250%',\n                            color: 'white',\n                            position: \"absolute\",\n                        }}>{systemTitle}</div>\n                        {changePassword}\n                        {loginOut}\n                    </div>\n                    {cover}\n                </div>\n\n                <div\n                    style={{\n                        backgroundColor: 'lightcyan',\n                        zIndex: 200,\n                        fontSize: '150%',\n                        textAlign: 'center',\n                    }}\n\n                    onClick={() => {\n                        tool.setStateSpace(['setting', 'hiddenMenu',], !this.props.hiddenMenu);\n                    }}\n                >\n                    {hiddenMenu ? '打开目录' : '关闭目录'}\n                </div>\n\n            </div>\n            ;\n            // reactHead=null\n        } else {\n            layoutStyle = {};\n            reactHead = <Header className=\"header\">\n                <div className=\"logo\">{systemTitle}</div>\n                {cover}\n                {changePassword}\n                {loginOut}\n                <CheckoutPage/>\n            </Header>\n        }\n        reactHead = <div>\n            {this.getReactHeadEditButton(spacePath)}\n            {reactHead}\n        </div>;\n\n        // 内容区style\n        let contentStyle = {\n            padding: 24,\n            margin: 0,\n            minHeight: 280,\n        };\n        if (isMobile) contentStyle = {\n            padding: 24,\n            margin: 0,\n            minHeight: 280,\n            // border: 'red solid 1px',\n            position: 'absolute',\n            left: '0',\n            fontSize: '200px',\n\n        };\n        return (\n            <div\n                style={{\n                    height: '100%',\n                    width: '100%',\n                    backgroundImage: `url(${file})`,\n                    position: 'absolute',\n                }}\n            >\n                <Layout\n                    style={{\n                        backgroundImage: `url(${file})`,\n                    }}\n                >\n                    {reactHead}\n                    <Layout\n                        style={layoutStyle}\n                    >\n                        {affixMenuReact}\n                        <Layout style={{\n                            padding: '0 24px 24px',\n                            backgroundColor: 'rgba(255,255,255,0)',\n                        }}>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={contentStyle}\n                            >\n                                {content}\n                            </Content>\n                        </Layout>\n                    </Layout>\n                    <Footer\n                        style={{\n                            textAlign: 'center',\n                            position: 'fixed',\n                            width: '100%',\n                            bottom: '0',\n                            backgroundColor: 'rgba(200,200,200,255)',\n                        }}>{footer}\n                    </Footer>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nfunction mapStateRoLayout(state) {\n    return {\n        selectedKey: state.setting.selectedMenu.selectedKey,\n        setPassword: state.setting.setPassword,\n        setCover: state.setting.setCover,\n        hiddenMenu: state.setting.hiddenMenu,\n        open_edit: state.open_edit,\n        isSetMenuShow: state.isSetMenuShow,\n        isSetHeadShow: state.isSetHeadShow,\n        // stateShow: state.setting.setCover.stateShow,\n        setting: state.setting,\n    }\n}\n\nComponentLayout = connect(mapStateRoLayout)(ComponentLayout);\n\nexport {ComponentLayout, clearAuthenticate,}\n","export default __webpack_public_path__ + \"static/media/1.eaa42e50.jpeg\";","import {Input, Button, Modal} from 'antd';\nimport React from 'react';\n\nimport {tool} from \"../tools/tools\";\n\nimport file from './1.jpeg'\nimport UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\nimport KeyOutlined from \"@ant-design/icons/lib/icons/KeyOutlined\";\nimport {Text} from \"../../setting\";\nimport {connect} from \"react-redux\";\nimport {isMobile} from \"../assistant/album/album_tool\";\n\n\n//选择角色\nclass ChoiceRole extends React.Component {\n    onChoice(code) {\n        localStorage.setItem('selectedCode', code,);\n\n        let authenticatePath = ['setting', 'authenticate',];\n        let authenticate = tool.getStateSpace(authenticatePath);\n\n        authenticate = Object.assign({}, authenticate, {\n            role: code,//当前使用的角色\n            choiceRole: false,//是否调起角色选择界面\n        });\n        tool.setStateSpace(authenticatePath, authenticate);\n        let roleTitle = tool.getStateSpace(['setting', code, 'webTitle',]);\n        tool.setTitle(roleTitle);\n\n\n    }\n\n    render() {\n        let choiceRolePath = ['setting', 'authenticate', 'choiceRole',];\n        let choiceRole = tool.getStateSpace(choiceRolePath);\n\n        let roleInfoPath = ['setting', 'authenticate', 'roleInfo',];\n        let roleInfo = tool.getStateSpace(roleInfoPath);\n        if (!roleInfo) roleInfo = [];\n\n\n        let setting = tool.getStateSpace(['setting']);\n        // 按钮外面的div的样式\n        let buttonDivStyle = {};\n        if (isMobile) buttonDivStyle = {\n            display: \"inline-block\",\n            width: '200px',\n            height: '200px',\n            margin: '10px',\n            borderRadius: \"8px\",\n            overflow: 'hidden',\n        };\n\n        // 按钮样式\n        let buttonStyle = {};\n        if (isMobile) buttonStyle = {\n            fontSize: '240%',\n            backgroundColor: 'lightskyblue',\n            width: '100%',\n            height: '100%',\n        };\n\n        let roleButtons = [];\n        for (const role of roleInfo) {\n            let code = role.code;\n            if (!setting[code]) continue;\n            let role_name = role.role_name;\n            roleButtons.push(\n                <div key={code} style={buttonDivStyle}>\n                    <Button\n                        style={buttonStyle}\n                        onClick={() => this.onChoice(code)}\n                    >\n                        {role_name}\n                    </Button>\n                    <br/><br/>\n                </div>\n            );\n        }\n\n        // 自动选择\n        setTimeout(() => {\n            let selectedCode = localStorage.getItem('selectedCode',);\n            if (selectedCode) this.onChoice(selectedCode);\n        }, 200,);\n\n        // 标题\n        let titleStyle = {\n            textAlign: 'center',\n        };\n        if (isMobile) titleStyle = {\n            fontSize: '240%',\n            margin: '20px',\n            textAlign: 'center',\n        };\n        let title = <div style={titleStyle}>选择角色</div>;\n\n\n        return (\n            <Modal\n                title={title}\n                open={choiceRole}\n                visible={choiceRole}\n                onOk={this.onOk}\n                onCancel={this.onCancel}\n                footer={null}\n                closeIcon={' '}\n                width={isMobile ? 800 : 500}\n            >\n                <div style={{\n                    textAlign: 'center',\n                }}>\n                    {roleButtons}\n                </div>\n\n            </Modal>\n        )\n    }\n}\n\nfunction mapStateToChoiceRole(state) {\n    return {\n        authenticate: state.setting.authenticate,\n    }\n}\n\nChoiceRole = connect(mapStateToChoiceRole)(ChoiceRole);\n\n//通用登录界面 get(\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.change = this.change.bind(this);\n        this.submit = this.submit.bind(this);\n        this.state = {\n            username: '',\n            password: '',\n            remember: false,\n        };\n    }\n\n    change(field, value) {\n        let data = {};\n        data[field] = value;\n        this.setState(Object.assign({}, this.state, data));\n    }\n\n    componentDidMount() {\n        let urlPath = tool.getStateSpace(['setting', 'authenticate', 'loginPath',]);\n        let requestParam = {\n            url: tool.get_url(urlPath),\n            success: responseData => {\n                if (responseData.state === 403) return null;\n\n                let abstract_role_name = tool.getAttribute(responseData, ['abstract_role_name'],);\n                let roleInfo = tool.getAttribute(responseData, ['roleInfo'],);\n                roleInfo = tool.roleInfoHandler(roleInfo);\n\n                if ((!abstract_role_name) && (!roleInfo)) {\n                    tool.show_error(\"没有角色信息\");\n                    return null;\n                }\n\n                let authenticate = tool.getStateSpace(['setting', 'authenticate',]);\n\n                // 当前使用的角色\n                let nowRole = null;\n                let choiceRole = false;\n\n                if (abstract_role_name && (!roleInfo)) {\n                    nowRole = abstract_role_name;\n                } else {\n                    if (roleInfo.length === 1) {\n                        nowRole = roleInfo[0].code\n                    } else {\n                        choiceRole = true;\n                    }\n                }\n\n\n                authenticate = Object.assign({}, authenticate, {\n                    responseData: responseData,\n                    jwtToken: tool.getAttribute(responseData, ['jwt_token'],),\n                    username: tool.getAttribute(responseData, ['username'],),\n                    name: tool.getAttribute(responseData, ['name'],),\n                    // role: tool.getAttribute(responseData, ['abstract_role_name'],),\n                    role: nowRole,//当前使用的角色\n                    roleInfo: roleInfo, // 角色信息列表\n                    choiceRole: choiceRole,//是否调起角色选择界面\n\n                    headers: {authorization: tool.getAttribute(responseData, ['jwt_token'],),},\n                });\n                let roleTitle = tool.getStateSpace(['setting', authenticate.role, 'webTitle',]);\n                tool.setTitle(roleTitle);\n\n                tool.setStateSpace(['setting', 'authenticate',], authenticate);\n            },\n        };\n        tool.get(requestParam);\n    }\n\n    submit() {\n        let urlPath = tool.getStateSpace(['setting', 'authenticate', 'loginPath',]);\n        let requestParam = {\n            url: tool.get_url(urlPath),\n            data: this.state,\n            success: responseData => {\n                let abstract_role_name = tool.getAttribute(responseData, ['abstract_role_name'],);\n                let roleInfo = tool.getAttribute(responseData, ['roleInfo'],);\n\n                // 旧版兼容\n                if (!roleInfo) {\n                    let abstract_role_name = tool.getAttribute(responseData, ['abstract_role_name'],);\n                    roleInfo = [{code: abstract_role_name, role_name: \"未知\"}]\n                }\n                roleInfo = tool.roleInfoHandler(roleInfo);\n                if ((!abstract_role_name) && (!roleInfo)) {\n                    tool.show_error(\"没有角色信息\");\n                    return null;\n                }\n\n                let authenticate = tool.getStateSpace(['setting', 'authenticate',]);\n\n                // 当前使用的角色\n                let nowRole = null;\n                let choiceRole = false;\n\n                if (abstract_role_name && (!roleInfo)) {\n                    nowRole = abstract_role_name;\n                } else {\n                    if (roleInfo.length === 1) {\n                        nowRole = roleInfo[0].code\n                    } else {\n                        choiceRole = true;\n                    }\n                }\n\n                authenticate = Object.assign({}, authenticate, {\n                    responseData: responseData,\n                    jwtToken: tool.getAttribute(responseData, ['jwt_token'],),\n                    username: tool.getAttribute(responseData, ['username'],),\n                    name: tool.getAttribute(responseData, ['name'],),\n                    role: nowRole,//当前使用的角色\n                    roleInfo: roleInfo, // 角色信息列表\n                    choiceRole: choiceRole,//是否调起角色选择界面\n                    headers: {authorization: tool.getAttribute(responseData, ['jwt_token'],),},\n                });\n                let roleTitle = tool.getStateSpace(['setting', authenticate.role, 'webTitle',]);\n                tool.setTitle(roleTitle);\n\n                tool.setStateSpace(['setting', 'authenticate',], authenticate);\n            },\n            error: error => {\n                tool.show_error(error);\n            },\n        };\n        tool.post(requestParam);\n    }\n\n    render() {\n        // 背景\n        let div_0 = {\n            width: '100%',\n            height: '100%',\n            backgroundImage: `url(${file})`,\n            backgroundSize: '100% 100%',\n            position: 'absolute',\n        };\n\n        // 白色方块\n        let div_1 = {\n            width: '400px',\n            height: '350px',\n            border: 'rgba(130, 50, 21, 0.16) 1px solid',\n            marginLeft: '50%',\n            transform: 'translate(-50%,50%)',\n            backgroundColor: \"#FFFFFF\",\n        };\n        if (isMobile) div_1 = {\n            width: '80%',\n            height: '600px',\n            border: 'rgba(130, 50, 21, 0.16) 1px solid',\n            marginLeft: '50%',\n            transform: 'translate(-50%,50%)',\n            backgroundColor: \"#FFFFFF\",\n        };\n        let div_2 = {\n            width: '300px',\n            marginLeft: '50%',\n            transform: 'translate(-50%,10%)',\n        };\n        if (isMobile) div_2 = {\n            width: '80%',\n            fontSize: '15px',\n            marginLeft: '50%',\n            transform: 'translate(-50%,10%)',\n        };\n        let input_height = 40;\n        if (isMobile) input_height = 80;\n        let button_style = {\n            width: '100%',\n            height: input_height + 'px',\n        };\n        if (isMobile) button_style = {\n            width: '100%',\n            height: input_height + 'px',\n            fontSize: '240%',\n        };\n        let input_style = {\n            height: input_height + 'px',\n        };\n        if (isMobile) input_style = {\n            height: input_height + 'px',\n            fontSize: '240%',\n        };\n\n        // 计算logo\n        let logo = 'LOGO';\n        let logoPath = tool.getStateSpace(['setting', 'authenticate', 'logoImage',]);\n        if (logoPath) {\n            logo = <div style={{\n                // border: 'red solid 1px',\n                transform: 'translate(-45%,0%)',\n                width: '90%',\n                // height:'60%',\n            }}>\n                <img src={logoPath} alt={'LOGO'} width={'100%'} height={'auto'}/>\n            </div>;\n        }\n\n        return (\n            <div>\n                <ChoiceRole/>\n                <div style={div_0}>&nbsp;</div>\n                <div style={div_1}>\n                    <div style={div_2}>\n                        <div style={{marginLeft: '45%',}}>{logo}</div>\n                        <br/><br/>\n                        <Input\n                            style={input_style}\n                            onChange={event => this.change('username', event.target.value)}\n                            value={this.state.username}\n                            placeholder={Text(\"输入你的系统帐号\")}\n                            prefix={<UserOutlined className=\"site-form-item-icon\"/>}\n                            onPressEnter={() => this.submit()}\n                        />\n                        <br/><br/>\n                        <Input.Password\n                            // placeholder=\"input password\"\n                            style={input_style}\n                            onChange={event => this.change('password', event.target.value)}\n                            value={this.state.password}\n                            type=\"password\"\n                            placeholder={Text(\"输入你的密码\")}\n                            prefix={<KeyOutlined className=\"site-form-item-icon\"/>}\n                            onPressEnter={() => this.submit()}\n                        />\n                        {/*<br/><br/>*/}\n                        <br/><br/>\n                        <Button type=\"primary\" style={button_style}\n                                onClick={() => this.submit()}>{Text(\"登录\")}</Button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport {Login, ChoiceRole,}\n","import React from \"react\";\nimport {Button, Divider, Modal, Popconfirm, Radio,} from \"antd\";\n\nimport {connect} from 'react-redux';\nimport {tool} from \"../tools/tools\";\n\nimport './right-click.css';\nimport {isMobile} from \"../assistant/album/album_tool\";\nimport {ToolOutlined} from \"@ant-design/icons\";\n\n\n//右键点击 编辑 没有\nclass RightClick extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getRightMenu = this.getRightMenu.bind(this);\n    }\n\n    getSetRight() {\n        let open_edit = tool.getStateSpace(['open_edit']);\n        if (!open_edit) return null;\n\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'rightClick', 'spacePrivatePath',]);\n        let spacePublicPath = tool.getAttribute(this, ['props', 'rightClick', 'spacePublicPath',]);\n\n        // 详情\n        let detailPath = spacePublicPath.concat(['columnsDetailLine',],);\n        let hiddenDetailPath = spacePublicPath.concat(['columnsDetailLine', 'hidden']);\n        let hiddenDetail = tool.getStateSpace(hiddenDetailPath);\n        let textDetailPath = spacePublicPath.concat(['text__detail_right',]);\n        let textDetail = tool.getStateSpace(textDetailPath);\n\n        // 新建\n        let createPath = spacePublicPath.concat(['columnsCreate',],);\n        let hiddenCreatePath = spacePublicPath.concat(['disableCreate',]);\n        let hiddenCreate = tool.getStateSpace(hiddenCreatePath);\n        let textCreatePath = spacePublicPath.concat(['text__create_right',]);\n        let textCreate = tool.getStateSpace(textCreatePath);\n\n        // 编辑\n        let updatePath = spacePublicPath.concat(['columnsUpdate',],);\n        let hiddenUpdatePath = spacePublicPath.concat(['columnsUpdate', 'hidden']);\n        let hiddenUpdate = tool.getStateSpace(hiddenUpdatePath);\n        let textUpdatePath = spacePublicPath.concat(['text__update_right',]);\n        let textUpdate = tool.getStateSpace(textUpdatePath);\n\n        // 编辑1\n        let update1Path = spacePublicPath.concat(['columnsUpdate_1',],);\n        let hiddenUpdate1Path = spacePublicPath.concat(['columnsUpdate_1', 'hidden']);\n        let hiddenUpdate1 = tool.getStateSpace(hiddenUpdate1Path);\n        let textUpdate1Path = spacePublicPath.concat(['text__update_part_right',]);\n        let textUpdate1 = tool.getStateSpace(textUpdate1Path);\n\n        // 删除\n        let deleteHiddenPath = spacePublicPath.concat(['disableDelete',],);\n        let deleteHidden = tool.getStateSpace(deleteHiddenPath);\n        let textDeletePath = spacePublicPath.concat(['text__delete',]);\n        let textDelete = tool.getStateSpace(textDeletePath);\n\n        // 拷贝\n        let copyHiddenPath = spacePublicPath.concat(['disableCopy',],);\n        let copyHidden = tool.getStateSpace(copyHiddenPath);\n        let textCopyPath = spacePublicPath.concat(['text__copy_right',]);\n        let textCopy = tool.getStateSpace(textCopyPath);\n\n        let reacts = [];\n        reacts.push(<div key={'x'}>\n            <Divider>详情按钮</Divider>\n            <table style={{textAlign: 'left',}}>\n                <thead>\n\n                {/*第1行 是否显示*/}\n                <tr>\n                    <th>是否显示:</th>\n                    <th><Radio.Group\n                        onChange={event => {\n                            let value = event.target.value;\n                            tool.setStateSpace(hiddenDetailPath, event.target.value,);\n                            if (value) return;\n\n\n                            let detail = tool.getStateSpace(detailPath);\n                            if (!detail) {\n                                tool.setStateSpace(detailPath, {});\n                            }\n                        }}\n                        value={hiddenDetail}\n                        style={{\n                            marginLeft: '10px',\n                        }}\n                    >\n                        <Radio value={false}>显示</Radio>\n                        <Radio value={true}>隐藏</Radio>\n                    </Radio.Group></th>\n                </tr>\n\n                {/*第2行 名称*/}\n                <tr>\n                    <th>名称:</th>\n                    <th>\n                        <input\n                            value={textDetail}\n                            onChange={event => {\n                                let value = event.target.value;\n                                tool.setStateSpace(textDetailPath, value);\n                            }}\n                        />\n                    </th>\n                </tr>\n\n                </thead>\n            </table>\n\n            <Divider>新建按钮</Divider>\n            <table style={{textAlign: 'left',}}>\n                <thead>\n\n                {/*第1行 是否显示*/}\n                <tr>\n                    <th>是否显示:</th>\n                    <th><Radio.Group\n                        onChange={event => {\n                            let value = event.target.value;\n                            tool.setStateSpace(hiddenCreatePath, event.target.value,);\n                            if (value) return;\n\n\n                            let create = tool.getStateSpace(createPath);\n                            if (!create) {\n                                tool.setStateSpace(createPath, {});\n                            }\n                        }}\n                        value={hiddenCreate}\n                        style={{\n                            marginLeft: '10px',\n                        }}\n                    >\n                        <Radio value={false}>显示</Radio>\n                        <Radio value={true}>隐藏</Radio>\n                    </Radio.Group></th>\n                </tr>\n\n                {/*第2行 名称*/}\n                <tr>\n                    <th>名称:</th>\n                    <th>\n                        <input\n                            value={textCreate}\n                            onChange={event => {\n                                let value = event.target.value;\n                                tool.setStateSpace(textCreatePath, value);\n                            }}\n                        />\n                    </th>\n                </tr>\n\n                </thead>\n            </table>\n\n            <Divider>拷贝按钮</Divider>\n            <table style={{textAlign: 'left',}}>\n                <thead>\n\n                {/*第1行 是否显示*/}\n                <tr>\n                    <th>是否显示:</th>\n                    <th><Radio.Group\n                        onChange={event => {\n                            tool.setStateSpace(copyHiddenPath, event.target.value,);\n                        }}\n                        value={copyHidden}\n                        style={{\n                            marginLeft: '10px',\n                        }}\n                    >\n                        <Radio value={false}>显示</Radio>\n                        <Radio value={true}>隐藏</Radio>\n                    </Radio.Group>\n                    </th>\n                </tr>\n\n                {/*第2行 名称*/}\n                <tr>\n                    <th>名称:</th>\n                    <th>\n                        <input\n                            value={textCopy}\n                            onChange={event => {\n                                let value = event.target.value;\n                                tool.setStateSpace(textCopyPath, value);\n                            }}\n                        />\n                    </th>\n                </tr>\n\n                </thead>\n            </table>\n\n            <Divider>编辑按钮</Divider>\n            <table style={{textAlign: 'left',}}>\n                <thead>\n\n                {/*第1行 是否显示*/}\n                <tr>\n                    <th>是否显示:</th>\n                    <th><Radio.Group\n                        onChange={event => {\n                            let value = event.target.value;\n                            tool.setStateSpace(hiddenUpdatePath, event.target.value,);\n                            if (value) return;\n\n                            let update = tool.getStateSpace(updatePath);\n                            if (!update) {\n                                tool.setStateSpace(updatePath, {});\n                            }\n                        }}\n                        value={hiddenUpdate}\n                        style={{\n                            marginLeft: '10px',\n                        }}\n                    >\n                        <Radio value={false}>显示</Radio>\n                        <Radio value={true}>隐藏</Radio>\n                    </Radio.Group></th>\n                </tr>\n\n                {/*第2行 名称*/}\n                <tr>\n                    <th>名称:</th>\n                    <th>\n                        <input\n                            value={textUpdate}\n                            onChange={event => {\n                                let value = event.target.value;\n                                tool.setStateSpace(textUpdatePath, value);\n                            }}\n                        />\n                    </th>\n                </tr>\n\n                </thead>\n            </table>\n\n            <Divider>编辑1按钮</Divider>\n            <table style={{textAlign: 'left',}}>\n                <thead>\n\n                {/*第1行 是否显示*/}\n                <tr>\n                    <th>是否显示:</th>\n                    <th><Radio.Group\n                        onChange={event => {\n                            let value = event.target.value;\n                            tool.setStateSpace(hiddenUpdate1Path, event.target.value,);\n                            if (value) return;\n\n                            let update1 = tool.getStateSpace(update1Path);\n                            if (!update1) {\n                                tool.setStateSpace(update1Path, {});\n                            }\n                        }}\n                        value={hiddenUpdate1}\n                        style={{\n                            marginLeft: '10px',\n                        }}\n                    >\n                        <Radio value={false}>显示</Radio>\n                        <Radio value={true}>隐藏</Radio>\n                    </Radio.Group></th>\n                </tr>\n\n                {/*第2行 名称*/}\n                <tr>\n                    <th>名称:</th>\n                    <th>\n                        <input\n                            value={textUpdate1}\n                            onChange={event => {\n                                let value = event.target.value;\n                                tool.setStateSpace(textUpdate1Path, value);\n                            }}\n                        />\n                    </th>\n                </tr>\n\n                </thead>\n            </table>\n\n            <Divider>删除按钮</Divider>\n            <table style={{textAlign: 'left',}}>\n                <thead>\n\n                {/*第1行 是否显示*/}\n                <tr>\n                    <th>是否显示:</th>\n                    <th><Radio.Group\n                        onChange={event => {\n                            let value = event.target.value;\n                            tool.setStateSpace(deleteHiddenPath, value,);\n                        }}\n                        value={deleteHidden}\n                        style={{\n                            marginLeft: '10px',\n                        }}\n                    >\n                        <Radio value={false}>显示</Radio>\n                        <Radio value={true}>隐藏</Radio>\n                    </Radio.Group></th>\n                </tr>\n\n                {/*第2行 名称*/}\n                <tr>\n                    <th>名称:</th>\n                    <th>\n                        <input\n                            value={textDelete}\n                            onChange={event => {\n                                let value = event.target.value;\n                                tool.setStateSpace(textDeletePath, value);\n                            }}\n                        />\n                    </th>\n                </tr>\n\n                </thead>\n            </table>\n        </div>)\n\n        // 搜索框\n        let isSetRightShowPath = spacePrivatePath.concat(['isSetRightShow']);\n        let isSetRightShow = tool.getStateSpace(isSetRightShowPath, false);\n\n        let content = <Modal\n            visible={isSetRightShow}\n            open={isSetRightShow}\n            onCancel={() => tool.setStateSpace(isSetRightShowPath, false,)}\n            footer={null}\n        >\n            <br/><br/>\n            {reacts}\n        </Modal>\n\n\n        return <div>\n            {content}\n            <Button\n                onClick={() => tool.setStateSpace(isSetRightShowPath, true,)}\n            > <ToolOutlined/> </Button>\n        </div>;\n    }\n\n    getRightMenu() {\n        let open_edit = tool.getStateSpace(['open_edit']);\n        // if (!open_edit) return null;\n\n        let spacePublicPath = tool.getAttribute(this, ['props', 'rightClick', 'spacePublicPath',]);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n        // let textDeletePath = spacePublicPath.concat(['text__delete']);\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'rightClick', 'spacePrivatePath',]);\n        let spaceRowPath = tool.getAttribute(this, ['props', 'rightClick', 'spaceRowPath',]);\n        let record = tool.getAttribute(this, ['props', 'rightClick', 'record',]);\n        let fatherRecord = tool.getAttribute(this, ['props', 'rightClick', 'fatherRecord',]);\n        let recordId = record.id;\n\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n\n        // 过滤器相关配置\n        let filterValue = tool.getAttribute(spacePrivate, 'filterValue');\n        if (!filterValue) {\n            filterValue = tool.getAttribute(spacePublic, ['filters', 'default',])\n        }\n        let filtersInfo = tool.getAttribute(spacePublic, 'filters');\n        let filtersChoices = tool.getAttribute(filtersInfo, 'choices');\n        let filterNow = tool.getAttribute(filtersChoices, filterValue);\n\n        //右键选项显示控制\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n\n        // 计算分步编辑的路径\n        let nowPage = tool.getAttribute(spacePrivate, ['updatePart', 'nowPage',]);\n        if (!nowPage) nowPage = 1;\n        let columnsUpdatePartPath = spacePublicPath.concat([`columnsUpdate_${nowPage}`]);\n\n\n        let columnsDetailLinePath = spacePublicPath.concat(['columnsDetailLine']);\n        let columnsCreateSpace = tool.getStateSpace(columnsCreatePath);\n        let columnsUpdateSpace = tool.getStateSpace(columnsUpdatePath);\n        let columnsUpdatePartSpace = tool.getStateSpace(columnsUpdatePartPath);\n        let columnsDetailLineSpace = tool.getStateSpace(columnsDetailLinePath);\n        let disableDeleteSpace = tool.getAttribute(spacePublic, 'disableDelete');\n        let disableCopy = tool.getAttribute(spacePublic, 'disableCopy');\n        let disableUpdate = tool.getAttribute(spacePublic, 'disableUpdate');\n        let disableCreate = tool.getAttribute(spacePublic, 'disableCreate');\n        // let disableUpdatePart = tool.getAttribute(spacePublic, 'disableUpdatePart');\n\n        if (filterValue && filtersInfo && filtersChoices && filterNow) {\n            let filterColumnsUpdate = tool.getAttribute(filterNow, 'columnsUpdate');\n            let filterColumnsCreate = tool.getAttribute(filterNow, 'columnsCreate');\n            let filterDisableDelete = tool.getAttribute(filterNow, 'disableDelete');\n            let filterDisableCopy = tool.getAttribute(filterNow, 'disableCopy');\n            let filterDisableUpdate = tool.getAttribute(filterNow, 'disableUpdate');\n\n            if (filterColumnsUpdate) columnsUpdateSpace = filterColumnsUpdate;\n            if (filterColumnsCreate) columnsCreateSpace = filterColumnsCreate;\n            if (filterDisableDelete) disableDeleteSpace = filterDisableDelete;\n            if (filterDisableCopy) disableCopy = filterDisableCopy;\n            if (filterDisableUpdate) disableUpdate = filterDisableUpdate;\n        }\n\n\n        let showC, showCp, showU, showUPart, showD, showDelete, showInfo;\n\n        if (columnsCreateSpace && (!disableCreate)) showC = true;\n        if (columnsCreateSpace) showCp = true;\n        if (disableCopy) showCp = false;\n        if (columnsUpdateSpace && (!disableUpdate)) showU = true;\n        if (columnsUpdatePartSpace) showUPart = true;\n        if (columnsDetailLineSpace) showD = true; // 存在详情配置则显示详情\n        if (!disableDeleteSpace) showDelete = true;\n\n        // 详情隐藏\n        let hiddenDetailPath = spacePublicPath.concat(['columnsDetailLine', 'hidden']);\n        let hiddenDetail = tool.getStateSpace(hiddenDetailPath);\n        if (hiddenDetail) showD = false;\n\n        // 拷贝隐藏\n        let hiddenCopyPath = spacePublicPath.concat(['disableCopy',]);\n        let hiddenCopy = tool.getStateSpace(hiddenCopyPath);\n        if (hiddenCopy) showCp = false;\n        if (hiddenCopy === false) showCp = true;\n\n        // 编辑隐藏\n        let hiddenUpdatePath = spacePublicPath.concat(['columnsUpdate', 'hidden']);\n        let hiddenUpdate = tool.getStateSpace(hiddenUpdatePath);\n        if (hiddenUpdate) showU = false;\n\n        // 编辑1隐藏\n        let hiddenUpdate1Path = spacePublicPath.concat(['columnsUpdate_1', 'hidden']);\n        let hiddenUpdate1 = tool.getStateSpace(hiddenUpdate1Path);\n        if (hiddenUpdate1) showUPart = false;\n\n        // 删除隐藏\n        // let deleteHiddenPath = spacePublicPath.concat(['disableDelete',]);\n        // let deleteHidden = tool.getStateSpace(deleteHiddenPath);\n        // if (deleteHidden) showDelete = false;\n\n\n        if (!showC && !showU && !showUPart && !showD && !showDelete && !open_edit) showInfo = true;\n\n        if (showInfo) {\n            setTimeout(() => tool.show_info('没有什么好显示的!'), 100);\n            return null;\n        }\n\n\n        let textDetail = '详情';\n        let text_detail = tool.getAttribute(spacePublic, 'text__detail_right');\n        if (text_detail) textDetail = text_detail;\n\n        let filterTextDetail = tool.getAttribute(filterNow, 'text__detail_right');\n        if (filterValue && filtersInfo && filtersChoices && filterNow && filterTextDetail) {\n            textDetail = filterTextDetail;\n        }\n\n        let textDelete = '删除';\n        let text_delete = tool.getAttribute(spacePublic, 'text__delete');\n        if (text_delete) textDelete = text_delete;\n\n        let filterTextDelete = tool.getAttribute(filterNow, 'text__delete_right');\n        if (filterValue && filtersInfo && filtersChoices && filterNow && filterTextDelete) {\n            textDelete = filterTextDelete;\n        }\n\n        let textCreate = '新建';\n        let text_create = tool.getAttribute(spacePublic, 'text__create_right');\n        if (text_create) textCreate = text_create;\n\n        let filterTextCreate = tool.getAttribute(filterNow, 'text__create_right');\n        if (filterValue && filtersInfo && filtersChoices && filterNow && filterTextCreate) {\n            textCreate = filterTextCreate;\n        }\n\n        let textCopy = '拷贝';\n        let text_copy = tool.getAttribute(spacePublic, 'text__copy_right');\n        if (text_copy) textCopy = text_copy;\n\n        let filterTextCopy = tool.getAttribute(filterNow, 'text__copy_right');\n        if (filterValue && filtersInfo && filtersChoices && filterNow && filterTextCopy) {\n            textCopy = filterTextCopy;\n        }\n\n        let textUpdate = '编辑';\n        let text_update = tool.getAttribute(spacePublic, 'text__update_right');\n        if (text_update) textUpdate = text_update;\n\n        let textUpdatePart = '编辑'; // 分步编辑\n        let text_update_part = tool.getAttribute(spacePublic, 'text__update_part_right');\n        if (text_update_part) textUpdatePart = text_update_part;\n\n        let filterTextUpdate = tool.getAttribute(filterNow, 'text__update_right');\n        if (filterValue && filtersInfo && filtersChoices && filterNow && filterTextUpdate) {\n            textUpdate = filterTextUpdate;\n        }\n\n\n        let onClickDelete = () => {\n            // tool.rightInfo = Object.assign({}, tool.rightInfo, {\n            //     sign: true,\n            //\n            // });\n\n            let urlParam = {};\n            if (fatherRecord) urlParam['father_id'] = fatherRecord.id;\n\n            let requestPathPath = spacePublicPath.concat(['path']);\n            let requestPath = tool.getStateSpace(requestPathPath);\n            let url = tool.get_url(requestPath, false, urlParam, recordId,);\n            let requestParam = {\n                url: url,\n                success: (data, success_state, res) => {\n                    if (res && res.status === 209) {\n                        tool.show_success_299(data)\n                    } else {\n                        tool.show_success([`${textDelete}成功`]);\n                    }\n\n                    let resultsPath = spacePrivatePath.concat(['responseData', 'results',]);\n                    let results = tool.getStateSpace(resultsPath);\n                    let newResults = [];\n                    results.map(result => (result.id !== recordId) ? newResults.push(result) : null);\n                    tool.setStateSpace(resultsPath, newResults);\n\n                    // 关闭右键菜单\n                    let rightClickPath = ['rightClick'];\n                    let rightClick = tool.getStateSpace(rightClickPath);\n                    rightClick = Object.assign({}, rightClick, {\n                        show: false,\n                        onTableMenu: false,\n                        sign: false,\n                    });\n                    tool.setStateSpace(['rightClick'], rightClick);\n                },\n                error: data => {\n\n                    tool.show_error(data);\n\n                    // 关闭右键菜单\n                    let rightClickPath = ['rightClick'];\n                    let rightClick = tool.getStateSpace(rightClickPath);\n                    rightClick = Object.assign({}, rightClick, {\n                        // show: false,\n                        sign: false,\n                    });\n                    tool.setStateSpace(['rightClick'], rightClick);\n                },\n            };\n            tool.delete(requestParam);\n        };\n\n        let onClickDetail = () => {\n            let infoModalPath = ['infoModal'];\n            let infoModal = tool.getStateSpace(infoModalPath);\n            infoModal = Object.assign({}, infoModal, {\n                nowType: 'Detail',\n                paramModal: {\n                    detailOnload: true,\n                    spacePublicPath: spacePublicPath,\n                    spacePrivatePath: spacePrivatePath,\n                    spaceRowPath: spaceRowPath,\n                    record: record,\n                    fatherRecord: fatherRecord,\n                },\n            });\n            tool.setStateSpace(infoModalPath, infoModal);\n        };\n\n        let getColumnsUpdate = () => {\n            let spacePrivate = tool.getStateSpace(spacePrivatePath);\n            let spacePublic = tool.getStateSpace(spacePublicPath);\n\n            //更新字段\n            let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate',]);\n            let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n\n            // 是否使用过滤器的字段\n            let filterValue = tool.getAttribute(spacePrivate, 'filterValue');\n            if (!filterValue) {\n                filterValue = tool.getAttribute(spacePublic, ['filters', 'default',])\n            }\n            let filtersInfo = tool.getAttribute(spacePublic, 'filters');\n            let filtersChoices = tool.getAttribute(filtersInfo, 'choices');\n            let filterNow = tool.getAttribute(filtersChoices, filterValue);\n            let filterColumnsUpdate = tool.getAttribute(filterNow, 'columnsUpdate');\n            if (filterValue && filtersInfo && filtersChoices && filterNow && filterColumnsUpdate) {\n                columnsUpdate = filterColumnsUpdate;\n            }\n            return columnsUpdate;\n        };\n\n        let getColumnsUpdatePart = () => {\n            let spacePrivate = tool.getStateSpace(spacePrivatePath);\n            let spacePublic = tool.getStateSpace(spacePublicPath);\n\n            //更新字段\n            let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate',]);\n            let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n\n            // 是否使用过滤器的字段\n            let filterValue = tool.getAttribute(spacePrivate, 'filterValue');\n            if (!filterValue) {\n                filterValue = tool.getAttribute(spacePublic, ['filters', 'default',])\n            }\n            let filtersInfo = tool.getAttribute(spacePublic, 'filters');\n            let filtersChoices = tool.getAttribute(filtersInfo, 'choices');\n            let filterNow = tool.getAttribute(filtersChoices, filterValue);\n            let filterColumnsUpdate = tool.getAttribute(filterNow, 'columnsUpdate');\n            if (filterValue && filtersInfo && filtersChoices && filterNow && filterColumnsUpdate) {\n                columnsUpdate = filterColumnsUpdate;\n            }\n            return columnsUpdate;\n        };\n\n        let onClickU = () => {\n            // let columnsUpdateSpace = tool.getStateSpace(columnsUpdatePath);\n            let columnsUpdateSpace = getColumnsUpdate();\n            let trigger = tool.getAttribute(columnsUpdateSpace, 'trigger__');\n            if (trigger) {\n                let param_trigger = {\n                    spacePublicPath: spacePublicPath,\n                    spacePrivatePath: spacePrivatePath,\n                    spaceRowPath: spaceRowPath,\n                    record: record,\n                    fatherRecord: fatherRecord,\n                };\n                return trigger(param_trigger);\n            }\n\n            // 是否跳转到其他资源\n            let menu__ = tool.getAttribute(columnsUpdateSpace, 'menu__');\n            let onClickMenu = tool.getStateSpace(['setting', 'onClickMenu',]);\n            if (menu__) {\n                let paramFather = {\n                    spacePublicPath: spacePublicPath,\n                    spacePrivatePath: spacePrivatePath,\n                    spaceRowPath: spaceRowPath,\n                    record: record,\n                    fatherRecord: fatherRecord,\n                };\n                onClickMenu(menu__, true, paramFather);\n\n                // 关闭右键菜单\n                let rightClickPath = ['rightClick'];\n                let rightClick = tool.getStateSpace(rightClickPath);\n                rightClick = Object.assign({}, rightClick, {\n                    show: false,\n                    // onTableMenu: false,\n                    // sign: false,\n                });\n                tool.setStateSpace(['rightClick'], rightClick);\n                return null;\n            }\n\n            let infoModalPath = ['infoModal'];\n            let infoModal = tool.getStateSpace(infoModalPath);\n            infoModal = Object.assign({}, infoModal, {\n                nowType: 'Update',\n                paramModal: {\n                    spacePublicPath: spacePublicPath,\n                    spacePrivatePath: spacePrivatePath,\n                    spaceRowPath: spaceRowPath,\n                    record: record,\n                    fatherRecord: fatherRecord,\n                },\n            });\n            tool.setStateSpace(infoModalPath, infoModal);\n        };\n\n        let onClickUPart = () => {\n            let columnsUpdateSpace = getColumnsUpdatePart();\n            let trigger = tool.getAttribute(columnsUpdateSpace, 'trigger__');\n            if (trigger) {\n                let param_trigger = {\n                    spacePublicPath: spacePublicPath,\n                    spacePrivatePath: spacePrivatePath,\n                    spaceRowPath: spaceRowPath,\n                    record: record,\n                    fatherRecord: fatherRecord,\n                };\n                return trigger(param_trigger);\n            }\n\n            let infoModalPath = ['infoModal'];\n            let infoModal = tool.getStateSpace(infoModalPath);\n            infoModal = Object.assign({}, infoModal, {\n                nowType: 'UpdatePart',\n                paramModal: {\n                    spacePublicPath: spacePublicPath,\n                    spacePrivatePath: spacePrivatePath,\n                    spaceRowPath: spaceRowPath,\n                    record: record,\n                    fatherRecord: fatherRecord,\n                },\n            });\n            tool.setStateSpace(infoModalPath, infoModal);\n        };\n\n        let onClickCreate = () => {\n            let infoModalPath = ['infoModal'];\n            let infoModal = tool.getStateSpace(infoModalPath);\n            infoModal = Object.assign({}, infoModal, {\n                nowType: 'Create',\n                paramModal: {\n                    spacePublicPath: spacePublicPath,\n                    spacePrivatePath: spacePrivatePath,\n                    spaceRowPath: spaceRowPath,\n                    record: record,\n                    fatherRecord: fatherRecord,\n                },\n            });\n            tool.setStateSpace(infoModalPath, infoModal);\n        };\n\n        let onClickCopy = () => {\n            let infoModalPath = ['infoModal'];\n            let infoModal = tool.getStateSpace(infoModalPath);\n            infoModal = Object.assign({}, infoModal, {\n                nowType: 'Copy',\n                paramModal: {\n                    spacePublicPath: spacePublicPath,\n                    spacePrivatePath: spacePrivatePath,\n                    spaceRowPath: spaceRowPath,\n                    record: record,\n                    fatherRecord: fatherRecord,\n                },\n            });\n            tool.setStateSpace(infoModalPath, infoModal);\n        };\n\n        let onMouseEnter = event => {\n            // tool.rightInfo = Object.assign({}, tool.rightInfo);\n            // tool.rightInfo['onTableMenu'] = true;\n\n            let rightClickPath = ['rightClick'];\n            let rightClick = tool.getStateSpace(rightClickPath);\n            rightClick = Object.assign({}, rightClick, {\n                sign: true,\n            });\n            tool.setStateSpace(['rightClick'], rightClick);\n        };\n\n        let onMouseLeave = event => {\n            // tool.rightInfo = Object.assign({}, tool.rightInfo);\n            // tool.rightInfo['onTableMenu'] = false;\n\n            let rightClickPath = ['rightClick'];\n            let rightClick = tool.getStateSpace(rightClickPath);\n            rightClick = Object.assign({}, rightClick, {\n                sign: false,\n            });\n            tool.setStateSpace(['rightClick'], rightClick);\n        };\n\n        let buttonStyle = {};\n        if (isMobile) buttonStyle = {\n            \"fontSize\": '50px',\n            height: '80px',\n        };\n\n        return (\n            <div\n                onMouseEnter={event => onMouseEnter(event)}\n                onMouseLeave={event => onMouseLeave(event)}\n                className={'Buttons'}\n            >\n                {/*详情*/}\n                {showD ? <div className={'Button'} onClick={() => onClickDetail()}><Button\n                    style={buttonStyle}\n                >{textDetail}</Button>\n                </div> : null}\n\n                {/*创建*/}\n                {showC ? <div className={'Button'} onClick={() => onClickCreate()}><Button\n                    style={buttonStyle}\n                >{textCreate}</Button>\n                </div> : null}\n\n                {/*拷贝*/}\n                {showCp ?\n                    <div className={'Button'} onClick={() => onClickCopy()}><Button\n                        style={buttonStyle}\n                    >{textCopy}</Button></div> : null}\n\n                {/*更新1*/}\n                {showU ? <div className={'Button'} onClick={() => onClickU()}><Button\n                    danger\n                    style={buttonStyle}\n                >{textUpdate}</Button>\n                </div> : null}\n\n                {/*更新2*/}\n                {showUPart ?\n                    <div className={'Button'} onClick={() => onClickUPart()}><Button\n                        danger\n                        style={buttonStyle}\n                    >{textUpdatePart}</Button>\n                    </div> : null}\n\n                {/*删除*/}\n                {showDelete ? <Popconfirm\n                    title={'再次确认'}\n                    okButtonProps={{danger: true}}\n                    onConfirm={() => onClickDelete()}\n                    okText={textDelete}\n                    cancelText=\"取消\"\n                >\n                    <div className={'Button'}><Button\n                        danger\n                        style={buttonStyle}\n                    >{textDelete}</Button></div>\n                </Popconfirm> : null}\n\n                {this.getSetRight()}\n\n            </div>\n        );\n    }\n\n    render() {\n        let show = tool.getAttribute(this, ['props', 'rightClick', 'show',]);\n        if (!show) return null;\n\n        let x = tool.getAttribute(this, ['props', 'rightClick', 'x',]);\n        let y = tool.getAttribute(this, ['props', 'rightClick', 'y',]);\n\n        let content = this.getRightMenu();\n\n        return (\n            <div className={'rightClick'} style={{\n                left: x, top: y,\n            }}>\n                {content}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToTable(state) {\n    return {\n        rightClick: state.rightClick,\n        setting: state.setting,\n    }\n}\n\nRightClick = connect(mapStateToTable)(RightClick);\n\nexport {RightClick};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider,} from 'react-redux';\nimport {ComponentLayout} from \"./apps/layout/layout\";\nimport {Login,} from \"./apps/authenticate/login\";\nimport {RightClick} from \"./apps/right-click/right-click\";\n\nimport {setting} from \"./setting\";\nimport {store} from \"./apps/store/store\";\nimport {tool} from \"./apps/tools/tools\";\nimport {connect} from 'react-redux';\n\nimport 'antd/dist/antd.css';\nimport {Button, Popconfirm} from \"antd\";\nimport {CloudUploadOutlined} from \"@ant-design/icons\";\n\nlet openEditPath = ['open_edit'];\n\n//显示布局还是显示登录\nclass Root extends React.Component {\n    getNowPage() {\n        let nowPage = tool.getStateSpace(['nowPage',]);\n        if (!nowPage) return null;\n        let react = tool.getStateSpace(['setting', 'pageMap', nowPage, 'react',]);\n        if (!react) return null;\n\n        return react;\n    }\n\n    getRoot() {\n        let nowPage = this.getNowPage();\n        if (nowPage) return nowPage;\n\n\n        let headers = tool.getStateSpace(['setting', 'authenticate', 'headers',]);\n        let choiceRole = tool.getStateSpace(['setting', 'authenticate', 'choiceRole',]);\n        if ((!headers) || (choiceRole)) {\n            let loginReact;\n            loginReact = tool.getStateSpace(\n                ['setting', 'authenticate', 'loginReact',],\n                <Login/>,\n            );\n            return loginReact;\n        }\n        return <ComponentLayout/>;\n    }\n\n    getPath() {\n        let path = tool.getAttribute(window, ['location', 'pathname',]);\n        path = path.split('/');\n        return path[1];\n    }\n\n    getReactConfPush() {\n        let open_edit = tool.getStateSpace(['open_edit']);\n        if (!open_edit) return null;\n\n        let reactOpenEdit;\n        // tool.show_info(['开发模式已打开']);\n        setTimeout(() => tool.show_info(['开发模式已打开']), 200);\n        reactOpenEdit = <div style={{\n            position: \"fixed\",\n            top: \"50px\",\n            left: \"45%\",\n            boxShadow: \"0 0 10px rgba(0,0,0,0.1)\",\n            zIndex: '200',\n        }}>\n            <Popconfirm\n                title=\"你确定要提交吗？\"\n                description=\"你真的要提交吗？\"\n                onConfirm={() => {\n                    let settings = tool.getStateSpace(['setting']);\n                    let data = {}\n                    for (const settingsKey in settings) {\n                        if (tool.isInArray([\n                            'authenticate',\n                            'selectedMenu',\n                            'fieldMapping',\n                            'fieldDetailMapping',\n                            'bottom',\n                            'pageMap',\n                            'code',\n\n                            // 'user',\n                            // 'programmer',\n                        ], settingsKey)) continue;\n                        data[settingsKey] = settings[settingsKey];\n                    }\n                    data = JSON.stringify(data);\n                    console.log('下载云端1')\n                    let url = tool.path_join(tool.getAttribute(settings, ['confUrl']));\n                    let code = tool.getAttribute(settings, ['code']);\n                    tool.post({\n                        url: url,\n                        data: {\n                            code: code,\n                            data: data,\n                        },\n                        success: _ => {\n                            tool.show_success('提交成功');\n                        },\n                        error: data => {\n                            tool.show_error(data);\n                        },\n                    });\n                }}\n                onCancel={() => {\n                    tool.show_info('取消提交');\n                }}\n                okText=\"提交\"\n                cancelText=\"不要\"\n            >\n                <Button><CloudUploadOutlined/>配置提交到服务器</Button>\n            </Popconfirm>\n        </div>;\n        return reactOpenEdit;\n    }\n\n    render() {\n        let root = this.getRoot();\n        let path = this.getPath();\n        if (!path) path = 'defaultRoot';\n        let reactOpenEdit = this.getReactConfPush();\n        let router = {\n            defaultRoot: (<div>\n                {reactOpenEdit}\n                {root}\n                <RightClick/>\n            </div>),\n        };\n\n        let router_custom = tool.getAttribute(setting, 'router');\n        let bottom = tool.getAttribute(setting, 'bottom', null,);\n        router = Object.assign({}, router, router_custom);\n        if (!router[path]) return router['defaultRoot'];\n\n        return <div>\n            {router[path]}\n            <div>\n                {bottom ? bottom : null}\n            </div>\n            {reactOpenEdit}\n        </div>;\n    }\n}\n\nfunction mapStateToRoot(state) {\n    return {\n        authenticate: state.setting.authenticate,\n        nowPage: state.nowPage,\n        open_edit: state.open_edit,\n    }\n}\n\nRoot = connect(mapStateToRoot)(Root);\n\nReactDOM.render(<Provider store={store}><Root/></Provider>, document.getElementById('root'));\n\nlet clickSign = {};\nwindow.onload = function () {\n    document.oncontextmenu = () => false;\n\n    document.onmousedown = event => {\n        // 标记\n        let origin = tool.getAttribute(clickSign, event.button, 0);\n        clickSign[event.button] = origin + 1;\n        setTimeout(() => {\n            let origin = tool.getAttribute(clickSign, event.button, 0);\n            let now = origin - 1;\n            if (now < 0) now = 0;\n            clickSign[event.button] = now;\n\n        }, 2000);\n        if (clickSign[0] === 2 && clickSign[1] === 1 && clickSign[2] === 2) {\n            let open_edit = tool.getStateSpace(['open_edit'], false);\n            tool.setStateSpace(['open_edit'], !open_edit);\n        }\n\n        if (event.button === 2) return null;\n        let rightClickPath = ['rightClick',];\n        let rightClick = tool.getStateSpace(rightClickPath);\n\n        let sign = tool.getAttribute(rightClick, 'sign');\n        if (sign) return null;\n\n        rightClick = Object.assign({}, rightClick, {\n            show: false,\n        });\n        tool.setStateSpace(rightClickPath, rightClick);\n        return null;\n    };\n\n    tool.setTitle(setting.title);\n\n    // 下载云端配置\n    let confUrl = tool.getAttribute(setting, 'confUrl', null);\n    let code = tool.getAttribute(setting, 'code', null);\n    if (confUrl && code) {\n        let url = tool.path_join(confUrl,);\n        tool.get({\n            url: url,\n            success: data => {\n                if (data['close']) return;\n                data = tool.getAttribute(data, 'data',);\n                if (!data) return;\n                data = JSON.parse(data);\n                let newSetting = Object.assign(setting, data);\n                tool.setStateSpace(['setting'], newSetting);\n\n                // todo\n                tool.setStateSpace(['open_edit'], true);\n            },\n            error: data => {\n            },\n        });\n    }\n};\nexport {openEditPath,};","import React from \"react\";\nimport {Tag, Tooltip,} from 'antd';\n\n\nfunction strToUtf8(str) {\n    let encoder = new TextEncoder('utf8');\n    return encoder.encode(str);\n}\n\nfunction getLabelReact(label) {\n    let colors = [\n        \"magenta\",\n        \"red\",\n        \"volcano\",\n        \"orange\",\n        \"gold\",\n        \"lime\",\n        \"green\",\n        \"cyan\",\n        \"blue\",\n        \"purple\",\n    ];\n    let valueUtf8s = strToUtf8(label);\n    let valueMap = 0;\n    for (let u of valueUtf8s) valueMap += u;\n    valueMap /= 35;\n    valueMap = valueMap.toString();\n    let index = valueMap.charAt(valueMap.length - 1);\n    index = Number(index);\n    let color = colors[index];\n\n    return <Tag color={color} key={label}>{label}</Tag>;\n}\n\n\nfunction label(param) {\n    let value = param.value;\n    if (!value) value = [];\n\n\n    let helps = '';\n    let labelReacts = value.map(dictLabel => {\n        let textLabel = dictLabel.help;\n        helps = helps + ' ' + textLabel;\n        return getLabelReact(textLabel);\n    });\n\n    return (<Tooltip placement=\"topLeft\" title={helps}>\n        {labelReacts}\n    </Tooltip>);\n\n\n}\n\nexport {label, getLabelReact,};\n\n","import {createStore} from \"redux\";\nimport {storeHandles} from \"./handle\";\n\nlet store = createStore((state, action) => storeHandles.getHandle(state, action));\n\nexport {store};\n","import React from \"react\";\n\nimport {Image} from \"antd\";\n\nimport {tool} from \"../../tools/tools\";\n\nfunction imgPath(param) {\n    let value = param.value;\n    if (!value) return null;\n    // let url = tool.get_url(value);\n    let url = tool.path_join(value);\n    return (<div>\n        <Image\n            src={url}\n            style={{\n                height: '50px',\n                width: '50px',\n            }}\n            width={'100%'}\n            height={'100%'}\n        />\n    </div>)\n}\n\nexport {imgPath};\n\n","import {helpArray} from \"./help-array\";\nimport {bool} from \"./bool\";\nimport {char} from \"./char\";\nimport {money} from \"./money\";\nimport {map} from \"./map\";\nimport {imgPath} from \"./img-path\";\nimport {Video} from \"./video\";\nimport {label} from \"./label\";\nimport {file} from \"./file\";\nimport {render} from \"./render\";\nimport {chinaTime} from \"./china-time\";\nimport {yearTime} from \"./year-time\";\nimport {progress} from \"./progress\";\nimport {link} from \"./link\";\nimport {utcTime} from \"./utc-time\";\nimport {userInfo} from \"./user-info\";\nimport {tool} from \"../../tools/tools\";\n\n\nlet mapping = {\n        // char: param => (param.value ? param.value.toString() : null),\n        emptyArray: _ => null,\n        helpArray: param => helpArray(param),\n        bool: param => bool(param),\n        char: param => char(param),\n        money: param => money(param),\n        chinaTime: param => chinaTime(param),\n        yearTime: param => yearTime(param),\n        render: param => render(param),\n        map: param => map(param),\n        imgPath: param => imgPath(param),\n        imgShow: param => imgPath(param),\n        imgHead: param => imgPath(param),\n        video: param => Video(param),\n        label: param => label(param),\n        file: param => file(param),\n        progress: param => progress(param),\n        link: param => link(param),\n        utcTime: param => utcTime(param),\n        userInfo: param => userInfo(param),\n    }\n;\n\n\nfunction getColumnsType(param) {\n    let columnInfo = param.columnInfo;\n    if (columnInfo && columnInfo.funType) return columnInfo.funType(param);\n    if (columnInfo && columnInfo.type) return columnInfo.type;\n    if (columnInfo && columnInfo.render) return 'render';\n    let value = param.value;\n\n    //help数组[{id:1,help:'xxx',},{id:2,help:'yyy',},]\n    let isHelpArray = () => {\n        let isArray = Array.isArray(value);\n        if (!isArray) return false;\n\n        if (value.length < 1) return 'emptyArray';\n\n        let first = value[0];\n        if (!first) return false;\n        if (first.id && first.help) return 'helpArray';\n\n        return false;\n\n    };\n\n    for (let func of [isHelpArray,]) {\n        let type = func();\n        if (type) return type;\n    }\n\n    return false;\n}\n\n// 是否被右键选中\nfunction isChoice(param) {\n    let rightClick = tool.getStateSpace(['rightClick']);\n    let isShow = tool.getAttribute(rightClick, 'show');\n    if (!isShow) return false;\n\n\n    let rightId = tool.getAttribute(rightClick, ['record', 'id',]);\n    let lineId = tool.getAttribute(param, ['record', 'id',],);\n    if (rightId !== lineId) return false;\n\n    let rightSpacePublicPath = tool.getAttribute(rightClick, ['spacePublicPath',]);\n    let paramSpacePublicPath = tool.getAttribute(param, ['spacePublicPath',]);\n    return rightSpacePublicPath.toString() === paramSpacePublicPath.toString();\n\n\n}\n\nfunction getColumnRender(param) {\n    let columnType = getColumnsType(param);\n    let render = mapping[columnType];\n    if (!render) {\n        columnType = 'char';\n        render = mapping[columnType];\n    }\n    let result = render(param);\n    let choice = isChoice(param);\n    if (choice) {\n        result = <div style={{color: 'red',}}>{result}</div>;\n    }\n\n    return result;\n}\n\nexport {getColumnRender};\n\n","function helpArray(param) {\n    let value = '';\n    for (let line of param.value) value += `${line.help}|`;\n    if (value) value = value.slice(0, value.length - 1);\n    return value;\n}\n\nexport {helpArray};\n\n","import {tool} from \"../../tools/tools\";\n\nfunction bool(param) {\n\n    let textBool = tool.getAttribute(param, ['columnInfo', 'textBool',]);\n    if (!textBool) return '定义textBool';\n\n    let value = tool.getAttribute(param, ['value',]);\n    if (value === true) return textBool[0];\n    if (value === false) return textBool[1];\n    return null;\n}\n\nexport {bool};\n\n","function char(param) {\n\n    let value = param.value;\n    if (value === undefined || value === null) {\n        value = null;\n    } else {\n        value = value.toString();\n    }\n    return value;\n}\n\nexport {char};\n\n","function money(param) {\n\n    let value = param.value;\n    if (value === undefined || value === null) {\n        value = null;\n    } else {\n        value = value.toString();\n    }\n    if (value === null) return null;\n    return value + '元';\n}\n\nexport {money};\n\n","function chinaTime(param) {\n\n    let value = param.value;\n    if (value === undefined || value === null) {\n        value = null;\n    } else {\n        value = value.toString();\n    }\n\n    // 显示为中国时间\n    let date_obj = new Date(value);\n    let year = date_obj.getFullYear();\n    let month = date_obj.getMonth() + 1;\n    let day = date_obj.getDate();\n\n    let hours = date_obj.getHours();\n    let minutes = date_obj.getMinutes();\n    value = `${year}年${month}月${day}日 ${hours}点${minutes}分`;\n\n\n    return value;\n}\n\nexport {chinaTime};\n\n","function yearTime(param) {\n\n    let value = param.value;\n    if (value === undefined || value === null) {\n        value = null;\n    } else {\n        value = value.toString();\n    }\n\n    // 显示为中国时间\n    let date_obj = new Date(value);\n    let year = date_obj.getFullYear();\n    // let month = date_obj.getMonth() + 1;\n    // let day = date_obj.getDate();\n    //\n    // let hours = date_obj.getHours();\n    // let minutes = date_obj.getMinutes();\n    value = `${year}年`;\n\n\n    return value;\n}\n\nexport {yearTime};\n\n","import {tool} from \"../../tools/tools\";\n\nfunction map(param) {\n    let mapChoices = tool.getAttribute(param, ['columnInfo', 'map',]);\n    if (!mapChoices) return '定义map{map:{1:xxx, 2:yyy}}';\n\n    let value = tool.getAttribute(param, ['value',]);\n    let mapValue = mapChoices[value];\n\n    if (mapValue === undefined) return value;\n    return mapValue;\n}\n\nexport {map};\n\n","import React from \"react\";\nimport {Button, Modal,} from \"antd\";\n\nimport {tool} from \"../../tools/tools\";\n\n\nfunction Video(param) {\n    let value = param.value;\n    // console.log(param)\n    // spacePrivatePath record\n    let id = tool.getAttribute(param, ['record', 'id',]);\n    let columnKey = tool.getAttribute(param, ['columnKey',]);\n    let spaceKey = `${columnKey}__${id}`;\n    let spacePrivatePath = tool.getAttribute(param, 'spacePrivatePath');\n\n    let showSpacePath = spacePrivatePath.concat(['VideoColumnSpace', spaceKey,]);\n    let modalWidthPath = spacePrivatePath.concat(['VideoColumnSpace', 'modalWidth',]);\n\n    let modalWidth = tool.getStateSpace(modalWidthPath);\n    if (modalWidth) modalWidth = 0;\n    let showSpace = tool.getStateSpace(showSpacePath);\n\n    if (!value) return null;\n\n    let url = tool.get_url(value);\n    let video_id = Math.random().toString();\n\n    let onClickButton = () => {\n        tool.setStateSpace(showSpacePath, true);\n    };\n\n    let onClose = () => {\n        tool.setStateSpace(showSpacePath, false);\n        let video_obj = document.getElementById(video_id);\n        video_obj.pause();\n    };\n\n    // 获取宽度\n    let setWidth = () => {\n        let modalWidth = tool.getStateSpace(modalWidthPath);\n        if (!modalWidth) return null;\n\n        let video_obj = document.getElementById(video_id);\n\n        if (!video_obj) return null;\n\n        if (video_obj.width) tool.setStateSpace(modalWidthPath, video_obj.width);\n    };\n\n    let setWidthOut = () => {\n        setTimeout(setWidth, 100);\n    };\n\n    return (<div>\n            <Button type={'link'} onClick={onClickButton}>播放</Button>\n            <Modal\n                open={showSpace}\n                visible={showSpace}\n                onCancel={onClose}\n                footer={null}\n                width={modalWidth}\n            >\n\n                <video width=\"320\" height=\"240\" controls id={video_id}>\n                    {/*<source src={url} type=\"video/mp4\"/>*/}\n                    <source src={url}/>\n                    您的浏览器不支持视频播放器。\n                </video>\n                {setWidthOut()}\n            </Modal>\n\n        </div>\n    )\n}\n\nexport {Video};\n\n","import React from 'react';\nimport {tool} from \"../../tools/tools\";\n\nfunction file(param) {\n    let value = tool.getAttribute(param, ['value',]);\n    if (!value) return value;\n    value = tool.path_join(value);\n\n    // 链接文字\n    let textLink = tool.getAttribute(param, ['columnInfo', 'textLink',]);\n    if (!textLink) textLink = '链接';\n\n    return <a href={value} target=\"_blank\" rel=\"noreferrer\">{textLink}</a>;\n}\n\nexport {file};\n\n","import React from 'react';\nimport {tool} from \"../../tools/tools\";\n\n\nfunction progress(param) {\n\n    let value = param.value;\n    if (value === undefined || value === null) {\n        value = null;\n    } else {\n        value = value.toString();\n    }\n\n    let color = 'rgb(0,200,255)';\n    if (value >= 100) color = 'rgb(0,255,0)';\n\n    // 如果进度没有达到100% 进行表格数据的更新\n    if (value < 100) {\n        let spacePrivatePath = tool.getAttribute(param, 'spacePrivatePath');\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let selfProgress = tool.getAttribute(spacePrivate, 'selfProgress');\n        if (!selfProgress) {\n            setTimeout(() => {\n                let spacePrivate = tool.getStateSpace(spacePrivatePath);\n                spacePrivate = Object.assign({}, spacePrivate, {\n                    stateTableOnload: 'progress',\n                    selfProgress: true,\n                });\n                tool.setStateSpace(spacePrivatePath, spacePrivate);\n            }, 3000);\n        }\n    }\n\n    return <div style={{\n        border: `${color} solid 1px`,\n    }}>\n        <div style={{\n            background: color,\n            width: `${value}%`,\n        }}>\n            {value}%\n        </div>\n    </div>;\n}\n\nexport {progress};\n\n","import React from 'react';\nimport {tool} from \"../../tools/tools\";\n\nfunction link(param) {\n    let value = tool.getAttribute(param, ['value',]);\n    if (!value) return value;\n    // value = tool.get_url(value);\n\n    // 链接文字\n    let textLink = tool.getAttribute(param, ['columnInfo', 'textLink',]);\n    if (!textLink) textLink = '链接';\n    if (value.slice(0, 4) !== 'http') value = `//${value}`;\n    return <a href={value} target=\"view_window\">{textLink}</a>;\n}\n\nexport {link};\n\n","import {tool} from \"../../tools/tools\";\n\n\nfunction utcTime(param) {\n\n    let value = param.value;\n    if (value === undefined || value === null) {\n        value = null;\n    } else {\n        value = value.toString();\n    }\n\n    // utc时间显示为中国时间 +8\n    value = tool.utc_to_china(value);\n\n    return value;\n}\n\nexport {utcTime};\n\n","function userInfo(param) {\n\n    let value = param.value;\n    if (value === undefined || value === null) {\n        value = null;\n    } else {\n        // value = value.toString();\n        value = `${value.name}(${value.username})`;\n    }\n    return value;\n}\n\nexport {userInfo};\n\n","import {setting} from \"../../setting\";\n\nclass StoreHandles {\n\n    constructor() {\n        this.mapping = {};\n        this.components = {};\n    }\n\n    getUrlParam(key) {\n        let query = window.location.search.substring(1);\n        let values = query.split(\"&\");\n        for (let i = 0; i < values.length; i++) {\n            let pair = values[i].split(\"=\");\n            if (pair[0] === key) {\n                return pair[1];\n            }\n        }\n        return null;\n    }\n\n    initState() {\n        let messageRightIsShow = localStorage.getItem(\"messageRightIsShow\");\n        let messageRight = false;\n        if (messageRightIsShow !== '1') messageRight = true;\n        let nowPage = this.getUrlParam('nowPage',);\n        return {\n            setting: setting,\n            messageRightIsShow: {\n                messageRightIsShow: messageRightIsShow,\n                messageRight: messageRight,\n            },\n            nowPage: nowPage,\n        };\n    }\n\n    registerHandle(action, func) {\n        this.mapping[action.type] = func;\n    }\n\n    getHandle(state, action) {\n        let func = this.mapping[action.type];\n        if (func) return func(state, action);\n        return this.initState();\n    }\n\n    registerComponent(componentInfo) {\n        this.components[componentInfo.key] = componentInfo;\n    }\n\n    getComponent(componentKey) {\n        let component = this.components[componentKey];\n        if (component) return component;\n        return this.components;\n    }\n\n}\n\nlet storeHandles = new StoreHandles();\n\nexport {storeHandles};","import React from \"react\";\nimport {\n    Table, Button, Popover, Input, Modal,\n    Divider, Radio, Popconfirm, Select,\n} from 'antd';\nimport {DeleteOutlined, LoadingOutlined,} from '@ant-design/icons';\nimport {UpdateTableLine} from \"./table-upate-line\";\nimport {MyModal} from \"./modal\";\nimport {UpdateTablePart} from \"./table-upate-part\";\nimport {CreateTablePart} from \"./table-create-part\";\nimport {CreateTable} from \"./table-create\";\nimport {CreateCopyTable} from \"./table-create-copy\";\nimport {CreateBatchTable} from \"./table-create-batch\";\nimport {DetailLine} from \"./table-detail-line\";\nimport {Download} from \"./head/DownLoad\";\nimport {Help} from \"./head/help/help\";\nimport {Filter} from \"./head/filters/filters\";\nimport {DynamicFilter} from \"./head/dynamic_filter_type/dynamic_filter\";\nimport {DynamicFilters} from \"./head/dynamic_filters/dynamic_filters\";\nimport {Count} from \"./head/count/count\";\nimport {funcMapping} from \"../../setting\";\nimport file from './help.png';\n\nimport {connect} from 'react-redux';\nimport {tool} from \"../tools/tools\";\nimport {getColumnRender} from \"./columns/main\";\nimport {\n    RedoOutlined,\n} from '@ant-design/icons';\n\nimport './power-table.css';\nimport {Jump} from \"./head/jump/jump\";\nimport {isMobile} from \"../assistant/album/album_tool\";\n\nlet lastSign = 0;\n\n\n//智能表格 only触发器 'react'\nclass PowerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.addSubColumns = this.addSubColumns.bind(this);\n        this.addTrigger = this.addTrigger.bind(this);\n        this.getColumns = this.getColumns.bind(this);\n        this.getDataTable = this.getDataTable.bind(this);\n        this.getTableHead = this.getTableHead.bind(this);\n        this.getSubTableReact = this.getSubTableReact.bind(this);\n        this.getPagination = this.getPagination.bind(this);\n        this.getSearchBorder = this.getSearchBorder.bind(this);\n        this.getFatherId = this.getFatherId.bind(this);\n    }\n\n    // 生命周期: 组件生成\n    componentDidMount() {\n        this.updateData();\n    }\n\n    // 生命周期: state更新\n    shouldComponentUpdate(state, _1, _2) {\n        this.updateData();\n        return state;\n    }\n\n    // 更新表格数据\n    updateData() {\n        setTimeout(() => {\n            //公共空间路径及空间\n            let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n\n\n            // 私有空间路径\n            let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n            let spacePrivate = tool.getStateSpace(spacePrivatePath);\n\n            // 加载状态\n            let stateTableOnloadPath = spacePrivatePath.concat(['stateTableOnload']);\n            let stateTableOnload = tool.getStateSpace(stateTableOnloadPath);\n\n            if (!stateTableOnload) return null;\n\n            let page, page_size, search, filter;\n            let isObject = Object.prototype.toString.call(stateTableOnload) === '[object Object]';\n            if (stateTableOnload === 'page') { // 携带原来的page参数\n                page = tool.getAttribute(spacePrivate, 'page');\n                page_size = tool.getAttribute(spacePrivate, 'page_size');\n\n                // 携带过滤器的值\n                search = tool.getAttribute(spacePrivate, 'searchWord');\n\n            } else if (stateTableOnload === 'search') {// 搜索式更新\n                page = 1;\n                page_size = tool.getAttribute(spacePrivate, 'page_size');\n                search = tool.getAttribute(spacePrivate, 'searchWord');\n            } else if (stateTableOnload === 'dynamic') {// 动态过滤器更新\n                page = 1;\n                page_size = tool.getAttribute(spacePrivate, 'page_size');\n            } else if (stateTableOnload === 'progress') {// 进度条更新\n                page = tool.getAttribute(spacePrivate, 'page');\n                page_size = tool.getAttribute(spacePrivate, 'page_size');\n                search = tool.getAttribute(spacePrivate, 'searchWord');\n            } else if (stateTableOnload === 'filter') {// 过滤器更新\n                page = 1;\n            } else if (isObject) { // 参数附加在stateTableOnload里\n                page = tool.getAttribute(stateTableOnload, 'page');\n                page_size = tool.getAttribute(stateTableOnload, 'page_size');\n            }\n\n            // 获取请求路径\n            let requestUrlPath = spacePublicPath.concat(['path']);\n            let requestUrl = tool.getStateSpace(requestUrlPath);\n\n            // 获取上级表的id father_id\n            let urlParam = {};\n            let fatherRecord = tool.getAttribute(this, ['props', 'param', 'fatherRecord',]);\n            if (fatherRecord) urlParam['father_id'] = fatherRecord.id;\n\n            // 全部附加过滤器参数\n            let spacePublic = tool.getStateSpace(spacePublicPath);\n            filter = tool.getAttribute(spacePrivate, 'filterValue');\n            if (!filter) {\n                filter = tool.getAttribute(spacePublic, ['filters', 'default',])\n            }\n\n            if (page) urlParam['page'] = page;\n            if (page_size) urlParam['page_size'] = page_size;\n            if (search) urlParam['search'] = search;\n            if (filter) {\n                // let params = tool.getAttribute(spacePrivate, 'params', {});\n                urlParam['filter'] = filter;\n                // for (const param in params) {\n                //     urlParam[param] = params[param];\n                // }\n            }\n\n            // 携带多过滤器的值\n            let params = tool.getAttribute(spacePrivate, 'params', {});\n            for (const param in params) {\n                urlParam[param] = params[param];\n            }\n\n            let sign = 'filter__';\n            const signLength = sign.length;\n            for (const key in spacePublic) {\n                if (!key.startsWith(sign)) continue;\n                let valueDefault = tool.getAttribute(spacePublic, [key, 'default']);\n                const filterKey = key.substring(signLength);\n                if (!urlParam[filterKey]) urlParam[filterKey] = valueDefault;\n            }\n\n\n            // 携带动态过滤器的值\n            let searchKey = tool.getAttribute(spacePrivate, 'searchKey',);\n            if (searchKey) {\n                let searchKey = tool.getAttribute(spacePrivate, 'searchKey');\n                search = tool.getAttribute(spacePrivate, 'dynamicSearchWord');\n                urlParam[searchKey] = search;\n            }\n\n            // 最后一次请求的刷新请求总是覆盖旧的刷新请求\n            let mySign = lastSign + 1;\n            lastSign = mySign;\n\n            let url = tool.get_url(requestUrl, false, urlParam ? urlParam : {},);\n            let requestParam = {\n                url: url,\n                success: responseData => {\n                    // 在返回数据的这段时间,当前请求是不是依然是最后一次,如果不是就没必要刷新了\n                    if (mySign < lastSign) return null;\n\n                    let textSuccess = '数据已加载';\n\n                    if (stateTableOnload === 'page') textSuccess = '数据已刷新';\n                    let isObject = Object.prototype.toString.call(stateTableOnload) === '[object Object]';\n                    if (isObject) textSuccess = `加载于第${page}页`;\n\n                    // 最后一次更新的时间戳\n                    let timestamp = new Date().getTime();\n\n                    let spacePrivate = tool.getStateSpace(spacePrivatePath);\n                    spacePrivate = Object.assign({}, spacePrivate, {\n                        responseData: responseData,\n                        stateTableOnload: false,\n                        searchWaiting: false,\n                        lastUpdateTime: timestamp,\n                    });\n                    if (page) spacePrivate['page'] = page;\n                    if (page_size) spacePrivate['page_size'] = page_size;\n                    if (stateTableOnload === 'progress') spacePrivate['selfProgress'] = false;\n                    spacePrivate['selfProgress'] = false;\n                    tool.setStateSpace(spacePrivatePath, spacePrivate);\n                    if (stateTableOnload !== 'progress') {\n                        tool.show_success(textSuccess);\n                    }\n\n                    // 右键使用提醒\n                    let messageRight = tool.getStateSpace(['messageRightIsShow', 'messageRight']);\n                    if (!messageRight) {\n                        tool.show_info('温馨提醒: 在数据行上使用右键可以唤出操作菜单!');\n                        tool.setStateSpace(['messageRightIsShow', 'messageRight'], true);\n                    }\n\n                },\n                error: error => {\n                    tool.show_error(error);\n                    let spacePrivate = tool.getStateSpace(spacePrivatePath);\n                    spacePrivate = Object.assign({}, spacePrivate, {\n                        stateTableOnload: false,\n                    });\n                    tool.setStateSpace(spacePrivatePath, spacePrivate);\n                }\n            };\n\n\n            // 上次更新时间\n            spacePrivate = tool.getStateSpace(spacePrivatePath);\n            let lastUpdateTime = tool.getAttribute(spacePrivate, 'lastUpdateTime');\n            let nowTime = new Date().getTime();\n            let stateUpdate = true;\n            if (lastUpdateTime) {\n                let diff = nowTime - lastUpdateTime;\n                if (diff < 1000) stateUpdate = false;\n            }\n            if (stateUpdate) {\n                tool.get(requestParam);\n            } else {\n                let spacePrivate = tool.getStateSpace(spacePrivatePath);\n                spacePrivate = Object.assign({}, spacePrivate, {\n                    stateTableOnload: false,\n                });\n                tool.setStateSpace(spacePrivatePath, spacePrivate);\n            }\n        }, 100);\n    }\n\n    // 得到列信息\n    getColumns() {\n        //公共空间路径及空间\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n\n        //私有空间路径\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n\n        let columnsInfo = tool.getAttribute(spacePublic, 'columns');\n\n        // 是否使用过滤器的字段\n        let filterValue = tool.getAttribute(spacePrivate, 'filterValue');\n        if (!filterValue) {\n            filterValue = tool.getAttribute(spacePublic, ['filters', 'default',])\n        }\n        let filtersInfo = tool.getAttribute(spacePublic, 'filters');\n        let filtersChoices = tool.getAttribute(filtersInfo, 'choices');\n        let filterNow = tool.getAttribute(filtersChoices, filterValue);\n        let filterColumns = tool.getAttribute(filterNow, 'columns');\n        if (filterValue && filtersInfo && filtersChoices && filterNow && filterColumns) {\n            columnsInfo = filterColumns;\n        }\n\n        let columns;\n\n        if (!columnsInfo) {\n            let tableData = tool.getAttribute(spacePrivate, ['responseData', 'results',],);\n            if (!tableData || tableData.length < 1) return [];\n            columns = [];\n            let oneLine = tableData[0];\n\n            for (let fieldName in oneLine) {\n                if (!oneLine.hasOwnProperty(fieldName)) continue;\n                let column = {\n                    title: fieldName,\n                    dataIndex: fieldName,\n                    key: fieldName,\n                    // ellipsis: true,\n                    render: (value, record, index) => {\n                        return getColumnRender({\n                            value: value,\n                            record: record,\n                            index: index,\n                            spacePublicPath: spacePublicPath,\n                            spacePublic: spacePublic,\n                            columnsInfo: null,\n                            columnInfo: null,\n                            columnKey: fieldName,\n                        });\n                    },\n                };\n                columns.push(column);\n            }\n        } else {\n            columns = [];\n\n            for (let columnKey in columnsInfo) {\n                if (!columnsInfo.hasOwnProperty(columnKey)) continue;\n                let columnInfo = columnsInfo[columnKey];\n\n                // 是否隐藏\n                let hidden = tool.getAttribute(columnInfo, 'hidden', false,);\n                if (hidden) continue;\n\n                let ellipsis = tool.getAttribute(columnInfo, 'ellipsis', true);\n                let column = {\n                    title: columnInfo.title,\n                    rate: columnInfo.rate,\n                    dataIndex: columnInfo.dataIndex ? columnInfo.dataIndex : columnKey,\n                    key: columnKey,\n                    ellipsis: ellipsis,\n                    render: (value, record, index) => {\n                        return getColumnRender({\n                            value: value,\n                            record: record,\n                            index: index,\n                            spacePublicPath: spacePublicPath,\n                            spacePublic: spacePublic,\n                            spacePrivatePath: spacePrivatePath,\n                            columnsInfo: columnsInfo,\n                            columnInfo: columnsInfo[columnKey],\n                            columnKey: columnKey,\n                        });\n                    },\n                };\n\n                columns.push(column);\n            }\n        }\n        columns = this.addSubColumns(columns);\n        columns = this.addTrigger(columns);\n\n\n        // 计算总宽度\n        let totalWidth = 0;\n        for (let column of columns) {\n            // 隐藏的跳过\n            let hidden = tool.getAttribute(column, 'hidden', false,);\n            if (hidden) continue;\n\n            let rate = parseFloat(tool.getAttribute(column, 'rate', 1,));\n            totalWidth += rate;\n        }\n\n        // 计算宽度\n        for (let column of columns) {\n            // 隐藏的跳过\n            let hidden = tool.getAttribute(column, 'hidden', false,);\n            if (hidden) continue;\n            let rate = parseFloat(tool.getAttribute(column, 'rate', 1,));\n            column['width'] = `${rate / totalWidth * 100}%`;\n        }\n\n        return columns;\n    }\n\n    // 增加子表列\n    addSubColumns(columns) {\n        //公共空间路径及空间\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n\n        //私有空间路径\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n\n        //得到此列的内容\n        let getSubColumn = columnName => {\n            //点击列中的 展开(或关闭)子表按钮\n            let onClickSubColumn = (recordId, columnName) => {\n\n                //私有空间 展开的行有哪些\n                let expandedRowKeysPath = spacePrivatePath.concat(['expandedRowKeys']);\n                let expandedRowKeys = tool.getStateSpace(expandedRowKeysPath);\n                if (!expandedRowKeys) expandedRowKeys = [];\n\n                // 行空间--选中的列\n                let spaceRowKey = `spaceRow__${recordId}`;\n                let spaceRowPath = spacePrivatePath.concat([spaceRowKey,]);\n                let nowSelectedColumnPath = spaceRowPath.concat(['nowSelectedColumn']);\n                let nowSelectedColumn = tool.getStateSpace(nowSelectedColumnPath);\n\n                //决定是展开还是关闭\n                let state = (nowSelectedColumn === columnName) ? !tool.isInArray(expandedRowKeys, recordId) : true;\n\n                //得到更新后的expandedRowKeys\n                let newExpandedRowKeys = [];\n                for (let expandedRowKey of expandedRowKeys) if (expandedRowKey !== recordId) newExpandedRowKeys.push(expandedRowKey);\n                if (state) {\n                    newExpandedRowKeys.push(recordId);\n\n                    nowSelectedColumn = state ? columnName : null;\n                    if (nowSelectedColumn) {\n                        //子表的公共空间路径\n                        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n                        let spaceSubPublicPath = spacePublicPath.concat(nowSelectedColumn);\n\n                        //子表的私有空间路径\n                        let spaceSubPrivateKey = `spacePrivate__${recordId}`;\n                        let spaceSubPrivatePath = spaceSubPublicPath.concat(spaceSubPrivateKey);\n\n                        //更新子表的加载状态为true  stateTableOnload\n                        let spaceSubPrivate = tool.getStateSpace(spaceSubPrivatePath);\n\n                        //子表的私有空间\n                        spaceSubPrivate = Object.assign({}, spaceSubPrivate, {\n                            stateTableOnload: true,\n                        });\n\n                        //更新子表的私有空间\n                        tool.setStateSpace(spaceSubPrivatePath, spaceSubPrivate);\n                    }\n\n                }\n\n                // 获取新的行空间\n                let spaceRow = tool.getStateSpace(spaceRowPath);\n\n                spaceRow = Object.assign({}, spaceRow, {\n                    nowSelectedColumn: nowSelectedColumn,\n                });\n\n                //得到新的私有空间 更新行空间\n                let spacePrivate = tool.getStateSpace(spacePrivatePath);\n                spacePrivate = Object.assign({}, spacePrivate, {\n                    expandedRowKeys: newExpandedRowKeys,\n                    onlyRecordId: recordId, // 通知子表渲染函数仅渲染本行的子表格就行\n                });\n                spacePrivate[spaceRowKey] = spaceRow;\n\n                tool.setStateSpace(spacePrivatePath, spacePrivate);\n            };\n\n            let columnTitle = tool.getAttribute(spacePublic, [columnName, 'columnTitle']);\n            let columnRate = tool.getAttribute(spacePublic, [columnName, 'rate']);\n            let columnHidden = tool.getAttribute(spacePublic, [columnName, 'hidden']);\n\n            return {\n                title: columnTitle,\n                key: columnName,\n                rate: columnRate,\n                hidden: columnHidden,\n                render: record => {\n\n                    // 渲染is_show\n                    let is_show = tool.getAttribute(spacePublic, [columnName, 'is_show',]);\n                    if (is_show) {\n                        let param = {\n                            record: record,\n                        };\n                        let content = is_show(param);\n                        if (content) return content;\n                    }\n\n                    let recordId = record.id;\n\n                    //私有空间 展开的行有哪些\n                    let expandedRowKeysPath = spacePrivatePath.concat(['expandedRowKeys']);\n                    let expandedRowKeys = tool.getStateSpace(expandedRowKeysPath);\n                    if (!expandedRowKeys) expandedRowKeys = [];\n\n                    // 行空间--选中的列\n                    let spaceRowKey = `spaceRow__${recordId}`;\n                    let nowSelectedColumnPath = spacePrivatePath.concat([spaceRowKey, 'nowSelectedColumn']);\n                    let nowSelectedColumn = tool.getStateSpace(nowSelectedColumnPath);\n\n\n                    //是展开还是关闭\n                    let text = '展开';\n                    let type = null;\n                    let state = (nowSelectedColumn === columnName) ? !tool.isInArray(expandedRowKeys, recordId) : true;\n                    if (!state) {\n                        text = '关闭';\n                        type = 'primary';\n                    }\n                    return <Button type={type} onClick={() => onClickSubColumn(recordId, columnName)}>{text}</Button>;\n                },\n            }\n        };\n\n        columns = Object.assign([], columns);\n\n        for (let key in spacePublic) {\n\n            if (!spacePublic.hasOwnProperty(key)) continue;\n            if (key.slice(0, 5) === 'sub__') columns.push(getSubColumn(key));\n        }\n\n        return columns;\n    }\n\n    // 增加触发器\n    addTrigger(columns) {\n        //公共空间路径及空间\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n\n        //得到此列的内容\n        let getTriggerColumn = (columnName, func) => {\n            const triggerPublicSpacePath = spacePublicPath.concat([columnName,]);\n\n            let columnTitle = tool.getAttribute(spacePublic, [columnName, 'columnTitle']);\n            let textButton = tool.getAttribute(spacePublic, [columnName, 'textButton'], '触发器',);\n            let buttonType = tool.getAttribute(spacePublic, [columnName, 'buttonType'], 'link',);\n            let rate = tool.getAttribute(spacePublic, [columnName, 'rate'],);\n            let hidden = tool.getAttribute(spacePublic, [columnName, 'hidden'],);\n\n\n            return {\n                title: columnTitle,\n                key: columnName,\n                rate: rate,\n                hidden: hidden,\n                render: (text, record) => {\n                    // 私有属性\n                    const triggerPrivateSpacePath = triggerPublicSpacePath.concat([`private_${record.id}`]);\n                    textButton = tool.getStateSpace(triggerPrivateSpacePath.concat(['textButton',]), textButton,);\n                    buttonType = tool.getStateSpace(triggerPrivateSpacePath.concat(['buttonType',]), buttonType,);\n                    const disabled = tool.getStateSpace(triggerPrivateSpacePath.concat(['disabled',]), false,);\n                    // 触发器参数\n                    const param = {\n                        record: record,\n                        columnName: columnName,\n                        triggerPublicSpacePath: triggerPublicSpacePath,\n                        spacePrivatePath: spacePrivatePath,\n                        triggerPrivateSpacePath: triggerPrivateSpacePath,\n                    };\n\n                    return <Button\n                        type={buttonType}\n                        onClick={() => func(param)}\n                        disabled={disabled}\n                    >\n                        {textButton}\n                    </Button>;\n                },\n            }\n        };\n\n        columns = Object.assign([], columns);\n\n        for (let key in spacePublic) {\n            if (!spacePublic.hasOwnProperty(key)) continue;\n\n            if (key.slice(0, 9) === 'trigger__') {\n                let func = tool.getAttribute(spacePublic, [key, 'func']);\n                if (typeof func === 'string') func = funcMapping[func];\n                if (!func) continue;\n                columns.push(getTriggerColumn(key, func));\n            }\n        }\n\n        return columns;\n    }\n\n    // 得到表格数据\n    getDataTable() {\n        //私有空间路径\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        return tool.getAttribute(spacePrivate, ['responseData', 'results',],);\n    }\n\n    // 得到子表的React\n    getSubTableReact(record) {\n        // 当前行空间 选中的列\n        let recordId = tool.getAttribute(record, 'id');\n        let spaceRowKey = `spaceRow__${recordId}`;\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let onlyRecordId = tool.getAttribute(spacePrivate, 'onlyRecordId',);\n        let spaceRowPath = spacePrivatePath.concat([spaceRowKey]);\n        let nowSelectedColumnPath = spaceRowPath.concat(['nowSelectedColumn']);\n        let nowSelectedColumn = tool.getStateSpace(nowSelectedColumnPath);\n        if (!nowSelectedColumn) return '空的';\n\n        //子表的公共空间路径\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let spaceSubPublicPath = spacePublicPath.concat(nowSelectedColumn);\n\n        //子表的私有空间路径\n        let spaceSubPrivateKey = `spacePrivate__${recordId}`;\n        let spaceSubPrivatePath = spaceSubPublicPath.concat(spaceSubPrivateKey);\n\n        // 是否自定义\n        let spaceSubPublic = tool.getStateSpace(spaceSubPublicPath);\n        let react = tool.getAttribute(spaceSubPublic, 'react');\n        if (typeof react === \"string\") react = funcMapping[react];\n        if (typeof react === \"function\") {\n            let param = {\n                spacePublicPath: spaceSubPublicPath,\n                spacePrivatePath: spaceSubPrivatePath,\n                spacePrivateKey: spaceSubPrivateKey,\n                fatherRecord: record,\n            };\n            return react(param);\n        }\n\n\n        return <PowerTable param={{\n            spacePublicPath: spaceSubPublicPath,\n            spacePrivatePath: spaceSubPrivatePath,\n            spacePrivateKey: spaceSubPrivateKey,\n            fatherRecord: record,\n            fatherLastClickRecordId: onlyRecordId, // 最后点击的行\n        }}/>\n    }\n\n    // 右键点击行的触发\n    getOnRow() {\n        let onContextMenu = (event, record, _) => {\n            // 本表的公共空间路径\n            let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n            let fatherRecord = tool.getAttribute(this, ['props', 'param', 'fatherRecord',]);\n            // 本表的私有空间路径\n            let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n\n            // 本行的行空间路径\n            let recordId = record.id;\n            let spaceRowKey = `spaceRow__${recordId}`;\n            let spaceRowPath = spacePrivatePath.concat([spaceRowKey,]);\n\n            // 获取新的右键空间\n            let rightClickPath = ['rightClick'];\n            let rightClickSpace = tool.getStateSpace(rightClickPath);\n            rightClickSpace = Object.assign({}, rightClickSpace, {\n                x: event.clientX,\n                y: event.clientY,\n                record: record,\n                fatherRecord: fatherRecord,\n                show: true,\n                // sign: true,\n                spacePublicPath: spacePublicPath,\n                spacePrivatePath: spacePrivatePath,\n                spaceRowPath: spaceRowPath,\n            });\n            tool.setStateSpace(rightClickPath, rightClickSpace);\n        };\n\n        return (record, index) => {\n            return {\n                // onClick: event => {},\n                // onDoubleClick: event => {},\n                onContextMenu: event => onContextMenu(event, record, index,),\n                // onMouseEnter: () => onMouseEnter(record, index,),\n                // onMouseLeave: () => onMouseLeave(),\n            };\n        }\n    }\n\n    // 创建按钮\n    getCreateButtonReact() {\n        // 当前行空间 选中的列\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let spaceRowPath = tool.getAttribute(this, ['props', 'param', 'spaceRowPath',]);\n        let fatherRecord = tool.getAttribute(this, ['props', 'param', 'fatherRecord',]);\n\n        // 是否显示\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n        if (!columnsCreate) return null;\n\n\n        let textPath = spacePublicPath.concat(['text__create_button']);\n        let text = tool.getStateSpace(textPath);\n        if (!text) text = '创建数据';\n\n        let onClickCreate = () => {\n            let infoModalPath = ['infoModal'];\n            let infoModal = tool.getStateSpace(infoModalPath);\n            infoModal = Object.assign({}, infoModal, {\n                nowType: 'Create',\n                paramModal: {\n                    spacePublicPath: spacePublicPath,\n                    spacePrivatePath: spacePrivatePath,\n                    spaceRowPath: spaceRowPath,\n                    fatherRecord: fatherRecord,\n                },\n            });\n            tool.setStateSpace(infoModalPath, infoModal);\n        };\n\n        let useReact = () => {\n            // let react__ = tool.getAttribute(columnsCreate, 'react__');\n        };\n\n        let useMenu = () => {\n            let menu__ = tool.getAttribute(columnsCreate, 'menu__');\n            let onClickMenu = tool.getStateSpace(['setting', 'onClickMenu',]);\n            if (!onClickMenu) return null;\n            onClickMenu(menu__, true);\n        };\n\n        let click = onClickCreate;\n        let react__ = tool.getAttribute(columnsCreate, 'react__');\n        if (react__) click = useReact;\n        let menu__ = tool.getAttribute(columnsCreate, 'menu__');\n        if (menu__) click = useMenu;\n\n        return <Button onClick={click} type={'primary'}>{text}</Button>\n    }\n\n    // 批量创建按钮\n    getCreateBatchButtonReact() {\n\n\n        // 当前行空间 选中的列\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n\n        let columnsCreateBatchPath = spacePublicPath.concat(['columnsCreateBatch']);\n        let columnsCreateBatch = tool.getStateSpace(columnsCreateBatchPath);\n        if (!columnsCreateBatch) return null;\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n        if (!columnsCreate) return null;\n\n\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let spaceRowPath = tool.getAttribute(this, ['props', 'param', 'spaceRowPath',]);\n        let fatherRecord = tool.getAttribute(this, ['props', 'param', 'fatherRecord',]);\n\n\n        let textPath = spacePublicPath.concat(['text__create_batch-button']);\n        let text = tool.getStateSpace(textPath);\n        if (!text) text = '批量创建数据';\n        let onClickCreate = () => {\n            let infoModalPath = ['infoModal'];\n            let infoModal = tool.getStateSpace(infoModalPath);\n            infoModal = Object.assign({}, infoModal, {\n                nowType: 'CreateBatch',\n                paramModal: {\n                    spacePublicPath: spacePublicPath,\n                    spacePrivatePath: spacePrivatePath,\n                    spaceRowPath: spaceRowPath,\n                    fatherRecord: fatherRecord,\n                },\n            });\n            tool.setStateSpace(infoModalPath, infoModal);\n        };\n        return <Button onClick={() => onClickCreate()} type={'primary'}>{text}</Button>\n    }\n\n    // 刷新按钮\n    getUpdateDataButton() {\n        // let text = '刷新数据';\n        let onUpdateData = () => {\n            let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n            let stateTableOnloadPath = spacePrivatePath.concat(['stateTableOnload']);\n            tool.setStateSpace(stateTableOnloadPath, 'page');\n        };\n        // return <Button onClick={() => onUpdateData()} type={'primary'}>{text}</Button>\n        return <RedoOutlined onClick={() => onUpdateData()}/>;\n    }\n\n    // 搜索框\n    getSearchBorder() {\n\n        // 得到公共空间路径\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n\n        let searchHiddenPath = spacePublicPath.concat(['text__hidden']);\n        let searchHidden = tool.getStateSpace(searchHiddenPath, false,);\n        if (searchHidden) return null;\n\n\n        // 搜索提示文字为\n        let textSearchHelp = tool.getAttribute(spacePublic, 'text__search_help');\n        // if (!textSearchHelp) textSearchHelp = '输入关键字进行搜索';\n        if (!textSearchHelp) return null;\n\n        // 得到私有空间路径\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n\n        // 是否搜索等待中\n        let searchWaiting = tool.getAttribute(spacePrivate, 'searchWaiting');\n\n        // 关键词\n        let searchWord = tool.getAttribute(spacePrivate, 'searchWord');\n\n        // 点击搜索的触发\n        let onclick = () => {\n            let spacePrivate = tool.getStateSpace(spacePrivatePath);\n            spacePrivate = Object.assign({}, spacePrivate, {\n                stateTableOnload: 'search',\n                searchWaiting: true,\n            });\n            tool.setStateSpace(spacePrivatePath, spacePrivate);\n        };\n\n        return (<div style={{display: 'inline-block', verticalAlign: 'super', marginLeft: '5px',}}>\n            <Popover content={textSearchHelp}>\n                <Input\n                    addonBefore={\"输入关键字\"}\n                    addonAfter={<div\n                        style={{width: '40px', height: '100%',}}\n                        onClick={onclick}\n                    >\n                        {searchWaiting ? <LoadingOutlined/> : '搜索'}\n                    </div>}\n                    style={{width: '250px',}}\n                    onChange={\n                        event => {\n                            let value = event.target.value;\n                            let searchWordPath = spacePrivatePath.concat(['searchWord']);\n                            tool.setStateSpace(searchWordPath, value);\n                        }\n                    }\n                    placeholder={textSearchHelp}\n                    value={searchWord}\n                />\n            </Popover>\n        </div>);\n    }\n\n    getFatherId() {\n        let fatherId;\n        fatherId = tool.getAttribute(this, ['props', 'param', 'fatherRecord', 'id',]);\n        return fatherId;\n    }\n\n    //  开发模式 表格行 编辑搜索框\n    getReactSearchEditButton() {\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let searchPath = spacePublicPath.concat(['text__search_help']);\n        let searchHiddenPath = spacePublicPath.concat(['text__hidden']);\n        let searchHelp = tool.getStateSpace(searchPath);\n        let searchHidden = tool.getStateSpace(searchHiddenPath, false,);\n        if (!searchHidden) searchHidden = false;\n\n        let reacts = [];\n        reacts.push(<div>\n            <Divider>自定义搜索框</Divider>\n            <table style={{textAlign: 'left',}}>\n                <thead>\n\n                {/*第1行 是否显示*/}\n                <tr>\n                    <th>是否显示:</th>\n                    <th><Radio.Group\n                        onChange={event => {\n                            tool.setStateSpace(searchHiddenPath, event.target.value,);\n                        }}\n                        value={searchHidden}\n                        style={{\n                            marginLeft: '10px',\n                        }}\n                    >\n                        <Radio value={false}>显示</Radio>\n                        <Radio value={true}>隐藏</Radio>\n                    </Radio.Group></th>\n                </tr>\n\n                {/*第2行 修改帮助信息*/}\n                <tr>\n                    <th>\n                        修改帮助信息:\n                    </th>\n                    <th>\n\n                        <input\n                            onBlur={event => {\n                                tool.setStateSpace(searchPath, event.target.value,);\n                            }}\n                            defaultValue={searchHelp}\n                        />\n                    </th>\n                </tr>\n                </thead>\n            </table>\n        </div>)\n\n        // 搜索框\n        let isSetSearchShowPath = spacePrivatePath.concat(['isSetSearchShow']);\n        let isSetSearchShow = tool.getStateSpace(isSetSearchShowPath, false);\n\n        let content = <Modal\n            visible={isSetSearchShow}\n            open={isSetSearchShow}\n            onCancel={() => tool.setStateSpace(isSetSearchShowPath, false,)}\n            footer={null}\n        >\n            <br/><br/>\n            {reacts}\n        </Modal>\n\n\n        let style = {\n            display: \"inline-block\",\n        };\n        let setLine;\n        setLine = <div style={style}>\n            {content}\n            <Button\n                onClick={() => tool.setStateSpace(isSetSearchShowPath, true,)}\n            >搜索框</Button>\n        </div>;\n        return setLine;\n    }\n\n    //  开发模式 表格行 编辑过滤器\n    getReactFilterEditButton() {\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n\n        // 编辑框\n        let isSetFilterShowPath = spacePrivatePath.concat(['isSetFilterShow']);\n        let isSetFilterShow = tool.getStateSpace(isSetFilterShowPath, false);\n\n        // 过滤器列表\n        let reacts = [];\n        let sign = 'filter__';\n        const signLength = sign.length;\n        for (const key in spacePublic) {\n            if (!key.startsWith(sign)) continue;\n            let filterInfoPath = spacePublicPath.concat([key]);\n            let filterInfo = tool.getAttribute(spacePublic, key);\n            // let type = tool.getAttribute(filterInfo, 'type');\n            const filterKey = key.substring(signLength);\n            let keyPath = spacePublicPath.concat([key]);\n\n            // 是否隐藏\n            let hidden = tool.getAttribute(filterInfo, 'hidden', false,);\n\n            // 方向\n            let type = tool.getAttribute(filterInfo, 'type', false,);\n\n\n            // 选项\n            let reactChoices = [];\n            const choices = tool.getAttribute(filterInfo, 'choices', []);\n            const defaultValue = tool.getAttribute(filterInfo, 'default',);\n            for (const choiceKey in choices) {\n                reactChoices.push(<div\n                    key={choiceKey}\n                    style={{marginBottom: '10px',}}>\n\n                    {/*值*/}\n                    值:<input\n                    onBlur={event => {\n                        let value = event.target.value;\n                        let newChoices = {};\n                        for (const _choiceKey in choices) {\n                            let useKey = _choiceKey;\n                            if (_choiceKey === choiceKey) useKey = value;\n                            newChoices[useKey] = choices[_choiceKey];\n                        }\n                        let newFilterInfo = Object.assign(filterInfo, {choices: newChoices,});\n                        tool.setStateSpace(filterInfoPath, newFilterInfo);\n                    }}\n                    style={{width: '50px',}}\n                    defaultValue={choiceKey}/>\n                    {'    '}\n\n                    {/*读*/}\n                    读:<input\n                    onBlur={event => {\n                        let value = event.target.value;\n                        let newChoices = {};\n                        for (const _choiceKey in choices) {\n                            let _value = choices[_choiceKey];\n                            if (_choiceKey === choiceKey) _value['text'] = value;\n                            newChoices[_choiceKey] = _value;\n                        }\n                        let newFilterInfo = Object.assign(filterInfo, {choices: newChoices,});\n                        tool.setStateSpace(filterInfoPath, newFilterInfo);\n                    }}\n                    style={{width: '50px',}}\n                    defaultValue={choices[choiceKey]['text']}/>\n\n                    {/*默认值*/}\n                    <Radio.Group\n                        onChange={event => {\n                            let value = event.target.value;\n                            let newFilterInfo = Object.assign(filterInfo, {default: value,});\n                            tool.setStateSpace(filterInfoPath, newFilterInfo);\n                        }}\n                        value={defaultValue}\n                        style={{\n                            marginLeft: '10px',\n                        }}\n                    >\n                        <Radio value={choiceKey}>设为缺省值</Radio>\n                    </Radio.Group>\n\n                    {/*删除选项*/}\n                    <Popconfirm\n                        title=\"删除这个选项吗?\"\n                        description=\"删除这个选项吗?\"\n                        onConfirm={() => {\n                            let newChoices = {};\n                            for (const _choiceKey in choices) {\n                                if (_choiceKey === choiceKey) continue;\n                                newChoices[_choiceKey] = choices[_choiceKey];\n                            }\n                            let newFilterInfo = Object.assign(filterInfo, {choices: newChoices,});\n                            tool.setStateSpace(filterInfoPath, newFilterInfo);\n                        }}\n                        onCancel={() => tool.show_info('已取消')}\n                        okText=\"删除\"\n                        cancelText=\"不要\"\n                    >\n                        <DeleteOutlined style={{color: 'red',}}/>\n                    </Popconfirm>\n                </div>)\n            }\n\n            // 增加选项\n            reactChoices.push(<div\n                style={{}}\n                key={'create'}>\n                <Button\n                    onClick={() => {\n                        let newChoices = {};\n                        for (const _choiceKey in choices) newChoices[_choiceKey] = choices[_choiceKey];\n                        newChoices['新选项:修改值'] = {text: '新选项:修改读'}\n\n                        let newFilterInfo = Object.assign(filterInfo, {choices: newChoices,});\n                        tool.setStateSpace(filterInfoPath, newFilterInfo);\n                    }}\n                    style={{\n                        width: '100%',\n                    }}>增加选项</Button>\n            </div>)\n\n            reacts.push(<div>\n                <Divider>参数:{filterKey}</Divider>\n                <table style={{textAlign: 'left',}}>\n                    <thead>\n\n                    {/*第1行 是否显示*/}\n                    <tr>\n                        <th>是否显示:</th>\n                        <th><Radio.Group\n                            onChange={event => {\n                                tool.setStateSpace(keyPath, Object.assign(filterInfo, {hidden: event.target.value,}));\n                            }}\n                            value={hidden}\n                            style={{\n                                marginLeft: '10px',\n                            }}\n                        >\n                            <Radio value={false}>显示</Radio>\n                            <Radio value={true}>隐藏</Radio>\n                        </Radio.Group></th>\n                    </tr>\n\n                    {/*第2行 方向*/}\n                    <tr>\n                        <th>方向:</th>\n                        <th><Radio.Group\n                            onChange={event => {\n                                tool.setStateSpace(keyPath, Object.assign(filterInfo, {type: event.target.value,}));\n                            }}\n                            value={type}\n                            style={{\n                                marginLeft: '10px',\n                            }}\n                        >\n                            <Radio value={'row'}>横向</Radio>\n                            <Radio value={'col'}>纵向</Radio>\n                        </Radio.Group></th>\n                    </tr>\n\n                    {/*第3行 修改参数名*/}\n                    <tr>\n                        <th>\n                            修改参数名:\n                        </th>\n                        <th>\n\n                            <input\n                                onBlur={event => {\n                                    let newSpacePublic = {};\n                                    let spacePublic = tool.getStateSpace(spacePublicPath);\n                                    for (const _key in spacePublic) {\n                                        let useKey = _key;\n                                        if (_key === key) useKey = `${sign}${event.target.value}`;\n                                        newSpacePublic[useKey] = spacePublic[_key];\n                                    }\n                                    tool.setStateSpace(spacePublicPath, newSpacePublic);\n                                }}\n                                defaultValue={filterKey}\n                            />\n                        </th>\n                    </tr>\n\n                    {/*第4行 修改选项*/}\n                    <tr>\n                        <th>\n                            选项:\n                        </th>\n                        <th>\n                            {reactChoices}\n                        </th>\n                    </tr>\n\n\n                    </thead>\n                </table>\n\n            </div>);\n        }\n\n        // 增加过滤器\n        reacts.push(<div key={'createFilter'}>\n            <Divider/>\n            <Button\n                onClick={() => {\n                    let newData = {};\n                    let random = Math.random() * 1000000\n                    random = Math.floor(random);\n                    newData[`filter__my_filter_${random}`] = {\n                        choices: {\n                            1: {\n                                text: '选项1',\n                            },\n                            2: {\n                                text: '选项2',\n                            }\n                        },\n                        default: 1,\n                        type: 'col',\n                    };\n\n                    let newSpacePublic = Object.assign(spacePublic, newData);\n                    tool.setStateSpace(spacePublicPath, newSpacePublic);\n                }}\n                style={{\n                    width: '100%',\n                }}>增加过滤器</Button>\n        </div>)\n\n\n        let content = <Modal\n            // closeIcon={' '}\n            visible={isSetFilterShow}\n            open={isSetFilterShow}\n            onCancel={() => tool.setStateSpace(isSetFilterShowPath, false,)}\n            footer={null}\n        >\n            <br/><br/>\n            {reacts}\n        </Modal>\n\n\n        let style = {\n            display: \"inline-block\",\n        };\n        let setLine;\n        setLine = <div style={style}>\n            {content}\n            <Button\n                onClick={() => tool.setStateSpace(isSetFilterShowPath, true,)}\n            >过滤器</Button>\n        </div>;\n        return setLine;\n    }\n\n    // 字段附加\n    getReactFieldAppend(keyPath) {\n        let react = null;\n        let typePath = keyPath.concat(['type',]);\n        let type = tool.getStateSpace(typePath, 'char');\n\n        // 布尔类型\n        if (type === 'bool') {\n            let textBoolPath = keyPath.concat(['textBool',]);\n            let textBool = tool.getStateSpace(textBoolPath, ['真值', '假值',]);\n            react = <div\n                style={{\n                    width: '185px',\n                    overflow: 'auto',\n                }}\n            >\n                <table style={{\n                    textAlign: 'left',\n                }}>\n                    <thead>\n\n                    {/*第1行 真值映射*/}\n                    <tr>\n                        <th>\n                            真值映射:\n                        </th>\n                        <th>\n                            <div>\n                                <input\n                                    style={{width: '100px',}}\n                                    onChange={event => {\n                                        tool.setStateSpace(textBoolPath, [\n                                            event.target.value,\n                                            textBool[1],\n                                        ]);\n                                    }}\n                                    value={textBool[0]}\n                                />\n                            </div>\n                        </th>\n                    </tr>\n\n                    {/*第2行 假值映射*/}\n                    <tr>\n                        <th>\n                            假值映射:\n                        </th>\n                        <th>\n                            <div>\n                                <input\n                                    style={{width: '100px',}}\n                                    onChange={event => {\n                                        tool.setStateSpace(textBoolPath, [\n                                            textBool[0],\n                                            event.target.value,\n                                        ]);\n                                    }}\n                                    value={textBool[1]}\n                                />\n                            </div>\n                        </th>\n                    </tr>\n\n                    </thead>\n                </table>\n            </div>\n        }\n\n        // 映射类型\n        if (type === 'map') {\n\n            let mapPath = keyPath.concat(['map',]);\n            let map = tool.getStateSpace(mapPath, {});\n\n            let lines = [];\n\n            // 列表\n            for (const mapKey in map) {\n                let value = map[mapKey];\n                lines.push(\n                    <tr key={mapKey}>\n                        {/*key*/}\n                        <th>\n                            <input\n                                onBlur={event => {\n                                    let value = event.target.value;\n                                    let newMap = {};\n                                    for (const _key in map) {\n                                        let userKey = _key;\n                                        if (_key === mapKey) userKey = value;\n                                        newMap[userKey] = map[_key];\n                                    }\n                                    tool.setStateSpace(mapPath, newMap);\n                                }}\n                                style={{width: '40px',}}\n                                defaultValue={mapKey}\n                            />\n                        </th>\n\n                        {/*箭头*/}\n                        <th>\n                            --->\n                        </th>\n\n                        {/*value*/}\n                        <th>\n                            <input\n                                onBlur={event => {\n                                    let value = event.target.value;\n                                    let newMap = {};\n                                    for (const _key in map) {\n                                        let userValue = map[_key];\n                                        if (_key === mapKey) userValue = value;\n                                        newMap[_key] = userValue;\n                                    }\n                                    tool.setStateSpace(mapPath, newMap);\n                                }}\n                                style={{width: '80px',}}\n                                defaultValue={value}\n                            />\n                        </th>\n\n                        {/*删除*/}\n                        <th>\n                            <Popconfirm\n                                title=\"确定删除吗?\"\n                                description=\"确定删除吗?\"\n                                onConfirm={() => {\n                                    let newMap = {};\n                                    for (const _key in map) {\n                                        if (_key !== mapKey) newMap[_key] = map[_key];\n                                    }\n                                    tool.setStateSpace(mapPath, newMap);\n                                }}\n                                onCancel={() => {\n                                }}\n                                okText=\"删除\"\n                                cancelText=\"不要\"\n                            >\n                                <DeleteOutlined style={{color: 'red', marginLeft: '5px',}}/>\n                            </Popconfirm>\n\n                        </th>\n                    </tr>\n                );\n\n            }\n\n            // 增加映射\n            lines.push(<div key={'create'} style={{width: '180px',}}>\n                <button\n                    onClick={() => {\n                        let newMap = Object.assign({}, map,);\n                        let random = Math.random() * 100000;\n                        random = Math.floor(random);\n                        newMap[`key_${random}`] = '新映射';\n                        tool.setStateSpace(mapPath, newMap);\n                    }}\n                    style={{width: '100%',}}\n                >增加映射\n                </button>\n            </div>)\n\n\n            react = <div\n                style={{\n                    width: '185px',\n                    overflow: 'auto',\n                    // border:'red 1px solid',\n                }}\n            >\n                <table style={{\n                    textAlign: 'left',\n                }}>\n                    <thead>\n\n                    {/*第1行 真值映射*/}\n                    <tr>\n                        <th>\n                            {/*真值映射:*/}\n                        </th>\n                        <th>\n                            {lines}\n                        </th>\n                    </tr>\n\n\n                    </thead>\n                </table>\n            </div>\n        }\n\n        // 渲染类型\n        if (type === 'render') {\n\n            let renderPath = keyPath.concat(['render',]);\n            let defaultFunc = '(value, param)=>{return \"返回值\";}';\n            let render = tool.getStateSpace(renderPath, defaultFunc);\n\n            let errorInfo = '';\n            try {\n                // eslint-disable-next-line no-eval\n                let func = eval(`(${render})`);\n                if (typeof func !== 'function') {\n                    errorInfo = '字符串无法识别为函数';\n                }\n            } catch (error) {\n                errorInfo = '语法错误';\n            }\n\n            react = <div\n                style={{\n                    width: '185px',\n                    overflow: 'auto',\n                }}\n            >\n                <table style={{\n                    textAlign: 'left',\n                }}>\n                    <thead>\n                    {/*第1行 真值映射*/}\n                    <tr>\n                        <th>\n                            <Input.TextArea\n                                value={render}\n                                onChange={event => {\n                                    let value = event.target.value;\n                                    tool.setStateSpace(renderPath, value);\n                                }}\n                                row={10}\n                            />\n                            <button\n                                style={{width: '100%',}}\n                                onClick={() => {\n                                    let string = '(value, param)=>{return \"返回值(演示)\";}';\n                                    let func;\n                                    try {\n                                        // eslint-disable-next-line no-eval\n                                        func = eval(`(${render})`);\n                                    } catch (error) {\n                                    }\n                                    if (func) tool.setStateSpace(renderPath, func);\n                                    if (!func) tool.setStateSpace(renderPath, string);\n                                }}\n                            >快速输入\n                            </button>\n                            <div style={{color: 'red',}}>\n                                {errorInfo}\n                            </div>\n                            <div style={{color: 'grey', fontSize: '80%',}}>\n                                本功能存在<span style={{color: 'red',}}>注入攻击</span>的风险, 请在开发完成后及时关闭开发模式.<br/>\n                                提示:在IDE中写好代码然后直接粘贴.<br/>\n                            </div>\n                        </th>\n                    </tr>\n\n\n                    </thead>\n                </table>\n            </div>\n        }\n\n        return react;\n    }\n\n    //  开发模式 表格行 编辑列\n    getReactColEditButton() {\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n\n        // 编辑框\n        let isSetColShowPath = spacePrivatePath.concat(['isSetColShow']);\n        let isSetColShow = tool.getStateSpace(isSetColShowPath, false);\n\n        // 编辑组件\n        let reactColumns = [];\n\n        // 字段位置移动\n        const movePos = (columnKey, direction = -1) => {\n            // direction=-1 上移 direction=1 下移\n            let columns = tool.getStateSpace(columnsPath);\n            let columnsArray = Object.keys(columns);\n            let index = columnsArray.indexOf(columnKey);\n\n            let indexTarget = index + direction;\n            if (indexTarget < 0) {\n                tool.show_info('已经在最顶部.');\n                return;\n            }\n            if (indexTarget > columnsArray.length - 1) {\n                tool.show_info('已经在最底部.');\n                return;\n            }\n\n\n            let temp = columnsArray[indexTarget];\n            columnsArray[indexTarget] = columnsArray[index];\n            columnsArray[index] = temp;\n            let newColumns = {};\n            for (const _columnKey of columnsArray) newColumns[_columnKey] = columns[_columnKey];\n            tool.setStateSpace(columnsPath, newColumns);\n        };\n\n        // 子列位置移动\n        const movePosSub = (key, direction = -1) => {\n            // direction=-1 上移 direction=1 下移\n            let subArray = [];\n            let spacePublic = tool.getStateSpace(spacePublicPath);\n            const sign = 'sub__';\n            for (let _key in spacePublic) {\n                if (!spacePublic.hasOwnProperty(_key)) continue;\n                if (_key.slice(0, sign.length) !== sign) continue;\n                subArray.push(_key);\n            }\n            let index = subArray.indexOf(key);\n\n            let indexSub = index + direction;\n            if (indexSub < 0) {\n                tool.show_info('已经在最顶部.');\n                return;\n            }\n            if (indexSub > subArray.length - 1) {\n                tool.show_info('已经在最底部.');\n                return;\n            }\n            let temp = subArray[indexSub];\n            subArray[indexSub] = subArray[index];\n            subArray[index] = temp;\n\n            let newSpacePublic = {};\n            for (const _key of subArray) newSpacePublic[_key] = spacePublic[_key];\n\n            for (let _key in spacePublic) {\n                if (!spacePublic.hasOwnProperty(_key)) continue;\n                if (_key.slice(0, sign.length) === sign) continue;\n                newSpacePublic[_key] = spacePublic[_key];\n            }\n            tool.setStateSpace(spacePublicPath, newSpacePublic);\n        };\n\n        // 触发器位置移动\n        const movePosTrigger = (key, direction = -1) => {\n            // direction=-1 上移 direction=1 下移\n            let triggerArray = [];\n            let spacePublic = tool.getStateSpace(spacePublicPath);\n            for (let _key in spacePublic) {\n                if (!spacePublic.hasOwnProperty(_key)) continue;\n                if (_key.slice(0, 9) !== 'trigger__') continue;\n                triggerArray.push(_key);\n            }\n            let index = triggerArray.indexOf(key);\n\n            let indexTarget = index + direction;\n            if (indexTarget < 0) {\n                tool.show_info('已经在最顶部.');\n                return;\n            }\n            if (indexTarget > triggerArray.length - 1) {\n                tool.show_info('已经在最底部.');\n                return;\n            }\n            let temp = triggerArray[indexTarget];\n            triggerArray[indexTarget] = triggerArray[index];\n            triggerArray[index] = temp;\n\n            let newSpacePublic = {};\n            for (const _key of triggerArray) newSpacePublic[_key] = spacePublic[_key];\n\n            for (let _key in spacePublic) {\n                if (!spacePublic.hasOwnProperty(_key)) continue;\n                if (_key.slice(0, 9) === 'trigger__') continue;\n                newSpacePublic[_key] = spacePublic[_key];\n            }\n            tool.setStateSpace(spacePublicPath, newSpacePublic);\n        };\n\n        // 字段\n        let columnsPath = spacePublicPath.concat(['columns']);\n        let columnsInfo = tool.getAttribute(spacePublic, 'columns');\n        for (const columnKey in columnsInfo) {\n            let column = columnsInfo[columnKey];\n            let keyPath = spacePublicPath.concat(['columns', columnKey]);\n\n            let typePath = keyPath.concat(['type',]);\n            let type = tool.getStateSpace(typePath, 'char');\n\n\n            // 是否隐藏\n            let hidden = tool.getAttribute(column, 'hidden', false,);\n\n            // 宽度\n            let rate = tool.getAttribute(column, 'rate', 1,);\n\n            // 字段附加\n            let reactFieldAppend = this.getReactFieldAppend(keyPath);\n            let border = reactFieldAppend ? '#BEBEBE 1px solid' : '';\n\n            reactColumns.push(<div\n                key={columnKey}\n            >\n\n                {/*分割线*/}\n                <Divider>字段名:{column.title}</Divider>\n\n                {/*删除字段*/}\n                <div\n                    style={{float: 'right',}}>\n                    <Popconfirm\n                        title=\"删除这个字段吗?\"\n                        description=\"删除这个字段吗?\"\n                        onConfirm={() => {\n                            let newColumns = {};\n                            let columns = tool.getStateSpace(columnsPath);\n                            for (const _columnKey in columns) {\n                                if (_columnKey === columnKey) continue;\n                                newColumns[_columnKey] = columns[_columnKey];\n                            }\n\n                            tool.setStateSpace(columnsPath, newColumns);\n                        }}\n                        onCancel={() => tool.show_info('已取消')}\n                        okText=\"删除\"\n                        cancelText=\"不要\"\n                    >\n                        <DeleteOutlined style={{color: 'red',}}/>\n                    </Popconfirm>\n                </div>\n\n                {/*列表*/}\n                <table style={{textAlign: 'left',}}>\n                    <thead>\n\n                    {/*第1行 是否显示*/}\n                    <tr>\n                        <th>是否显示:</th>\n                        <th><Radio.Group\n                            onChange={event => {\n                                tool.setStateSpace(keyPath, Object.assign(column, {hidden: event.target.value,}));\n                            }}\n                            value={hidden}\n                            style={{\n                                marginLeft: '10px',\n                            }}\n                        >\n                            <Radio value={false}>显示</Radio>\n                            <Radio value={true}>隐藏</Radio>\n                        </Radio.Group></th>\n                    </tr>\n\n                    {/*第2行 修改字段名*/}\n                    <tr>\n                        <th>\n                            修改字段名:\n                        </th>\n                        <th>\n\n                            <input\n                                value={column.title}\n                                onChange={event => {\n                                    tool.setStateSpace(keyPath, Object.assign(column, {title: event.target.value,}));\n                                }}\n                            />\n                        </th>\n                    </tr>\n\n                    {/*第3行 字段类型*/}\n                    <tr style={{border: border,}}>\n                        <th>\n                            字段类型:\n                        </th>\n                        <th>\n                            <div>\n                                <Select\n                                    style={{width: '100%',}}\n                                    // defaultValue={type}\n                                    value={type}\n                                    onChange={value => {\n                                        tool.setStateSpace(keyPath, Object.assign(column, {type: value,}));\n                                    }}\n                                    options={[\n                                        {\n                                            value: 'emptyArray',\n                                            label: '下划线转空类型',\n                                        },\n                                        {\n                                            value: 'helpArray',\n                                            label: 'help数组',\n                                        },\n                                        {\n                                            value: 'bool',\n                                            label: '布尔类型',\n                                        },\n                                        {\n                                            value: 'char',\n                                            label: '字符串',\n                                        },\n                                        {\n                                            value: 'money',\n                                            label: '人民币',\n                                        },\n                                        {\n                                            value: 'chinaTime',\n                                            label: '时间类型(中国)',\n                                        },\n                                        {\n                                            value: 'yearTime',\n                                            label: '时间类型(年份)',\n                                        },\n                                        {\n                                            value: 'render',\n                                            label: '渲染类型',\n                                        },\n                                        {\n                                            value: 'map',\n                                            label: '映射类型',\n                                        },\n                                        {\n                                            value: 'imgPath',\n                                            label: '图片类型(路径)',\n                                        },\n                                        {\n                                            value: 'imgShow',\n                                            label: '图片类型(展示)',\n                                        },\n                                        {\n                                            value: 'imgHead',\n                                            label: '图片类型(头像)',\n                                        },\n                                        {\n                                            value: 'video',\n                                            label: '视频类型',\n                                        },\n                                        {\n                                            value: 'label',\n                                            label: '标签类型',\n                                        },\n                                        {\n                                            value: 'file',\n                                            label: '文件类型',\n                                        },\n                                        {\n                                            value: 'progress',\n                                            label: '进度条类型',\n                                        },\n                                        {\n                                            value: 'link',\n                                            label: '链接类型',\n                                        },\n                                        {\n                                            value: 'utcTime',\n                                            label: '时间类型(UTC)',\n                                        },\n                                        {\n                                            value: 'userInfo',\n                                            label: '用户信息类型',\n                                        },\n                                    ]}\n                                />\n                                <div style={{width: '100%',}}>\n                                    {reactFieldAppend}\n                                </div>\n\n                            </div>\n                        </th>\n                    </tr>\n\n                    {/*第4行 映射字段*/}\n                    <tr>\n                        <th>\n                            修改映射字段:\n                        </th>\n                        <th>\n\n                            <input\n                                defaultValue={columnKey}\n                                // value={columnKey}\n                                onBlur={event => {\n                                    let newColumns = {};\n                                    for (const _columnKey in columnsInfo) {\n                                        let useKey = _columnKey;\n                                        if (_columnKey === columnKey) useKey = event.target.value;\n                                        newColumns[useKey] = columnsInfo[_columnKey];\n                                    }\n                                    tool.setStateSpace(columnsPath, newColumns);\n                                }}\n                            />\n                        </th>\n                    </tr>\n\n                    {/*第5行 修改列宽*/}\n                    <tr>\n                        <th>\n                            列宽:\n                        </th>\n                        <th>\n                            <input\n                                value={rate}\n                                onChange={event => {\n                                    let value = event.target.value;\n                                    tool.setStateSpace(keyPath, Object.assign(column, {rate: value,}));\n                                }}\n                            />\n                        </th>\n                    </tr>\n\n                    {/*第6行 位置*/}\n                    <tr>\n                        <th>\n                            位置:\n                        </th>\n                        <th>\n                            <Button\n                                onClick={() => movePos(columnKey, -1)}\n                                style={{width: '50%',}}>上移</Button>\n                            <Button\n                                onClick={() => movePos(columnKey, 1)}\n                                style={{width: '50%',}}>下移</Button>\n                        </th>\n                    </tr>\n\n                    </thead>\n                </table>\n\n\n            </div>);\n        }\n\n        // 增加字段\n        reactColumns.push(<div key={'create_column'} style={{width: '100%',}}>\n            <Divider/>\n            <Button\n                onClick={() => {\n                    let columns = tool.getStateSpace(columnsPath);\n                    let newData = {};\n                    let random = Math.random() * 100000;\n                    random = Math.floor(random);\n                    newData[`field_${random}`] = {title: '新字段',};\n                    let newColumns = Object.assign(columns, newData);\n                    tool.setStateSpace(columnsPath, newColumns);\n                }}\n                style={{width: '100%',}}>增加字段</Button>\n            <Divider/>\n        </div>);\n\n        // 子列\n        for (let key in spacePublic) {\n            if (!spacePublic.hasOwnProperty(key)) continue;\n            if (key.slice(0, 5) !== 'sub__') continue;\n\n            let column = spacePublic[key];\n            let keyPath = spacePublicPath.concat([key,]);\n\n            // 是否隐藏\n            let hidden = tool.getAttribute(column, 'hidden', false,);\n\n            // 宽度\n            let rate = tool.getAttribute(column, 'rate', 1,);\n\n            reactColumns.push(<div\n                key={key}\n                style={{\n                    backgroundColor: 'lightcyan',\n                }}\n            >\n\n                {/*分割线*/}\n                <Divider>字段名:{column.columnTitle}</Divider>\n\n                {/*删除字段*/}\n                <div\n                    style={{float: 'right',}}>\n                    <Popconfirm\n                        title=\"删除这个字段吗?\"\n                        description=\"删除这个字段吗?\"\n                        onConfirm={() => {\n                            let newSpacePublic = {};\n                            for (let _key in spacePublic) {\n                                if (_key === key) continue;\n                                newSpacePublic[_key] = spacePublic[_key];\n                            }\n                            tool.setStateSpace(spacePublicPath, newSpacePublic);\n                        }}\n                        onCancel={() => tool.show_info('已取消')}\n                        okText=\"删除\"\n                        cancelText=\"不要\"\n                    >\n                        <DeleteOutlined style={{color: 'red',}}/>\n                    </Popconfirm></div>\n\n\n                <table style={{textAlign: 'left',}}>\n                    <thead>\n\n                    {/*    /!*第1行 是否显示*!/*/}\n                    <tr>\n                        <th>是否显示:</th>\n                        <th><Radio.Group\n                            onChange={event => {\n                                tool.setStateSpace(keyPath, Object.assign(column, {hidden: event.target.value,}));\n                            }}\n                            value={hidden}\n                            style={{\n                                marginLeft: '10px',\n                            }}\n                        >\n                            <Radio value={false}>显示</Radio>\n                            <Radio value={true}>隐藏</Radio>\n                        </Radio.Group></th>\n                    </tr>\n\n                    {/*    /!*第2行 修改字段名*!/*/}\n                    <tr>\n                        <th>\n                            修改字段名:\n                        </th>\n                        <th>\n\n                            <input\n                                value={column.columnTitle}\n                                onChange={event => {\n                                    tool.setStateSpace(keyPath, Object.assign(column, {columnTitle: event.target.value,}));\n                                }}\n                            />\n                        </th>\n                    </tr>\n\n                    {/*    /!*第3行 修改列宽*!/*/}\n                    <tr>\n                        <th>\n                            列宽:\n                        </th>\n                        <th>\n                            <input\n                                value={rate}\n                                onChange={event => {\n                                    let value = event.target.value;\n                                    tool.setStateSpace(keyPath, Object.assign(column, {rate: value,}));\n                                }}\n                            />\n                        </th>\n                    </tr>\n\n                    {/*第4行 位置*/}\n                    <tr>\n                        <th>\n                            位置:\n                        </th>\n                        <th>\n                            <Button\n                                onClick={() => movePosSub(key, -1)}\n                                style={{width: '50%',}}>上移</Button>\n                            <Button\n                                onClick={() => movePosSub(key, 1)}\n                                style={{width: '50%',}}>下移</Button>\n                        </th>\n                    </tr>\n\n\n                    </thead>\n                </table>\n\n\n            </div>);\n        }\n\n        // 触发器\n        for (let key in spacePublic) {\n            if (!spacePublic.hasOwnProperty(key)) continue;\n            if (key.slice(0, 9) !== 'trigger__') continue;\n\n            let column = spacePublic[key];\n            let keyPath = spacePublicPath.concat([key,]);\n\n            // 是否隐藏\n            let hidden = tool.getAttribute(column, 'hidden', false,);\n\n            // 宽度\n            let rate = tool.getAttribute(column, 'rate', 1,);\n\n            reactColumns.push(<div\n                key={key}\n                style={{\n                    backgroundColor: 'lightpink',\n                }}\n            >\n\n                {/*分割线*/}\n                <Divider>字段名:{column.columnTitle}</Divider>\n\n                {/*删除触发器*/}\n                <div\n                    style={{float: 'right',}}>\n                    <Popconfirm\n                        title=\"删除这个触发器吗?\"\n                        description=\"删除这个触发器吗?\"\n                        onConfirm={() => {\n                            let newSpacePublic = {};\n                            for (let _key in spacePublic) {\n                                if (_key === key) continue;\n                                newSpacePublic[_key] = spacePublic[_key];\n                            }\n                            tool.setStateSpace(spacePublicPath, newSpacePublic);\n                        }}\n                        onCancel={() => tool.show_info('已取消')}\n                        okText=\"删除\"\n                        cancelText=\"不要\"\n                    >\n                        <DeleteOutlined style={{color: 'red',}}/>\n                    </Popconfirm></div>\n\n                <table style={{textAlign: 'left',}}>\n                    <thead>\n\n                    {/*    /!*第1行 是否显示*!/*/}\n                    <tr>\n                        <th>是否显示:</th>\n                        <th><Radio.Group\n                            onChange={event => {\n                                tool.setStateSpace(keyPath, Object.assign(column, {hidden: event.target.value,}));\n                            }}\n                            value={hidden}\n                            style={{\n                                marginLeft: '10px',\n                            }}\n                        >\n                            <Radio value={false}>显示</Radio>\n                            <Radio value={true}>隐藏</Radio>\n                        </Radio.Group></th>\n                    </tr>\n\n                    {/*    /!*第2行 修改字段名*!/*/}\n                    <tr>\n                        <th>\n                            修改字段名:\n                        </th>\n                        <th>\n\n                            <input\n                                value={column.columnTitle}\n                                onChange={event => {\n                                    tool.setStateSpace(keyPath, Object.assign(column, {columnTitle: event.target.value,}));\n                                }}\n                            />\n                        </th>\n                    </tr>\n\n                    {/*    /!*第3行 修改列宽*!/*/}\n                    <tr>\n                        <th>\n                            列宽:\n                        </th>\n                        <th>\n                            <input\n                                value={rate}\n                                onChange={event => {\n                                    let value = event.target.value;\n                                    tool.setStateSpace(keyPath, Object.assign(column, {rate: value,}));\n                                }}\n                            />\n                        </th>\n                    </tr>\n\n\n                    {/*第4行 位置*/}\n                    <tr>\n                        <th>\n                            位置:\n                        </th>\n                        <th>\n                            <Button\n                                onClick={() => movePosTrigger(key, -1)}\n                                style={{width: '50%',}}>上移</Button>\n                            <Button\n                                onClick={() => movePosTrigger(key, 1)}\n                                style={{width: '50%',}}>下移</Button>\n                        </th>\n                    </tr>\n\n\n                    </thead>\n                </table>\n\n\n            </div>);\n        }\n\n        let content = <Modal\n            // closeIcon={' '}\n            visible={isSetColShow}\n            open={isSetColShow}\n            onCancel={() => tool.setStateSpace(isSetColShowPath, false,)}\n            footer={null}\n        >\n            <br/><br/>\n            {reactColumns}\n        </Modal>\n\n\n        let style = {\n            display: \"inline-block\",\n        };\n        let setLine;\n        setLine = <div style={style}>\n            {content}\n            <Button\n                onClick={() => tool.setStateSpace(isSetColShowPath, true,)}\n            >字段</Button>\n        </div>;\n        return setLine;\n    }\n\n    //  开发模式 表格行 编辑帮助\n    getReactHelpEditButton() {\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let helpTextPath = spacePublicPath.concat(['help', 'text',]);\n        let helpHiddenPath = spacePublicPath.concat(['help', 'hidden',]);\n        let helpHidden = tool.getStateSpace(helpHiddenPath);\n        if (!helpHidden) helpHidden = false;\n        let helpText = tool.getStateSpace(helpTextPath);\n\n        let reacts = [];\n        reacts.push(<div key={'xx'}>\n            <Divider>自定义帮助</Divider>\n\n            <table style={{textAlign: 'left',}}>\n                <thead>\n\n                {/*第1行 是否显示*/}\n                <tr>\n                    <th>是否显示:</th>\n                    <th><Radio.Group\n                        onChange={event => {\n                            tool.setStateSpace(helpHiddenPath, event.target.value,);\n                        }}\n                        value={helpHidden}\n                        style={{\n                            marginLeft: '10px',\n                        }}\n                    >\n                        <Radio value={false}>显示</Radio>\n                        <Radio value={true}>隐藏</Radio>\n                    </Radio.Group></th>\n                </tr>\n\n                {/*第2行 修改帮助内容*/}\n                <tr>\n                    <th>\n                        修改帮助内容:\n                    </th>\n                    <th>\n                        <Input.TextArea\n                            rows={8}\n                            onBlur={event => {\n                                tool.setStateSpace(helpTextPath, event.target.value,);\n                            }}\n                            defaultValue={helpText}\n                        />\n                        <div\n                            style={{\n                                fontSize: '90%',\n                                color: 'lightgrey',\n                                // textAlign: 'center',\n                            }}\n                        >接受一串html字符串.提示:可在IDE编辑完直接粘贴到这里.\n                        </div>\n                    </th>\n                </tr>\n\n                </thead>\n            </table>\n\n        </div>)\n\n        // 帮助编辑\n        let isSetHelpShowPath = spacePrivatePath.concat(['isSetHelpShow']);\n        let isSetHelpShow = tool.getStateSpace(isSetHelpShowPath, false);\n\n        let content = <Modal\n            visible={isSetHelpShow}\n            open={isSetHelpShow}\n            onCancel={() => tool.setStateSpace(isSetHelpShowPath, false,)}\n            footer={null}\n        >\n            <br/><br/>\n            {reacts}\n        </Modal>\n\n\n        let style = {\n            display: \"inline-block\",\n        };\n        let setLine;\n        setLine = <div style={style}>\n            {content}\n            <Button\n                onClick={() => tool.setStateSpace(isSetHelpShowPath, true,)}\n            >帮助</Button>\n        </div>;\n        return setLine;\n    }\n\n    //  开发模式 表格行 编辑下载\n    getReactDownloadEditButton() {\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n\n        // 是否隐藏\n        let downloadHiddenPath = spacePublicPath.concat(['disableDownload']);\n        let downloadHidden = tool.getStateSpace(downloadHiddenPath);\n        if (!downloadHidden) downloadHidden = false;\n\n\n        let reacts = [];\n        reacts.push(<div key={'xx'}>\n            <Divider>下载功能</Divider>\n\n            <table style={{textAlign: 'left',}}>\n                <thead>\n\n                {/*第1行 是否显示*/}\n                <tr>\n                    <th>是否显示:</th>\n                    <th><Radio.Group\n                        onChange={event => {\n                            tool.setStateSpace(downloadHiddenPath, event.target.value,);\n                        }}\n                        value={downloadHidden}\n                        style={{\n                            marginLeft: '10px',\n                        }}\n                    >\n                        <Radio value={false}>显示</Radio>\n                        <Radio value={true}>隐藏</Radio>\n                    </Radio.Group></th>\n                </tr>\n                </thead>\n            </table>\n\n        </div>)\n\n        // 下载编辑\n        let isSetDownloadShowPath = spacePrivatePath.concat(['isSetDownloadShow']);\n        let isSetDownloadShow = tool.getStateSpace(isSetDownloadShowPath, false);\n\n        let content = <Modal\n            visible={isSetDownloadShow}\n            open={isSetDownloadShow}\n            onCancel={() => tool.setStateSpace(isSetDownloadShowPath, false,)}\n            footer={null}\n        >\n            <br/><br/>\n            {reacts}\n        </Modal>\n\n\n        let style = {\n            display: \"inline-block\",\n        };\n        let setLine;\n        setLine = <div style={style}>\n            {content}\n            <Button\n                onClick={() => tool.setStateSpace(isSetDownloadShowPath, true,)}\n            >下载</Button>\n        </div>;\n        return setLine;\n    }\n\n    // 开发模式 表格行\n    getSetLine() {\n        let open_edit = tool.getStateSpace(['open_edit']);\n        if (!open_edit) return null;\n\n        let setLine;\n        let style = {\n            backgroundColor: \"#fffffff\",\n            borderRadius: \"5px\",\n            overflow: \"auto\",\n            border: \"rgba(130, 50, 21, 0.16) solid 1px\",\n        };\n        setLine = <div style={style}>\n            {/*列*/}\n            {this.getReactColEditButton()}\n\n            {/*搜索框*/}\n            {this.getReactSearchEditButton()}\n\n            {/*过滤器*/}\n            {this.getReactFilterEditButton()}\n\n            {/*帮助*/}\n            {this.getReactHelpEditButton()}\n\n            {/*下载*/}\n            {this.getReactDownloadEditButton()}\n        </div>;\n        return setLine;\n    }\n\n    // 表格头\n    getTableHead() {\n        // 创建按钮\n        let createButtonReact = this.getCreateButtonReact();\n        // 批量创建按钮\n        let createBatchButtonReact = this.getCreateBatchButtonReact();\n        // 刷新数据按钮\n        let updateDataButton = this.getUpdateDataButton();\n        // 搜索框\n        let searchBorder = this.getSearchBorder();\n\n        return (<div>\n            <div className={'powerTableHead'}>\n                <div className={'powerTableHeadButton'}>{createButtonReact}</div>\n                <div className={'powerTableHeadButton'}>{createBatchButtonReact}</div>\n                <div className={'powerTableHeadButton'}>{updateDataButton}</div>\n                <div className={'powerTableHeadButton'}>{searchBorder}</div>\n\n                {/*下载组件*/}\n                <div className={'powerTableHeadButton'}><Download param={\n                    this.props.param\n                }/></div>\n\n                {/*过滤器*/}\n                <div className={'powerTableHeadButton'}><Filter param={\n                    this.props.param\n                }/></div>\n\n                {/*动态过滤器*/}\n                <div className={'powerTableHeadButton'}><DynamicFilter\n                    param={this.props.param}\n                    getFatherId={this.getFatherId}\n                /></div>\n\n                {/*多动态过滤器*/}\n                <div className={'powerTableHeadButton'}><DynamicFilters\n                    param={this.props.param}\n                    getFatherId={this.getFatherId}\n                /></div>\n\n                {/*跳转器*/}\n                <div className={'powerTableHeadButton'}><Jump param={\n                    this.props.param\n                }/></div>\n\n                {/*帮助*/}\n                <div className={'powerTableHeadButton'} style={{\n                    float: 'right',\n                    marginRight: '20px',\n                }}><Help param={\n                    this.props.param\n                }/></div>\n\n                {/*数量*/}\n                <div className={'powerTableHeadButton'} style={{\n                    float: 'right',\n                    marginRight: '20px',\n                }}><Count param={\n                    this.props.param\n                }/></div>\n\n            </div>\n            {this.getSetLine()}\n        </div>);\n    }\n\n    // 分页器\n    getPagination() {\n        // 私有空间路径\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let stateTableOnloadPath = spacePrivatePath.concat(['stateTableOnload']);\n\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let count = tool.getAttribute(spacePrivate, ['responseData', 'count']);\n        if (!count) count = 0;\n        let page = tool.getAttribute(spacePrivate, ['page']);\n        if (!page) page = 1;\n\n        return {\n            // defaultCurrent: this.state.defaultCurrent,\n            // defaultCurrent: this.props.list.page,\n            total: count,\n            defaultPageSize: 10,\n            onChange: (page, page_size) => {\n                let onloadInfo = {\n                    page: page,\n                    page_size: page_size,\n                };\n                tool.setStateSpace(stateTableOnloadPath, onloadInfo);\n            },\n            current: page,\n        };\n\n    };\n\n    // 表格尾巴\n    getFooter() {\n        let fatherRecord = tool.getAttribute(this, ['props', 'param', 'fatherRecord',]);\n        if (fatherRecord) return null;\n        return this.getTableHead();\n        // let buttonCreate = this.getCreateButtonReact();\n        // let buttonCreateBatch = this.getCreateBatchButtonReact();\n        // return (<div>\n        //     <div className={'powerTableFooterButton'}>{buttonCreate}</div>\n        //     <div className={'powerTableFooterButton'}>{buttonCreateBatch}</div>\n        // </div>);\n    }\n\n\n    render() {\n        let columns = this.getColumns();\n        let tableData = this.getDataTable();\n\n        // 私有空间路径\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let stateTableOnloadPath = spacePrivatePath.concat(['stateTableOnload']);\n        let stateTableOnload = tool.getStateSpace(stateTableOnloadPath);\n        let loading = false;\n        if (stateTableOnload === null) loading = false;\n        if (stateTableOnload) loading = true;\n        if (stateTableOnload === 'progress') loading = false;\n\n        // 获取展开的行 spacePrivate.expandedRowKeys\n        let expandedRowKeysPath = spacePrivatePath.concat(['expandedRowKeys']);\n        let expandedRowKeys = tool.getStateSpace(expandedRowKeysPath);\n\n        // 鼠标与行交互的相关触发\n        let onRow = this.getOnRow();\n\n        // 表格头\n        let tableHead = this.getTableHead();\n\n        // 分页器\n        let pagination = this.getPagination();\n\n        return (<div className={isMobile ? 'powerTableMobil' : 'powerTable'}>\n            <Table\n                // scroll={{ x: 1500, y: 300 }}\n                loading={loading}//加载中 预留\n                // summary={(currentData) =><div>xxx</div>} //总结 预留\n                title={(_) => tableHead}//标题 预留\n                showHeader={true}\n                onRow={onRow}\n                // scroll={true}\n                // expandedRowClassName={() => 'subTable'}\n                dataSource={tableData}\n                columns={columns}\n                rowKey={'id'}\n                expandedRowKeys={expandedRowKeys}\n                expandIcon={() => null}\n                expandable={{\n                    expandedRowRender: record => this.getSubTableReact(record),\n                }}\n                pagination={pagination}\n                footer={() => this.getFooter()}\n                // footer={() => tableHead}\n            />\n        </div>);\n    }\n}\n\nfunction mapStateToTable(state) {\n    return {\n        setting: state.setting,\n        rightClick: state.rightClick,\n    }\n}\n\nPowerTable = connect(mapStateToTable)(PowerTable);\n\n\n// 右键提醒\nclass RightMessage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.setClose = this.setClose.bind(this);\n    }\n\n    setClose() {\n        tool.setStateSpace(['messageRightIsShow',], {\n            messageRight: true,\n            messageRightIsShow: '1',\n        });\n    }\n\n    render() {\n        let state = true;\n        let messageRightIsShow = tool.getStateSpace(['messageRightIsShow', 'messageRightIsShow',]);\n        if (messageRightIsShow === '1') state = false;\n\n        return (<div>\n            <Modal\n                title={<p style={{fontSize: '240%',}}>温馨提醒</p>}\n                open={state}\n                visible={state}\n                okText={<p style={{fontSize: '140%',}}>知道了!</p>}\n                cancelText={<p style={{fontSize: '140%',}}>下次不再提醒</p>}\n                onOk={() => this.setClose()}\n                onCancel={() => {\n                    this.setClose();\n                    localStorage.setItem('messageRightIsShow', '1');\n                }}\n                width={isMobile ? '80%' : '40%'}\n            >\n                表格点击右键可以唤出菜单!\n                <img src={file} alt={'图片加载失败:表格点击右键可以唤出菜单.'}/>\n            </Modal>\n        </div>);\n    }\n}\n\nfunction mapStateToMessage(state) {\n    return {\n        messageRightIsShow: state.messageRightIsShow,\n    }\n}\n\nRightMessage = connect(mapStateToMessage)(RightMessage);\n\n//根表格\nclass RootTable extends React.Component {\n\n\n    render() {\n        let spaceMenuPathStore = ['setting', 'selectedMenu', 'selectedSpacePath',];\n\n\n        let spaceMenuPath = tool.getStateSpace(spaceMenuPathStore);\n        let spaceMenu = tool.getStateSpace(spaceMenuPath);\n        let react = tool.getAttribute(spaceMenu, 'react');\n        if (typeof react === \"string\") react = funcMapping[react];\n\n\n        let spacePublicPath = spaceMenuPath.concat(['table']);\n\n        let spacePrivateKey = `spacePrivate__root`;\n        let spacePrivatePath = spacePublicPath.concat([spacePrivateKey]);\n\n        if (typeof react === \"function\") {\n            let param = {\n                spacePublicPath: spacePublicPath,\n                spacePrivatePath: spacePrivatePath,\n                spacePrivateKey: spacePrivateKey,\n            };\n            return react(param);\n        }\n        if (react) return react;\n\n        return (<div className={'rootTableBack'}>\n            <RightMessage/>\n            <PowerTable\n                param={{\n                    spacePublicPath: spacePublicPath,\n                    spacePrivatePath: spacePrivatePath,\n                    spacePrivateKey: spacePrivateKey,\n                }}\n            />\n            <DetailLine/>\n            <UpdateTableLine/>\n            <UpdateTablePart/>\n            <CreateTablePart/>\n            <CreateTable/>\n            <CreateCopyTable/>\n            <CreateBatchTable/>\n            <MyModal/>\n        </div>);\n    }\n}\n\nfunction mapStateToRoot(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nRootTable = connect(mapStateToRoot)(RootTable);\n\nexport {PowerTable, RootTable,};\n","import React from \"react\";\nimport {Modal, Divider, Progress, Button, Popconfirm, Radio, Select} from \"antd\";\n\nimport {tool} from \"../tools/tools\";\nimport {connect} from \"react-redux\";\nimport $ from \"jquery\";\nimport {DeleteOutlined, ToolOutlined} from \"@ant-design/icons\";\nimport {openEditPath} from \"../../index\";\n\n\n//数据更新 tool.show_success\nclass UpdateTableLine extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getColumnsUpdate = this.getColumnsUpdate.bind(this);\n    }\n\n    getFieldReact(param) {\n        let columnKey = tool.getAttribute(param, 'columnKey');\n        let defaultValue = tool.getAttribute(param, 'defaultValue');\n\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        // let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let record = tool.getAttribute(infoModal, 'record');\n        // let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        // let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        // let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsUpdate = this.getColumnsUpdate();\n        let columnInfo = columnsUpdate[columnKey];\n\n\n        //字段类型\n        let fieldType = columnInfo.type;\n        if (!fieldType) fieldType = 'char';\n\n\n        let fieldMapping = tool.getStateSpace(['setting', 'fieldMapping',]);\n        let func = tool.getAttribute(fieldMapping, fieldType);\n\n        return (\n            <div key={columnKey}>\n                {func({\n                    record: record,\n                    action: 'update',\n                    columnKey: columnKey,\n                    defaultValue: defaultValue,\n                })}\n                <Divider/>\n            </div>\n        );\n    }\n\n    getColumnsUpdate() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'Update') return null;\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n        //更新字段\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate',]);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n\n        // 是否使用过滤器的字段\n        let filterValue = tool.getAttribute(spacePrivate, 'filterValue');\n        if (!filterValue) {\n            filterValue = tool.getAttribute(spacePublic, ['filters', 'default',])\n        }\n        let filtersInfo = tool.getAttribute(spacePublic, 'filters');\n        let filtersChoices = tool.getAttribute(filtersInfo, 'choices');\n        let filterNow = tool.getAttribute(filtersChoices, filterValue);\n        let filterColumnsUpdate = tool.getAttribute(filterNow, 'columnsUpdate');\n        if (filterValue && filtersInfo && filtersChoices && filterNow && filterColumnsUpdate) {\n            columnsUpdate = filterColumnsUpdate;\n        }\n        return columnsUpdate;\n    }\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'Update') return null;\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let record = tool.getAttribute(paramModal, ['record']);\n\n\n        //更新字段\n        let columnsUpdate = this.getColumnsUpdate();\n\n        //显示字段\n        if (!columnsUpdate) return null;\n\n        let fieldReacts = [];\n        for (let columnKey in columnsUpdate) {\n            if (!columnsUpdate.hasOwnProperty(columnKey)) continue;\n\n            //具体的升级列信息\n            let columnUpdate = tool.getAttribute(columnsUpdate, columnKey,);\n            let hidden = tool.getAttribute(columnUpdate, 'hidden', false);\n            if (hidden) continue;\n\n            //默认值 defaultValue\n            let defaultValue = tool.getAttribute(columnUpdate, 'defaultValue',);\n\n            //默认值映射列mapColumnKey\n            let mapColumnKey = tool.getAttribute(columnUpdate, 'map',);\n            if (!mapColumnKey) mapColumnKey = columnKey;\n\n            //映射值\n            let mapValue = record[mapColumnKey];\n            if (!defaultValue) {\n                defaultValue = mapValue;\n            }\n\n\n            //决定是否添加这个字段\n            let state = true;\n            let fun_is_show = tool.getAttribute(columnUpdate, 'is_show');\n            if (fun_is_show) {\n                let param = {infoModalPath: infoModalPath, mapColumnKey: mapColumnKey, record: record,};\n                state = fun_is_show(param);\n            }\n            if (state) {\n                fieldReacts.push(this.getFieldReact({\n                    columnKey: columnKey,\n                    defaultValue: defaultValue,\n                }));\n            }\n        }\n\n        return fieldReacts;\n    }\n\n    getProgress() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'Update') return null;\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let progressInfo = tool.getAttribute(spacePrivate, 'progressInfo');\n        let stateUpdateUpload = tool.getAttribute(spacePrivate, 'stateUpdateUpload');\n        if (!stateUpdateUpload) return null;\n\n        let percent = tool.getAttribute(progressInfo, 'percent');\n        if (!percent) percent = 0;\n        return <div>\n            <Progress percent={percent} status=\"active\"/>\n        </div>;\n    }\n\n    onCancel() {\n        //左键触发检测程序允许正常运行\n        tool.rightInfo = Object.assign({}, tool.rightInfo, {\n            sign: false,\n        },);\n\n        //关闭对话框/清空数据\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        infoModal = Object.assign({}, infoModal, {\n            nowType: null,\n            paramModal: null,\n        });\n\n        tool.setStateSpace(infoModalPath, infoModal,);\n    }\n\n    onOk() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'Update') return null;\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let record = tool.getAttribute(paramModal, 'record');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let fatherRecord = tool.getAttribute(paramModal, 'fatherRecord');\n        let requestPathPath = spacePublicPath.concat(['path']);\n        let requestPath = tool.getStateSpace(requestPathPath);\n\n        let dataKey = `update__${record.id}`;\n        let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n        let data = tool.getStateSpace(dataPath);\n        if (!data) data = {};\n\n        // 获取get参数\n        let paramUrl = {};\n        if (fatherRecord) paramUrl['father_id'] = fatherRecord.id;\n\n        let url = tool.get_url(requestPath, false, paramUrl, record.id);\n\n        let stateSplitTwo = false;\n        let dataObj;\n\n        // 设置为正在上传\n        let stateUpdateUploadPath = spacePrivatePath.concat(['stateUpdateUpload']);\n        tool.setStateSpace(stateUpdateUploadPath, true);\n        tool.setStateSpace(infoModalPath, Object.assign({}, infoModal),);\n\n        //把数据分成两部分\n        let otherData = {};\n        let filesData = {};\n        for (let key in data) {\n            if (!data.hasOwnProperty(key)) continue;\n            let value = data[key];\n            if (value instanceof File) {\n                filesData[key] = value;\n            } else {\n                otherData[key] = value;\n            }\n\n        }\n        otherData = JSON.stringify(otherData);\n        if (JSON.stringify(filesData) !== '{}') {\n            stateSplitTwo = true;\n            dataObj = new FormData();\n            dataObj.append('stateSplitTwo', 'true');\n\n            dataObj.append('otherData', otherData);\n            for (let fileKey in filesData) dataObj.append(`files__${fileKey}`, filesData[fileKey]);\n        }\n\n        // 置空进度条\n        let percent = 0; //进度值（百分比制）\n        let percentPath = spacePrivatePath.concat(['progressInfo', 'percent',]);\n        tool.setStateSpace(percentPath, percent);\n        tool.setStateSpace(infoModalPath, Object.assign({}, infoModal),);\n\n        let requestParam = {\n            url: url,\n            data: otherData,\n            contentType: 'application/json',\n            success: (data, _, response,) => {\n                let status = tool.getAttribute(response, 'status');\n                if (status === 299) {\n                    tool.show_success_299(data);\n                } else if (status === 298) {\n                    tool.show_success_298(data);\n                } else {\n                    tool.show_success(['更新成功',]);\n                }\n\n                // 清空表单数据\n                let infoModalPath = ['infoModal'];\n                let infoModal = tool.getStateSpace(infoModalPath);\n                infoModal = Object.assign({}, infoModal, {\n                    nowType: null,\n                    paramModal: null,\n                });\n                tool.setStateSpace(infoModalPath, infoModal,);\n\n                // 更新表格数据\n                let spacePrivate = tool.getStateSpace(spacePrivatePath);\n                spacePrivate = Object.assign({}, spacePrivate, {\n                    stateTableOnload: 'page',\n                    stateUpdateUpload: false,\n                });\n                tool.setStateSpace(spacePrivatePath, spacePrivate);\n            },\n            error: data => {\n                let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n                let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n                tool.show_error(data, columnsUpdate);\n                tool.setStateSpace(stateUpdateUploadPath, false);\n            },\n            xhr: function () { //用以显示上传进度\n                let xhr = $.ajaxSettings.xhr();\n                if (xhr.upload) {\n                    xhr.upload.addEventListener('progress', function (event) {\n                        let percent = Math.floor(event.loaded / event.total * 100); //进度值（百分比制）\n                        let percentPath = spacePrivatePath.concat(['progressInfo', 'percent',]);\n                        tool.setStateSpace(percentPath, percent);\n                        tool.setStateSpace(infoModalPath, Object.assign({}, infoModal),);\n                    }, false);\n                }\n                return xhr\n            },\n        };\n\n        //数据分成两部分\n        if (stateSplitTwo) {\n            requestParam['contentType'] = false;\n            requestParam['processData'] = false;\n            requestParam['data'] = dataObj;\n        }\n        tool.patch(requestParam);\n    }\n\n    // 字段附加\n    getReactFieldAppend(columnPath) {\n        let react = null;\n        let typePath = columnPath.concat(['type',]);\n        let type = tool.getStateSpace(typePath, 'char');\n\n        // 单选类型\n        if (tool.isInArray([\n            'singleSmallChoice',\n            'multipleChoice',\n            'singSearchChoice',\n        ], type)) {\n            let choicesPath = columnPath.concat(['choices',]);\n            let choices = tool.getStateSpace(choicesPath, []);\n\n            let lines = [];\n\n            // 列表\n            for (const choice of choices) {\n                let value = choice['value'];\n                let help = choice['help'];\n                lines.push(\n                    <tr key={value}>\n\n                        {/*value*/}\n                        <th>\n                            <input\n                                onBlur={event => {\n                                    let newChoices = [];\n                                    for (const _choice of choices) {\n                                        let _value = _choice['value'];\n                                        let _help = _choice['help'];\n\n                                        let userObj = {\"value\": _value, \"help\": _help,};\n                                        if (_value === value) userObj = {\n                                            \"value\": event.target.value,\n                                            \"help\": _help,\n                                        };\n                                        newChoices.push(userObj);\n                                    }\n                                    tool.setStateSpace(choicesPath, newChoices);\n                                }}\n                                style={{width: '40px',}}\n                                defaultValue={value}\n                            />\n                        </th>\n\n                        {/*箭头*/}\n                        <th>\n                            {'<--->'}\n                        </th>\n\n                        {/*help*/}\n                        <th>\n                            <input\n                                onBlur={event => {\n                                    let newChoices = [];\n                                    for (const _choice of choices) {\n                                        let _value = _choice['value'];\n                                        let _help = _choice['help'];\n\n                                        let userObj = {\"value\": _value, \"help\": _help,};\n                                        if (_value === value) userObj = {\n                                            \"value\": _value,\n                                            \"help\": event.target.value,\n                                        };\n                                        newChoices.push(userObj);\n                                    }\n                                    tool.setStateSpace(choicesPath, newChoices);\n                                }}\n                                style={{width: '40px',}}\n                                defaultValue={help}\n                            />\n                        </th>\n\n                        {/*删除*/}\n                        <th>\n                            <Popconfirm\n                                title=\"确定删除吗?\"\n                                description=\"确定删除吗?\"\n                                onConfirm={() => {\n                                    let newChoices = [];\n                                    for (const _choice of choices) {\n                                        let _value = _choice['value'];\n                                        let _help = _choice['help'];\n                                        if (_value === value) continue;\n                                        let userObj = {\"value\": _value, \"help\": _help,};\n                                        newChoices.push(userObj);\n                                    }\n                                    tool.setStateSpace(choicesPath, newChoices);\n                                }}\n                                onCancel={() => {\n                                }}\n                                okText=\"删除\"\n                                cancelText=\"不要\"\n                            >\n                                <DeleteOutlined style={{color: 'red', marginLeft: '5px',}}/>\n                            </Popconfirm>\n\n                        </th>\n                    </tr>\n                );\n\n            }\n\n            // 增加单选\n            lines.push(<div key={'create'} style={{width: '180px',}}>\n                <button\n                    onClick={() => {\n                        let newChoices = Object.assign([], choices);\n                        let random = Math.random() * 1000;\n                        random = Math.floor(random);\n                        let userObj = {\n                            \"id\": `value_${random}`,\n                            \"value\": `value_${random}`,\n                            \"help\": 'new_read',\n                        };\n                        newChoices.push(userObj);\n\n                        tool.setStateSpace(choicesPath, newChoices);\n                    }}\n                    style={{width: '100%',}}\n                >增加选项\n                </button>\n            </div>)\n\n\n            react = <div\n                style={{\n                    width: '185px',\n                    overflow: 'auto',\n                    // border:'red 1px solid',\n                }}\n            >\n                <table style={{\n                    textAlign: 'left',\n                }}>\n                    <thead>\n\n                    {/*第1行 真值映射*/}\n                    <tr>\n                        <th>\n                            {/*真值映射:*/}\n                        </th>\n                        <th>\n                            {lines}\n                        </th>\n                    </tr>\n\n\n                    </thead>\n                </table>\n            </div>\n        }\n\n        return react;\n    }\n\n    getReactSetUpdate() {\n        let openEdit = tool.getStateSpace(openEditPath, false);\n        if (!openEdit) return null;\n\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n\n        // 字段位置移动\n        const moveUpdatePos = (columnKey, direction = -1) => {\n            // direction=-1 上移 direction=1 下移\n            let columns = tool.getStateSpace(columnsUpdatePath);\n            let columnsArray = Object.keys(columns);\n            let index = columnsArray.indexOf(columnKey);\n\n            let indexTarget = index + direction;\n            if (indexTarget < 0) {\n                tool.show_info('已经在最顶部.');\n                return;\n            }\n            if (indexTarget > columnsArray.length - 1) {\n                tool.show_info('已经在最底部.');\n                return;\n            }\n\n\n            let temp = columnsArray[indexTarget];\n            columnsArray[indexTarget] = columnsArray[index];\n            columnsArray[index] = temp;\n            let newColumns = {};\n            for (const _columnKey of columnsArray) newColumns[_columnKey] = columns[_columnKey];\n            tool.setStateSpace(columnsUpdatePath, newColumns);\n        };\n\n        let reactColumns = [];\n        // 列表\n        for (const columnKey in columnsUpdate) {\n            let columnPath = columnsUpdatePath.concat([columnKey]);\n            let column = columnsUpdate[columnKey];\n\n            let typePath = columnPath.concat(['type',]);\n            let type = tool.getStateSpace(typePath, 'char');\n\n            // 是否隐藏\n            let hiddenPath = columnPath.concat(['hidden']);\n            let hidden = tool.getStateSpace(hiddenPath,);\n\n\n            // 字段附加\n            let reactFieldAppend = this.getReactFieldAppend(columnPath);\n            let border = reactFieldAppend ? '#BEBEBE 1px solid' : '';\n\n            reactColumns.push(<div\n                key={columnKey}\n            >\n\n                {/*分割线*/}\n                <Divider>字段名:{column.title}</Divider>\n\n                {/*删除字段*/}\n                <div\n                    style={{float: 'right',}}>\n                    <Popconfirm\n                        title=\"删除这个字段吗?\"\n                        description=\"删除这个字段吗?\"\n                        onConfirm={() => {\n                            let newColumns = {};\n                            let columns = tool.getStateSpace(columnsUpdatePath);\n                            for (const _columnKey in columns) {\n                                if (_columnKey === columnKey) continue;\n                                newColumns[_columnKey] = columns[_columnKey];\n                            }\n\n                            tool.setStateSpace(columnsUpdatePath, newColumns);\n                        }}\n                        onCancel={() => tool.show_info('已取消')}\n                        okText=\"删除\"\n                        cancelText=\"不要\"\n                    >\n                        <DeleteOutlined style={{color: 'red',}}/>\n                    </Popconfirm>\n                </div>\n\n                {/*列表*/}\n                <table style={{textAlign: 'left',}}>\n                    <thead>\n\n                    {/*第1行 是否显示*/}\n                    <tr>\n                        <th>是否显示:</th>\n                        <th><Radio.Group\n                            onChange={event => {\n                                // tool.setStateSpace(columnPath, Object.assign(column, {hidden: event.target.value,}));\n                                tool.setStateSpace(hiddenPath, event.target.value,);\n                            }}\n                            value={hidden}\n                            style={{\n                                marginLeft: '10px',\n                            }}\n                        >\n                            <Radio value={false}>显示</Radio>\n                            <Radio value={true}>隐藏</Radio>\n                        </Radio.Group></th>\n                    </tr>\n\n                    {/*第2行 修改字段名*/}\n                    <tr>\n                        <th>\n                            修改字段名:\n                        </th>\n                        <th>\n\n                            <input\n                                defaultValue={column.title}\n                                // value={column.title}\n                                onBlur={event => {\n                                    tool.setStateSpace(columnPath, Object.assign(column, {title: event.target.value,}));\n                                }}\n                            />\n                        </th>\n                    </tr>\n\n                    {/*第3行 字段类型*/}\n                    <tr style={{border: border,}}>\n                        <th>\n                            字段类型:\n                        </th>\n                        <th>\n                            <div>\n                                <Select\n                                    style={{width: '100%',}}\n                                    // defaultValue={type}\n                                    value={type}\n                                    onChange={value => {\n                                        tool.setStateSpace(columnPath, Object.assign(column, {type: value,}));\n                                    }}\n                                    options={[\n                                        {\n                                            value: 'bool',\n                                            label: '布尔类型',\n                                        },\n                                        {\n                                            value: 'char',\n                                            label: '字符串(char)',\n                                        },\n                                        {\n                                            value: 'text',\n                                            label: '字符串(text)',\n                                        },\n                                        {\n                                            value: 'file',\n                                            label: '文件类型',\n                                        },\n                                        {\n                                            value: 'multipleFile',\n                                            label: '多文件类型',\n                                        },\n                                        {\n                                            value: 'multipleChoice',\n                                            label: '多项选择类型',\n                                        },\n                                        {\n                                            value: 'singleSmallChoice',\n                                            label: '单项选择(简单)',\n                                        },\n                                        {\n                                            value: 'singSearchChoice',\n                                            label: '单项选择(搜索)',\n                                        },\n                                        // {\n                                        //     value: 'singDeepChoice',\n                                        //     label: '单项选择(深度)',\n                                        // },\n                                        // {\n                                        //     value: 'singNewDeepChoice',\n                                        //     label: '单项选择(深度/新)',\n                                        // },\n                                        {\n                                            value: 'imgPath',\n                                            label: '图片类型(路径)',\n                                        },\n                                        {\n                                            value: 'imgShow',\n                                            label: '图片类型(展示)',\n                                        },\n                                        {\n                                            value: 'imgHead',\n                                            label: '图片类型(头像)',\n                                        },\n                                        {\n                                            value: 'multipleImg',\n                                            label: '图片类型(多项)',\n                                        },\n                                        // {\n                                        //     value: 'dynamic',\n                                        //     label: '动态类型',\n                                        // },\n                                        {\n                                            value: 'time',\n                                            label: '时间类型',\n                                        },\n                                        {\n                                            value: 'timeYear',\n                                            label: '时间类型(年份)',\n                                        },\n                                        {\n                                            value: 'timeDay',\n                                            label: '时间类型(日期)',\n                                        },\n                                        // {\n                                        //     value: 'react',\n                                        //     label: '渲染类型',\n                                        // },\n                                    ]}\n                                />\n                                <div style={{width: '100%',}}>\n                                    {reactFieldAppend}\n                                </div>\n\n                            </div>\n                        </th>\n                    </tr>\n\n                    {/*第4行 映射字段*/}\n                    <tr>\n                        <th>\n                            修改映射字段:\n                        </th>\n                        <th>\n\n                            <input\n                                defaultValue={columnKey}\n                                // value={columnKey}\n                                onBlur={event => {\n                                    let newColumnUpdates = {};\n\n                                    let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n                                    for (const _columnKey in columnsUpdate) {\n                                        let useKey = _columnKey;\n                                        if (_columnKey === columnKey) useKey = event.target.value;\n                                        newColumnUpdates[useKey] = columnsUpdate[_columnKey];\n                                    }\n                                    tool.setStateSpace(columnsUpdatePath, newColumnUpdates);\n\n                                    // tool.setStateSpace(columnPath, Object.assign(column, {title: event.target.value,}));\n                                }}\n                            />\n                        </th>\n                    </tr>\n\n                    {/*第6行 位置*/}\n                    <tr>\n                        <th>\n                            位置:\n                        </th>\n                        <th>\n                            <Button\n                                onClick={() => moveUpdatePos(columnKey, -1)}\n                                style={{width: '50%',}}>上移</Button>\n                            <Button\n                                onClick={() => moveUpdatePos(columnKey, 1)}\n                                style={{width: '50%',}}>下移</Button>\n                        </th>\n                    </tr>\n\n                    </thead>\n                </table>\n\n\n            </div>);\n        }\n        // 增加字段\n        reactColumns.push(<div key={'create_field'} style={{width: '100%',}}>\n            <Divider/>\n            <Button\n                onClick={() => {\n                    let columns = tool.getStateSpace(columnsUpdatePath);\n                    let newData = {};\n                    let random = Math.random() * 100000;\n                    random = Math.floor(random);\n                    newData[`field_${random}`] = {title: '新字段',};\n                    let newColumns = Object.assign(columns, newData);\n                    tool.setStateSpace(columnsUpdatePath, newColumns);\n                }}\n                style={{width: '100%',}}>增加字段</Button>\n            <Divider/>\n        </div>);\n\n        // 新建框\n        let isSetUpdateColShowPath = infoModalPath.concat(['isSetUpdateColShow']);\n        let isSetUpdateColShow = tool.getStateSpace(isSetUpdateColShowPath, false);\n\n        let content = <Modal\n            // closeIcon={' '}\n            visible={isSetUpdateColShow}\n            open={isSetUpdateColShow}\n            onCancel={() => tool.setStateSpace(isSetUpdateColShowPath, false,)}\n            footer={null}\n        >\n            <br/><br/>\n            {reactColumns}\n        </Modal>\n\n\n        let react;\n        react = <div>\n            {content}\n            <Button\n                style={{width: '100%',}}\n                onClick={() => tool.setStateSpace(isSetUpdateColShowPath, true,)}\n            ><ToolOutlined/>编辑</Button>\n            <Divider/>\n        </div>\n        return react;\n    }\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'Update') return null;\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n\n        // 是否自定义的触发器\n        // let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        // let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsUpdate = this.getColumnsUpdate();\n        let react = tool.getAttribute(columnsUpdate, 'react__');\n        if (react) {\n            let param;\n            // console.log('??>>',this.props)\n            param = Object.assign({}, this.props);\n            return react(param);\n        }\n\n\n        let textTitlePath = spacePublicPath.concat(['text__update_title']);\n        let textTitle = tool.getStateSpace(textTitlePath);\n        if (!textTitle) textTitle = '数据更新';\n\n        let content = this.getContent();\n        let progress = this.getProgress();\n\n        // 是否正在提交数据\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let stateUpdateUpload = tool.getAttribute(spacePrivate, 'stateUpdateUpload');\n        let disabled = false;\n        if (stateUpdateUpload) disabled = true;\n        let reactSetUpdate = this.getReactSetUpdate();\n        return (\n\n            <div>\n                <Modal\n                    title={textTitle}\n                    open={true}\n                    visible={true}\n                    okText={'提交'}\n                    cancelText={'关闭'}\n                    onOk={() => this.onOk()}\n                    onCancel={() => this.onCancel()}\n                    footer={<div>\n                        <Button onClick={() => this.onCancel()}>关闭</Button>\n                        <Button\n                            onClick={() => this.onOk()}\n                            type={'primary'}\n                            disabled={disabled}\n                        >提交</Button>\n                    </div>}\n                >\n                    {reactSetUpdate}\n                    {content}\n                    {progress}\n                </Modal>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        infoModal: state.infoModal,\n        setting: state.setting,\n    }\n}\n\nUpdateTableLine = connect(mapStateToUpdate)(UpdateTableLine);\n\nexport {UpdateTableLine};","import React from \"react\";\nimport {Button} from 'antd';\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\nimport './img-head.css';\nimport $ from \"jquery\";\nimport {Image, Tooltip} from \"antd\";\nimport CropperComponent from './../img-head/cropper-component'\n\nconst MAX_FILE_SIZE = 500 * 1024 * 1024 // 文件最大限制为500M 裁剪\n\n\n//图片裁剪类型的字段\nclass FieldImageHead extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getCorp = this.getCorp.bind(this);\n        this.getChoiceButton = this.getChoiceButton.bind(this);\n        this.state = {\n            nowSrc: null,\n            width: 0,\n            height: 0,\n            url_back: null,\n\n            isShow: false,\n            file: null,\n            fileUrl: null,\n        };\n    }\n\n    dealImage(base64, w, callback) {\n        var newImage = new global.Image();\n        var quality = 0.6;    //压缩系数0-1之间\n        newImage.src = base64;\n        newImage.setAttribute(\"crossOrigin\", 'Anonymous');\t//url为外域时需要\n        var imgWidth, imgHeight;\n        newImage.onload = function () {\n            imgWidth = this.width;\n            imgHeight = this.height;\n            var canvas = document.createElement(\"canvas\");\n            var ctx = canvas.getContext(\"2d\");\n            if (Math.max(imgWidth, imgHeight) > w) {\n                if (imgWidth > imgHeight) {\n                    canvas.width = w;\n                    canvas.height = w * imgHeight / imgWidth;\n                } else {\n                    canvas.height = w;\n                    canvas.width = w * imgWidth / imgHeight;\n                }\n            } else {\n                canvas.width = imgWidth;\n                canvas.height = imgHeight;\n                quality = 0.6;\n            }\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.drawImage(this, 0, 0, canvas.width, canvas.height);\n            var base64 = canvas.toDataURL(\"image/jpeg\", quality); //压缩语句\n            // 如想确保图片压缩到自己想要的尺寸,如要求在50-150kb之间，请加以下语句，quality初始值根据情况自定\n            // while (base64.length / 1024 > 150) {\n            // \tquality -= 0.01;\n            // \tbase64 = canvas.toDataURL(\"image/jpeg\", quality);\n            // }\n            // 防止最后一次压缩低于最低尺寸，只要quality递减合理，无需考虑\n            // while (base64.length / 1024 < 50) {\n            // \tquality += 0.001;\n            // \tbase64 = canvas.toDataURL(\"image/jpeg\", quality);\n            // }\n            callback(base64);//必须通过回调函数返回，否则无法及时拿到该值\n        }\n    }\n\n    fileChange = event => {\n        let files = event.target.files;\n        let file = null;\n        if (files.length > 0) file = event.target.files[0];\n        if (!file) return;\n        if (file.size > MAX_FILE_SIZE) {\n            console.log('文件过大');\n            return;\n        }\n\n        // 转换为\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = event => {\n            let dataBase64 = event.target.result;\n            this.dealImage(dataBase64, 800, dataBase64 => {\n                let arr = dataBase64.split(',');\n                let mime = arr[0].match(/:(.*?);/)[1];\n                let bStr = atob(arr[1]);\n                let n = bStr.length;\n                let u8arr = new Uint8Array(n);\n                while (n--) u8arr[n] = bStr.charCodeAt(n);\n                let file_obj = new File([u8arr], file.name, {type: mime});\n                this.setState({\n                    file: file_obj,\n                    isShow: true,\n                    fileName: file_obj.name,\n                })\n            })\n        }\n\n\n        // this.setState({\n        //     file: file,\n        //     isShow: true,\n        //     fileName: file.name,\n        // })\n    }\n\n    getImgUrl = () => blob => {\n        const str = URL.createObjectURL(blob)\n        this.setState({fileUrl: str});\n\n        let file = new window.File([blob], this.state.fileName, {type: 'image/jpeg'})\n\n\n        // 文件更新到数据区\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let record = tool.getAttribute(paramModal, 'record');\n\n        if (action === 'update') {\n            let dataKey = `update__${record.id}`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            data = Object.assign({}, data);\n            data[columnKey] = file;\n            tool.setStateSpace(dataPath, data);\n        } else if (action === 'create' || action === 'copy') {\n            let dataKey = `create__x`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            data = Object.assign({}, data);\n            data[columnKey] = file;\n            tool.setStateSpace(dataPath, data);\n        }\n    }\n\n    getOriginImgReact() {\n\n        // 得到默认值\n        let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n        let src = tool.get_url(defaultValue);\n        return (<div className={'img-head-fields-img-path-img-border'}>\n            {defaultValue ? <Image\n                src={src}\n                onLoad={imgObj => {\n                    // let image = new global.Image();\n                    // image.src = imgObj.src;\n\n                    // imgObj.height = 80;\n                    // imgObj.width = 80;\n\n                }}\n                // className={'img-head-fields-img-path-img-border'}\n            /> : null}\n            {defaultValue ? null : '空的'}\n        </div>);\n    }\n\n    getCorp(ratio) {\n        let fileUrl = this.state.fileUrl;\n        if (!this.state.file) return this.getOriginImgReact();\n\n        let space;\n        if (this.state.isShow) space = this.getOriginImgReact();\n\n        return (\n            <div className=\"app\">\n                {space}\n                <div className=\"half-area\">\n\n                    <div className=\"img-container\">\n                        {fileUrl && (\n                            <img\n                                className={\"border-image-in\"}\n                                src={fileUrl}\n                                alt=\"fileUrl\"\n                            />\n                        )}\n                    </div>\n                </div>\n\n                {this.state.isShow && (\n                    <CropperComponent\n                        file={this.state.file}\n                        onClose={() => {\n                            this.setState({isShow: false})\n                        }}\n                        onSubmit={this.getImgUrl()}\n                        ratio={ratio}\n                        show={this.state.isShow}\n                    />\n                )}\n\n\n            </div>\n        )\n    }\n\n    getChoiceButton() {\n        if (this.state.isShow) return null;\n\n        let inputId = Math.ceil(Math.random() * 10).toString();\n\n        return (\n            <div className={'fields-img-path-button'}>\n                <input\n                    id={inputId}\n                    className={'file-input'}\n                    type={'file'}\n                    onChange={this.fileChange}\n                    accept={\"image/gif, image/jpeg,image/jpg,image/png,image/bmp,\"}\n                />\n                <div className={'fields-img-path-button-one'}>\n                    <Button\n                        type={'primary'}\n                        onClick={() => $(`#${inputId}`).click()}\n                    >\n                        点击换图\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n        //  计算ratio\n        let ratio;\n        if (action === 'update') ratio = tool.getAttribute(columnUpdate, 'ratio');\n        if (action === 'create') ratio = tool.getAttribute(columnCreate, 'ratio');\n        if (action === 'copy') ratio = tool.getAttribute(columnCreate, 'ratio');\n\n        // 兼容获取columnCreate/columnUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) columnCreate = columnInfo;\n        if (columnInfo) columnUpdate = columnInfo;\n\n        let title = tool.getAttribute(columnUpdate, 'title');\n        let help = tool.getAttribute(columnUpdate, 'help');\n        if (action === 'create' || action === 'copy') {\n            title = tool.getAttribute(columnCreate, 'title');\n            help = tool.getAttribute(columnCreate, 'help');\n        }\n\n\n        let nowImageReact = this.getCorp(ratio);\n        let choiceButton = this.getChoiceButton();\n\n        return (<div>\n            <Tooltip title={help}>\n                <div style={{marginBottom: '5px',}}>\n                    <div className={'title'}>\n                        {title}\n                    </div>\n                </div>\n            </Tooltip>\n            {nowImageReact}\n\n            {choiceButton}\n        </div>);\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nFieldImageHead = connect(mapStateToUpdate)(FieldImageHead);\n\nexport {FieldImageHead,};\n","import React, {Component} from 'react';\nimport {Modal} from \"antd\";\nimport Cropper from 'react-cropper';\n\nimport \"cropperjs/dist/cropper.css\";\nimport './img-head.css'\n\n\nclass CropperComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            src: null,\n        }\n    }\n\n    componentDidMount() {\n        const fileReader = new FileReader();\n        fileReader.onload = event => {\n            const dataURL = event.target.result\n            this.setState({src: dataURL})\n        };\n        fileReader.readAsDataURL(this.props.file);\n    }\n\n    handleSubmit = () => {\n        let canvas;\n        canvas = this.cropper['getCroppedCanvas']();\n        canvas.toBlob(async blob => {\n            this.props.onSubmit(blob);\n            this.props.onClose()\n        })\n    }\n\n    render() {\n        let ratio = this.props.ratio;\n        if (!ratio) ratio = 1;\n        ratio = Number(ratio);\n\n        return (<Modal\n            width={'40%'}\n            title={'图像裁剪器'}\n            open={this.props.show}\n            visible={this.props.show}\n            okText={'点击裁剪'}\n            cancelText={'关闭'}\n            onOk={this.handleSubmit}\n            onCancel={this.props.onClose}\n        >\n            <div className=\"cropper-container\">\n                <Cropper\n                    src={this.state.src}\n                    ref={cropper => this.cropper = cropper}\n                    viewMode={1}\n                    zoomable={false}\n                    aspectRatio={ratio}\n                />\n            </div>\n        </Modal>)\n    }\n}\n\nexport default CropperComponent;","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './render.css';\nimport {funcMapping} from \"../../../../setting\";\n\n\n//Render类型的字段\nclass FieldDetailRender extends React.Component {\n\n    getContent() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let recordId = tool.getAttribute(this, ['props', 'param', 'record', 'id',]);\n\n        let columnsDetailLinePath = spacePublicPath.concat(['columnsDetailLine']);\n        let columnsDetailLineSpace = tool.getStateSpace(columnsDetailLinePath);\n\n        let column = tool.getAttribute(columnsDetailLineSpace, columnKey);\n        let title = tool.getAttribute(column, 'title');\n\n        // 获取值\n        let dataKey = `detail__${recordId}`;\n        let paramModalPath = ['infoModal', 'paramModal',];\n        let paramModal = tool.getStateSpace(paramModalPath);\n        paramModal = Object.assign({}, paramModal);\n        let data = paramModal[dataKey];\n        if (!data) data = {};\n\n\n        let value = data[columnKey];\n        if (value === null || value === undefined) {\n            value = null;\n        } else {\n            value = value.toString();\n        }\n\n        // 映射值\n        let render = tool.getAttribute(column, 'render');\n        // 是字符串映射\n        if (typeof render === 'string' && funcMapping[render]) {\n            render = funcMapping[render];\n        } else if (typeof render === 'string') {\n            let string = render;\n\n            let func = () => \"渲染失败[0]\";\n            try {\n                // eslint-disable-next-line no-eval\n                let funcTemp = eval(`(${string})`);\n                if (typeof funcTemp === 'function') func = funcTemp;\n            } catch (error) {\n            }\n            render = func;\n        }\n\n        if (render && value) value = render(value);\n\n        return (\n            <div>\n                <div className={'detail-title'}>\n                    {title}\n                </div>\n                {value}\n            </div>\n        )\n    }\n\n    render() {\n        let content = this.getContent();\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        infoModal: state.infoModal,\n    }\n}\n\nFieldDetailRender = connect(mapStateToUpdate)(FieldDetailRender);\n\nexport {FieldDetailRender,};\n","import React from \"react\";\nimport {Modal} from \"antd\";\nimport {tool} from \"../tools/tools\";\nimport {connect} from \"react-redux\";\n\n\n// 备用显示框\nclass MyModal extends React.Component {\n    render() {\n        let getContent = tool.getStateSpace(['my_modal_param', 'get_content',],);\n        let isShow = tool.getStateSpace(['my_modal_param', 'is_show',], false,);\n        let title = tool.getStateSpace(['my_modal_param', 'title',], '无标题',);\n        let okText = tool.getStateSpace(['my_modal_param', 'okText',], '提交',);\n        let onOk = tool.getStateSpace(['my_modal_param', 'onOk',], null,);\n        let onCancel = tool.getStateSpace(['my_modal_param', 'onCancel',], null,);\n        if (!onCancel) {\n            onCancel = () => {\n                tool.setStateSpace(['my_modal_param', 'is_show',], false,);\n            };\n        }\n        let cancelText = tool.getStateSpace(['my_modal_param', 'cancelText',], '关闭');\n        if (!isShow) return null;\n        if (!getContent) return null;\n\n        let content = getContent(this);\n        return <Modal\n            title={title}\n            open={true}\n            visible={true}\n            okText={okText}\n            cancelText={cancelText}\n            onOk={onOk}\n            onCancel={onCancel}\n        >\n            {content}\n        </Modal>;\n    }\n}\n\nfunction mapStateToMyModal(state) {\n    let my_modal_param = tool.getAttribute(state, ['my_modal_param']);\n    return {\n        my_modal_param: my_modal_param,\n    }\n}\n\nMyModal = connect(mapStateToMyModal)(MyModal);\n\nexport {MyModal};","import React from \"react\";\nimport {Button, Divider, Modal, Popconfirm, Radio, Select} from \"antd\";\n\nimport {tool} from \"../tools/tools\";\nimport {connect} from \"react-redux\";\nimport {DeleteOutlined, ToolOutlined} from \"@ant-design/icons\";\nimport {openEditPath} from \"../../index\";\n\n\n//分步更新 stool.show_success d保存并  数据更新s\nclass UpdateTablePart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getColumnsUpdatePart = this.getColumnsUpdatePart.bind(this);\n        this.getOk = this.getOk.bind(this);\n        this.getNowPage = this.getNowPage.bind(this);\n        this.getNowPagePath = this.getNowPagePath.bind(this);\n    }\n\n    getNowPagePath() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let nowPagePath;\n        nowPagePath = spacePrivatePath.concat(['updatePart', 'nowPage']);\n        return nowPagePath;\n    }\n\n    getNowPage() {\n        let nowPagePath = this.getNowPagePath();\n        let nowPage = tool.getStateSpace(nowPagePath);\n        if (!nowPage) nowPage = 1;\n        return nowPage;\n    }\n\n    getOk() {\n        let ok;\n        // 检测是否存在下一页\n        let nowPage = this.getNowPage();\n\n        let nextPage = nowPage + 1;\n        let nextPageColumns = this.getColumnsUpdatePart(nextPage);\n        let last = false;\n        if (!nextPageColumns) last = true;\n\n        let onOk = () => this.onOk(false);\n        if (last) onOk = () => this.onOk(true);\n\n        let okText = '保存并继续';\n        if (last) okText = '完成';\n\n        ok = {\n            onOk: onOk,\n            okText: okText,\n        };\n        return ok;\n    }\n\n    getFieldReact(param) {\n        let columnKey = tool.getAttribute(param, 'columnKey');\n        let defaultValue = tool.getAttribute(param, 'defaultValue');\n\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let record = tool.getAttribute(infoModal, 'record');\n        let columnsUpdatePart = this.getColumnsUpdatePart();\n        let columnInfo = columnsUpdatePart[columnKey];\n\n\n        //字段类型\n        let fieldType = columnInfo.type;\n        if (!fieldType) fieldType = 'char';\n\n\n        let fieldMapping = tool.getStateSpace(['setting', 'fieldMapping',]);\n        let func = tool.getAttribute(fieldMapping, fieldType);\n\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'UpdatePart') return null;\n\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n\n        // let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let nowPage;\n        nowPage = tool.getAttribute(spacePrivate, ['updatePart', 'nowPage',]);\n\n        if (!nowPage) nowPage = 1;\n        // let updatePartSpaceKey = `columnsUpdate_${nowPage}`;\n\n        //更新字段\n        // let columnsUpdatePartPath = spacePublicPath.concat([updatePartSpaceKey,]);\n\n        return (\n            <div key={columnKey}>\n                {func({\n                    record: record,\n                    action: 'update',\n                    columnKey: columnKey,\n                    defaultValue: defaultValue,\n                    // updateSpacePath: columnsUpdatePartPath,\n                    spacePrivatePath: spacePrivatePath,\n                    columnInfo: columnInfo,\n                })}\n                <Divider/>\n            </div>\n        );\n    }\n\n    getColumnsUpdatePart(page = null) {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'UpdatePart') return null;\n\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n\n        // 计算updatePartSpaceKey\n        let nowPage;\n        nowPage = page ? page : tool.getAttribute(spacePrivate, ['updatePart', 'nowPage',]);\n\n        if (!nowPage) nowPage = 1;\n        let updatePartSpaceKey = `columnsUpdate_${nowPage}`;\n\n        //更新字段\n        let columnsUpdatePartPath = spacePublicPath.concat([updatePartSpaceKey,]);\n        let columnsUpdatePart = tool.getStateSpace(columnsUpdatePartPath);\n\n        // 是否使用过滤器的字段\n        let filterValue = tool.getAttribute(spacePrivate, 'filterValue');\n        if (!filterValue) {\n            filterValue = tool.getAttribute(spacePublic, ['filters', 'default',])\n        }\n        let filtersInfo = tool.getAttribute(spacePublic, 'filters');\n        let filtersChoices = tool.getAttribute(filtersInfo, 'choices');\n        let filterNow = tool.getAttribute(filtersChoices, filterValue);\n        let filterColumnsUpdatePart = tool.getAttribute(filterNow, updatePartSpaceKey);\n        if (filterValue && filtersInfo && filtersChoices && filterNow && filterColumnsUpdatePart) {\n            columnsUpdatePart = filterColumnsUpdatePart;\n        }\n        return columnsUpdatePart;\n    }\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'UpdatePart') return null;\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let record = tool.getAttribute(paramModal, ['record']);\n\n\n        //更新字段\n        let columnsUpdate = this.getColumnsUpdatePart();\n\n        //显示字段\n        if (!columnsUpdate) return null;\n\n        let fieldReacts = [];\n        for (let columnKey in columnsUpdate) {\n            if (!columnsUpdate.hasOwnProperty(columnKey)) continue;\n\n            //具体的升级列信息\n            let columnUpdate = tool.getAttribute(columnsUpdate, columnKey,);\n\n            //默认值 defaultValue\n            let defaultValue = tool.getAttribute(columnUpdate, 'defaultValue',);\n\n            //默认值映射列mapColumnKey\n            let mapColumnKey = tool.getAttribute(columnUpdate, 'map',);\n            if (!mapColumnKey) mapColumnKey = columnKey;\n\n            //映射值\n            let mapValue = record[mapColumnKey];\n            if (!defaultValue) {\n                defaultValue = mapValue;\n            }\n\n            //决定是否添加这个字段\n            let state = true;\n            let fun_is_show = tool.getAttribute(columnUpdate, 'is_show');\n            if (fun_is_show) {\n                let param = {infoModalPath: infoModalPath, mapColumnKey: mapColumnKey, record: record,};\n                state = fun_is_show(param);\n            }\n            if (state) {\n                fieldReacts.push(this.getFieldReact({\n                    columnKey: columnKey,\n                    defaultValue: defaultValue,\n                }));\n            }\n        }\n\n        return fieldReacts;\n    }\n\n    onCancel() {\n        //左键触发检测程序允许正常运行\n        tool.rightInfo = Object.assign({}, tool.rightInfo, {\n            sign: false,\n        },);\n\n        //关闭对话框/清空数据\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        infoModal = Object.assign({}, infoModal, {\n            nowType: null,\n            paramModal: null,\n        });\n\n        tool.setStateSpace(infoModalPath, infoModal,);\n    }\n\n    onOk(last = false) {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'UpdatePart') return null;\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let record = tool.getAttribute(paramModal, 'record');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let fatherRecord = tool.getAttribute(paramModal, 'fatherRecord');\n        let requestPathPath = spacePublicPath.concat(['path']);\n        let requestPath = tool.getStateSpace(requestPathPath);\n\n        let dataKey = `update__${record.id}`;\n        let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n        let data = tool.getStateSpace(dataPath);\n        if (!data) data = {};\n\n        // 获取get参数\n        let paramUrl = {};\n        if (fatherRecord) paramUrl['father_id'] = fatherRecord.id;\n\n        let url = tool.get_url(requestPath, false, paramUrl, record.id);\n\n        let stateSplitTwo = false;\n        let dataObj;\n        //把数据分成两部分\n        let otherData = {};\n        let filesData = {};\n        for (let key in data) {\n            if (!data.hasOwnProperty(key)) continue;\n            let value = data[key];\n            if (value instanceof File) {\n                filesData[key] = value;\n            } else {\n                otherData[key] = value;\n            }\n\n        }\n        otherData = JSON.stringify(otherData);\n        if (JSON.stringify(filesData) !== '{}') {\n            stateSplitTwo = true;\n            dataObj = new FormData();\n            dataObj.append('stateSplitTwo', 'true');\n\n            dataObj.append('otherData', otherData);\n            for (let fileKey in filesData) dataObj.append(`files__${fileKey}`, filesData[fileKey]);\n        }\n\n\n        let requestParam = {\n            url: url,\n            data: otherData,\n            contentType: 'application/json',\n            success: (data, _, response,) => {\n                let status = tool.getAttribute(response, 'status');\n                if (status === 299) {\n                    tool.show_success_299(data);\n                } else if (status === 298) {\n                    tool.show_success_298(data);\n                } else {\n                    tool.show_success(['更新成功',]);\n                }\n                // tool.show_success(['修改成功',]);\n\n                // 更新表单数据\n                if (last) {\n                    let infoModalPath = ['infoModal'];\n                    let infoModal = tool.getStateSpace(infoModalPath);\n                    infoModal = Object.assign({}, infoModal, {\n                        nowType: null,\n                        paramModal: null,\n                    });\n                    tool.setStateSpace(infoModalPath, infoModal,);\n                }\n\n\n                // 更新表格数据\n                let spacePrivate = tool.getStateSpace(spacePrivatePath);\n                spacePrivate = Object.assign({}, spacePrivate, {\n                    stateTableOnload: 'page',\n                });\n\n                // 设置当前页\n                let updatePart = tool.getAttribute(spacePrivate, ['updatePart',]);\n                let nowPage;\n                if (!last) {\n                    nowPage = tool.getAttribute(spacePrivate, ['updatePart', 'nowPage',]);\n                    if (!nowPage) nowPage = 1;\n                    nowPage += 1;\n                } else {\n                    nowPage = 1;\n                }\n\n\n                updatePart = Object.assign({}, updatePart, {nowPage: nowPage});\n                spacePrivate = Object.assign({}, spacePrivate, {\n                    updatePart: updatePart,\n                });\n\n                // 更新modal内容\n                let infoModalPath = ['infoModal'];\n                let infoModal = tool.getStateSpace(infoModalPath);\n                infoModal = Object.assign({}, infoModal,);\n                setTimeout(() => tool.setStateSpace(infoModalPath, infoModal,), 50);\n\n                tool.setStateSpace(spacePrivatePath, spacePrivate);\n            },\n            error: data => {\n                //左键触发检测程序允许正常运行\n                // tool.rightInfo = Object.assign({}, tool.rightInfo, {\n                //     sign: false,\n                //     onTableMenu: false,\n                // },);\n\n                let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n                let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n                tool.show_error(data, columnsUpdate);\n                // tool.show_error(data, columnsUpdate);\n            },\n        };\n\n        //数据分成两部分\n        if (stateSplitTwo) {\n            requestParam['contentType'] = false;\n            requestParam['processData'] = false;\n            requestParam['data'] = dataObj;\n        }\n        tool.patch(requestParam);\n    }\n\n    onPrevious() {\n        let nowPage = this.getNowPage();\n        if (nowPage <= 1) return null;\n        nowPage -= 1;\n        let nowPagePath = this.getNowPagePath();\n        tool.setStateSpace(nowPagePath, nowPage);\n\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        infoModal = Object.assign({}, infoModal,);\n        tool.setStateSpace(infoModalPath, infoModal,);\n    }\n\n    // 字段附加\n    getReactFieldAppend(columnPath) {\n        let react = null;\n        let typePath = columnPath.concat(['type',]);\n        let type = tool.getStateSpace(typePath, 'char');\n\n        // 单选类型\n        if (tool.isInArray([\n            'singleSmallChoice',\n            'multipleChoice',\n            'singSearchChoice',\n        ], type)) {\n            let choicesPath = columnPath.concat(['choices',]);\n            let choices = tool.getStateSpace(choicesPath, []);\n\n            let lines = [];\n\n            // 列表\n            for (const choice of choices) {\n                let value = choice['value'];\n                let help = choice['help'];\n                lines.push(\n                    <tr key={value}>\n\n                        {/*value*/}\n                        <th>\n                            <input\n                                onBlur={event => {\n                                    let newChoices = [];\n                                    for (const _choice of choices) {\n                                        let _value = _choice['value'];\n                                        let _help = _choice['help'];\n\n                                        let userObj = {\"value\": _value, \"help\": _help,};\n                                        if (_value === value) userObj = {\n                                            \"value\": event.target.value,\n                                            \"help\": _help,\n                                        };\n                                        newChoices.push(userObj);\n                                    }\n                                    tool.setStateSpace(choicesPath, newChoices);\n                                }}\n                                style={{width: '40px',}}\n                                defaultValue={value}\n                            />\n                        </th>\n\n                        {/*箭头*/}\n                        <th>\n                            {'<--->'}\n                        </th>\n\n                        {/*help*/}\n                        <th>\n                            <input\n                                onBlur={event => {\n                                    let newChoices = [];\n                                    for (const _choice of choices) {\n                                        let _value = _choice['value'];\n                                        let _help = _choice['help'];\n\n                                        let userObj = {\"value\": _value, \"help\": _help,};\n                                        if (_value === value) userObj = {\n                                            \"value\": _value,\n                                            \"help\": event.target.value,\n                                        };\n                                        newChoices.push(userObj);\n                                    }\n                                    tool.setStateSpace(choicesPath, newChoices);\n                                }}\n                                style={{width: '40px',}}\n                                defaultValue={help}\n                            />\n                        </th>\n\n                        {/*删除*/}\n                        <th>\n                            <Popconfirm\n                                title=\"确定删除吗?\"\n                                description=\"确定删除吗?\"\n                                onConfirm={() => {\n                                    let newChoices = [];\n                                    for (const _choice of choices) {\n                                        let _value = _choice['value'];\n                                        let _help = _choice['help'];\n                                        if (_value === value) continue;\n                                        let userObj = {\"value\": _value, \"help\": _help,};\n                                        newChoices.push(userObj);\n                                    }\n                                    tool.setStateSpace(choicesPath, newChoices);\n                                }}\n                                onCancel={() => {\n                                }}\n                                okText=\"删除\"\n                                cancelText=\"不要\"\n                            >\n                                <DeleteOutlined style={{color: 'red', marginLeft: '5px',}}/>\n                            </Popconfirm>\n\n                        </th>\n                    </tr>\n                );\n\n            }\n\n            // 增加单选\n            lines.push(<div key={'create'} style={{width: '180px',}}>\n                <button\n                    onClick={() => {\n                        let newChoices = Object.assign([], choices);\n                        let random = Math.random() * 1000;\n                        random = Math.floor(random);\n                        let userObj = {\n                            \"id\": `value_${random}`,\n                            \"value\": `value_${random}`,\n                            \"help\": 'new_read',\n                        };\n                        newChoices.push(userObj);\n\n                        tool.setStateSpace(choicesPath, newChoices);\n                    }}\n                    style={{width: '100%',}}\n                >增加选项\n                </button>\n            </div>)\n\n\n            react = <div\n                style={{\n                    width: '185px',\n                    overflow: 'auto',\n                    // border:'red 1px solid',\n                }}\n            >\n                <table style={{\n                    textAlign: 'left',\n                }}>\n                    <thead>\n\n                    {/*第1行 真值映射*/}\n                    <tr>\n                        <th>\n                            {/*真值映射:*/}\n                        </th>\n                        <th>\n                            {lines}\n                        </th>\n                    </tr>\n\n\n                    </thead>\n                </table>\n            </div>\n        }\n\n        return react;\n    }\n\n    getColumnUpdatePartPath(page = null,) {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let nowPage;\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        nowPage = page ? page : tool.getAttribute(spacePrivate, ['updatePart', 'nowPage',]);\n\n        if (!nowPage) nowPage = 1;\n        let updatePartSpaceKey = `columnsUpdate_${nowPage}`;\n        let columnsUpdatePartPath;\n        columnsUpdatePartPath = spacePublicPath.concat([updatePartSpaceKey,]);\n        return [columnsUpdatePartPath, nowPage];\n    }\n\n    // 开发模式\n    getReactSetUpdate() {\n        let openEdit = tool.getStateSpace(openEditPath, false);\n        if (!openEdit) return null;\n\n        let infoModalPath = ['infoModal'];\n        let res = this.getColumnUpdatePartPath();\n        let columnsUpdatePath = res[0];\n        let nowPage = res[1];\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n\n        // 字段位置移动\n        const moveUpdatePos = (columnKey, direction = -1) => {\n            // direction=-1 上移 direction=1 下移\n            let columns = tool.getStateSpace(columnsUpdatePath);\n            let columnsArray = Object.keys(columns);\n            let index = columnsArray.indexOf(columnKey);\n\n            let indexTarget = index + direction;\n            if (indexTarget < 0) {\n                tool.show_info('已经在最顶部.');\n                return;\n            }\n            if (indexTarget > columnsArray.length - 1) {\n                tool.show_info('已经在最底部.');\n                return;\n            }\n\n\n            let temp = columnsArray[indexTarget];\n            columnsArray[indexTarget] = columnsArray[index];\n            columnsArray[index] = temp;\n            let newColumns = {};\n            for (const _columnKey of columnsArray) newColumns[_columnKey] = columns[_columnKey];\n            tool.setStateSpace(columnsUpdatePath, newColumns);\n        };\n\n        let reactColumns = [];\n\n        // 新建页面\n        reactColumns.push(<div key={'create_page'} style={{width: '100%',}}>\n            <Divider/>\n            当前第{nowPage}页\n            <Button\n                onClick={() => {\n                    let infoModalPath = ['infoModal'];\n                    let infoModal = tool.getStateSpace(infoModalPath);\n\n                    let paramModal = tool.getAttribute(infoModal, 'paramModal');\n                    let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n                    if (!nowPage) nowPage = 1;\n                    let targetPage = nowPage + 1;\n\n                    let columnsUpdatePartTargetPath;\n                    while (true) {\n                        let _updatePartSpaceKey = `columnsUpdate_${targetPage}`;\n                        columnsUpdatePartTargetPath = spacePublicPath.concat([_updatePartSpaceKey,]);\n                        let _space = tool.getStateSpace(columnsUpdatePartTargetPath);\n                        if (!_space) break;\n                        targetPage += 1;\n                    }\n\n\n                    let newData = {};\n                    let random = Math.random() * 100000;\n                    random = Math.floor(random);\n                    newData[`field_${random}`] = {title: '新字段',};\n                    tool.setStateSpace(columnsUpdatePartTargetPath, newData);\n\n                    // 翻页\n                    let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n                    let pagePath = spacePrivatePath.concat(['updatePart', 'nowPage',]);\n                    tool.setStateSpace(pagePath, targetPage);\n                }}\n                style={{width: '100%',}}>增加页面</Button>\n            <Divider/>\n        </div>);\n\n        // 列表\n        for (const columnKey in columnsUpdate) {\n            let columnPath = columnsUpdatePath.concat([columnKey]);\n            let column = columnsUpdate[columnKey];\n\n            let typePath = columnPath.concat(['type',]);\n            let type = tool.getStateSpace(typePath, 'char');\n\n            // 是否隐藏\n            let hiddenPath = columnPath.concat(['hidden']);\n            let hidden = tool.getStateSpace(hiddenPath,);\n\n\n            // 字段附加\n            let reactFieldAppend = this.getReactFieldAppend(columnPath);\n            let border = reactFieldAppend ? '#BEBEBE 1px solid' : '';\n\n            reactColumns.push(<div\n                key={columnKey}\n            >\n\n                {/*分割线*/}\n                <Divider>字段名:{column.title}</Divider>\n\n                {/*删除字段*/}\n                <div\n                    style={{float: 'right',}}>\n                    <Popconfirm\n                        title=\"删除这个字段吗?\"\n                        description=\"删除这个字段吗?\"\n                        onConfirm={() => {\n                            let newColumns = {};\n                            let columns = tool.getStateSpace(columnsUpdatePath);\n                            for (const _columnKey in columns) {\n                                if (_columnKey === columnKey) continue;\n                                newColumns[_columnKey] = columns[_columnKey];\n                            }\n\n                            tool.setStateSpace(columnsUpdatePath, newColumns);\n                        }}\n                        onCancel={() => tool.show_info('已取消')}\n                        okText=\"删除\"\n                        cancelText=\"不要\"\n                    >\n                        <DeleteOutlined style={{color: 'red',}}/>\n                    </Popconfirm>\n                </div>\n\n                {/*列表*/}\n                <table style={{textAlign: 'left',}}>\n                    <thead>\n\n                    {/*第1行 是否显示*/}\n                    <tr>\n                        <th>是否显示:</th>\n                        <th><Radio.Group\n                            onChange={event => {\n                                // tool.setStateSpace(columnPath, Object.assign(column, {hidden: event.target.value,}));\n                                tool.setStateSpace(hiddenPath, event.target.value,);\n                            }}\n                            value={hidden}\n                            style={{\n                                marginLeft: '10px',\n                            }}\n                        >\n                            <Radio value={false}>显示</Radio>\n                            <Radio value={true}>隐藏</Radio>\n                        </Radio.Group></th>\n                    </tr>\n\n                    {/*第2行 修改字段名*/}\n                    <tr>\n                        <th>\n                            修改字段名:\n                        </th>\n                        <th>\n\n                            <input\n                                defaultValue={column.title}\n                                // value={column.title}\n                                onBlur={event => {\n                                    tool.setStateSpace(columnPath, Object.assign(column, {title: event.target.value,}));\n                                }}\n                            />\n                        </th>\n                    </tr>\n\n                    {/*第3行 字段类型*/}\n                    <tr style={{border: border,}}>\n                        <th>\n                            字段类型:\n                        </th>\n                        <th>\n                            <div>\n                                <Select\n                                    style={{width: '100%',}}\n                                    // defaultValue={type}\n                                    value={type}\n                                    onChange={value => {\n                                        tool.setStateSpace(columnPath, Object.assign(column, {type: value,}));\n                                    }}\n                                    options={[\n                                        {\n                                            value: 'bool',\n                                            label: '布尔类型',\n                                        },\n                                        {\n                                            value: 'char',\n                                            label: '字符串(char)',\n                                        },\n                                        {\n                                            value: 'text',\n                                            label: '字符串(text)',\n                                        },\n                                        {\n                                            value: 'file',\n                                            label: '文件类型',\n                                        },\n                                        {\n                                            value: 'multipleFile',\n                                            label: '多文件类型',\n                                        },\n                                        {\n                                            value: 'multipleChoice',\n                                            label: '多项选择类型',\n                                        },\n                                        {\n                                            value: 'singleSmallChoice',\n                                            label: '单项选择(简单)',\n                                        },\n                                        {\n                                            value: 'singSearchChoice',\n                                            label: '单项选择(搜索)',\n                                        },\n                                        // {\n                                        //     value: 'singDeepChoice',\n                                        //     label: '单项选择(深度)',\n                                        // },\n                                        // {\n                                        //     value: 'singNewDeepChoice',\n                                        //     label: '单项选择(深度/新)',\n                                        // },\n                                        {\n                                            value: 'imgPath',\n                                            label: '图片类型(路径)',\n                                        },\n                                        {\n                                            value: 'imgShow',\n                                            label: '图片类型(展示)',\n                                        },\n                                        {\n                                            value: 'imgHead',\n                                            label: '图片类型(头像)',\n                                        },\n                                        {\n                                            value: 'multipleImg',\n                                            label: '图片类型(多项)',\n                                        },\n                                        // {\n                                        //     value: 'dynamic',\n                                        //     label: '动态类型',\n                                        // },\n                                        {\n                                            value: 'time',\n                                            label: '时间类型',\n                                        },\n                                        {\n                                            value: 'timeYear',\n                                            label: '时间类型(年份)',\n                                        },\n                                        {\n                                            value: 'timeDay',\n                                            label: '时间类型(日期)',\n                                        },\n                                        // {\n                                        //     value: 'react',\n                                        //     label: '渲染类型',\n                                        // },\n                                    ]}\n                                />\n                                <div style={{width: '100%',}}>\n                                    {reactFieldAppend}\n                                </div>\n\n                            </div>\n                        </th>\n                    </tr>\n\n                    {/*第4行 映射字段*/}\n                    <tr>\n                        <th>\n                            修改映射字段:\n                        </th>\n                        <th>\n\n                            <input\n                                defaultValue={columnKey}\n                                // value={columnKey}\n                                onBlur={event => {\n                                    let newColumnUpdates = {};\n\n                                    let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n                                    for (const _columnKey in columnsUpdate) {\n                                        let useKey = _columnKey;\n                                        if (_columnKey === columnKey) useKey = event.target.value;\n                                        newColumnUpdates[useKey] = columnsUpdate[_columnKey];\n                                    }\n                                    tool.setStateSpace(columnsUpdatePath, newColumnUpdates);\n\n                                    // tool.setStateSpace(columnPath, Object.assign(column, {title: event.target.value,}));\n                                }}\n                            />\n                        </th>\n                    </tr>\n\n                    {/*第6行 位置*/}\n                    <tr>\n                        <th>\n                            位置:\n                        </th>\n                        <th>\n                            <Button\n                                onClick={() => moveUpdatePos(columnKey, -1)}\n                                style={{width: '50%',}}>上移</Button>\n                            <Button\n                                onClick={() => moveUpdatePos(columnKey, 1)}\n                                style={{width: '50%',}}>下移</Button>\n                        </th>\n                    </tr>\n\n                    </thead>\n                </table>\n\n\n            </div>);\n        }\n\n        // 增加字段\n        reactColumns.push(<div key={'create_field'} style={{width: '100%',}}>\n            <Divider/>\n            <Button\n                onClick={() => {\n                    let columns = tool.getStateSpace(columnsUpdatePath);\n                    let newData = {};\n                    let random = Math.random() * 100000;\n                    random = Math.floor(random);\n                    newData[`field_${random}`] = {title: '新字段',};\n                    let newColumns = Object.assign(columns, newData);\n                    tool.setStateSpace(columnsUpdatePath, newColumns);\n                }}\n                style={{width: '100%',}}>增加字段</Button>\n            <Divider/>\n        </div>);\n\n        // 新建框\n        let isSetUpdateColShowPath = infoModalPath.concat(['isSetUpdateColShow']);\n        let isSetUpdateColShow = tool.getStateSpace(isSetUpdateColShowPath, false);\n\n        let content = <Modal\n            // closeIcon={' '}\n            visible={isSetUpdateColShow}\n            open={isSetUpdateColShow}\n            onCancel={() => tool.setStateSpace(isSetUpdateColShowPath, false,)}\n            footer={null}\n        >\n            <br/><br/>\n            {reactColumns}\n        </Modal>\n\n\n        let react;\n        react = <div>\n            {content}\n            <Button\n                style={{width: '100%',}}\n                onClick={() => tool.setStateSpace(isSetUpdateColShowPath, true,)}\n            ><ToolOutlined/>编辑</Button>\n            <Divider/>\n        </div>\n        return react;\n    }\n\n    // Update\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'UpdatePart') return null;\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n\n        // 是否自定义的触发器\n        // let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        // let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsUpdate = this.getColumnsUpdatePart();\n        let react = tool.getAttribute(columnsUpdate, 'react__');\n        if (react) {\n            let param;\n            // console.log('??>>',this.props)\n            param = Object.assign({}, this.props);\n            return react(param);\n        }\n\n\n        let textTitlePath = spacePublicPath.concat(['text__update_title']);\n        let textTitle = tool.getStateSpace(textTitlePath);\n        if (!textTitle) textTitle = '数据更新';\n\n\n\n        let content = this.getContent();\n\n        // 计算onOk及okText\n        let ok = this.getOk();\n\n        // 自定义脚\n        let nowPage = this.getNowPage();\n        textTitle = `${textTitle}(当前第${nowPage}页)`;\n        let leftButton;\n        if (nowPage !== 1) leftButton = <Button onClick={() => this.onPrevious()}>上一页</Button>;\n\n        let footer = <div>\n            {leftButton}\n            <Button onClick={() => ok.onOk()}>{ok.okText}</Button>\n        </div>;\n        let reactSetUpdate = this.getReactSetUpdate();\n        return (\n\n            <div>\n                <Modal\n                    title={textTitle}\n                    open={true}\n                    visible={true}\n                    // okText={'提交'}\n                    okText={ok.okText}\n                    cancelText={'关闭'}\n                    // onOk={() => this.onOk()}\n                    onOk={() => ok.onOk()}\n                    onCancel={() => this.onCancel()}\n                    footer={footer}\n                >\n                    {reactSetUpdate}\n                    {content}\n                </Modal>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        infoModal: state.infoModal,\n        setting: state.setting,\n    }\n}\n\nUpdateTablePart = connect(mapStateToUpdate)(UpdateTablePart);\n\nexport {UpdateTablePart};\n","import React from \"react\";\nimport {Modal, Divider, Button} from \"antd\";\n\nimport {tool} from \"../tools/tools\";\nimport {connect} from \"react-redux\";\n\n\n//分步创建\nclass CreateTablePart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getColumnsCreatePart = this.getColumnsCreatePart.bind(this);\n        this.getOk = this.getOk.bind(this);\n        this.getNowPage = this.getNowPage.bind(this);\n        this.getNowPagePath = this.getNowPagePath.bind(this);\n        this.isShow = this.isShow.bind(this);\n    }\n\n    getNowPagePath() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let nowPagePath;\n        nowPagePath = spacePrivatePath.concat(['createPart', 'nowPage']);\n        return nowPagePath;\n    }\n\n    getNowPage() {\n        let nowPagePath = this.getNowPagePath();\n        let nowPage = tool.getStateSpace(nowPagePath);\n        if (!nowPage) nowPage = 1;\n        return nowPage;\n    }\n\n    getOk() {\n        let ok;\n        // 检测是否存在下一页\n        let nowPage = this.getNowPage();\n\n        let nextPage = nowPage + 1;\n        let nextPageColumns = this.getColumnsCreatePart(nextPage);\n        let last = false;\n        if (!nextPageColumns) last = true;\n\n        let onOk = () => this.onOk(false);\n        if (last) onOk = () => this.onOk(true);\n\n        let okText = '保存并继续';\n        if (last) okText = '完成';\n\n        ok = {\n            onOk: onOk,\n            okText: okText,\n        };\n        return ok;\n    }\n\n    getFieldReact(param) {\n        let columnKey = tool.getAttribute(param, 'columnKey');\n        let defaultValue = tool.getAttribute(param, 'defaultValue');\n\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let record = tool.getAttribute(infoModal, 'record');\n        let columnsCreatePart = this.getColumnsCreatePart();\n        let columnInfo = columnsCreatePart[columnKey];\n\n\n        //字段类型\n        let fieldType = columnInfo.type;\n        if (!fieldType) fieldType = 'char';\n\n\n        let fieldMapping = tool.getStateSpace(['setting', 'fieldMapping',]);\n        let func = tool.getAttribute(fieldMapping, fieldType);\n\n        if (!this.isShow()) return null;\n\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n\n        // let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let nowPage;\n        nowPage = tool.getAttribute(spacePrivate, ['createPart', 'nowPage',]);\n\n        if (!nowPage) nowPage = 1;\n        // let updatePartSpaceKey = `columnsUpdate_${nowPage}`;\n\n        //更新字段\n        // let columnsCreatePartPath = spacePublicPath.concat([updatePartSpaceKey,]);\n        return (\n            <div key={columnKey}>\n                {func({\n                    record: record,\n                    action: 'create',\n                    columnKey: columnKey,\n                    defaultValue: defaultValue,\n                    // updateSpacePath: columnsCreatePartPath,\n                    spacePrivatePath: spacePrivatePath,\n                    columnInfo: columnInfo,\n                })}\n                <Divider/>\n            </div>\n        );\n    }\n\n    getColumnsCreatePart(page = null) {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        if (!this.isShow()) return null;\n\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n\n        // 计算createPartSpaceKey\n        let nowPage;\n        nowPage = page ? page : tool.getAttribute(spacePrivate, ['createPart', 'nowPage',]);\n\n        if (!nowPage) nowPage = 1;\n        let createPartSpaceKey = `columnsCreate_${nowPage}`;\n\n        //更新字段\n        let columnsCreatePartPath = spacePublicPath.concat([createPartSpaceKey,]);\n        let columnsCreatePart = tool.getStateSpace(columnsCreatePartPath);\n\n        // 是否使用过滤器的字段\n        let filterValue = tool.getAttribute(spacePrivate, 'filterValue');\n        if (!filterValue) {\n            filterValue = tool.getAttribute(spacePublic, ['filters', 'default',])\n        }\n        let filtersInfo = tool.getAttribute(spacePublic, 'filters');\n        let filtersChoices = tool.getAttribute(filtersInfo, 'choices');\n        let filterNow = tool.getAttribute(filtersChoices, filterValue);\n        let filterColumnsCreatePart = tool.getAttribute(filterNow, createPartSpaceKey);\n        if (filterValue && filtersInfo && filtersChoices && filterNow && filterColumnsCreatePart) {\n            columnsCreatePart = filterColumnsCreatePart;\n        }\n        return columnsCreatePart;\n    }\n\n    isShow() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'Create') return null;\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let createPartPath = spacePublicPath.concat(['columnsCreate_1']);\n        let createPartSpace = tool.getStateSpace(createPartPath);\n        if (!createPartSpace) return null;\n        return true;\n    }\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        if (!this.isShow()) return null;\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let record = tool.getAttribute(paramModal, ['record']);\n\n\n        //更新字段\n        let columnsCreate = this.getColumnsCreatePart();\n\n        //显示字段\n        if (!columnsCreate) return null;\n\n        let fieldReacts = [];\n        for (let columnKey in columnsCreate) {\n            if (!columnsCreate.hasOwnProperty(columnKey)) continue;\n\n            //具体的升级列信息\n            let columnCreate = tool.getAttribute(columnsCreate, columnKey,);\n\n            //默认值映射列mapColumnKey\n            let mapColumnKey = tool.getAttribute(columnCreate, 'map',);\n            if (!mapColumnKey) mapColumnKey = columnKey;\n\n\n            //决定是否添加这个字段\n            let state = true;\n            let fun_is_show = tool.getAttribute(columnCreate, 'is_show');\n            if (fun_is_show) {\n                let param = {infoModalPath: infoModalPath, mapColumnKey: mapColumnKey, record: record,};\n                state = fun_is_show(param);\n            }\n            if (state) {\n                fieldReacts.push(this.getFieldReact({\n                    columnKey: columnKey,\n                    defaultValue: null,\n                }));\n            }\n        }\n\n        return fieldReacts;\n    }\n\n    onCancel() {\n        //左键触发检测程序允许正常运行\n        tool.rightInfo = Object.assign({}, tool.rightInfo, {\n            sign: false,\n        },);\n\n        //关闭对话框/清空数据\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        infoModal = Object.assign({}, infoModal, {\n            nowType: null,\n            paramModal: null,\n        });\n\n        tool.setStateSpace(infoModalPath, infoModal,);\n    }\n\n    onOk(last = false) {\n\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        if (!this.isShow()) return null;\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let fatherRecord = tool.getAttribute(paramModal, 'fatherRecord');\n        let requestPathPath = spacePublicPath.concat(['path']);\n        let requestPath = tool.getStateSpace(requestPathPath);\n\n        let dataKey = `create__x`;\n        let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n        let data = tool.getStateSpace(dataPath);\n        if (!data) data = {};\n\n        // 仅翻页\n        if (!last) {\n            // 设置当前页\n            let spacePrivate = tool.getStateSpace(spacePrivatePath);\n            let createPart = tool.getAttribute(spacePrivate, ['createPart',]);\n            let nowPage;\n            if (!last) {\n                nowPage = tool.getAttribute(spacePrivate, ['createPart', 'nowPage',]);\n                if (!nowPage) nowPage = 1;\n                nowPage += 1;\n            } else {\n                nowPage = 1;\n            }\n\n\n            createPart = Object.assign({}, createPart, {nowPage: nowPage});\n            spacePrivate = Object.assign({}, spacePrivate, {\n                createPart: createPart,\n            });\n\n            // 更新modal内容\n            let infoModalPath = ['infoModal'];\n            let infoModal = tool.getStateSpace(infoModalPath);\n            infoModal = Object.assign({}, infoModal,);\n            setTimeout(() => tool.setStateSpace(infoModalPath, infoModal,), 50);\n\n            tool.setStateSpace(spacePrivatePath, spacePrivate);\n\n            return null;\n        }\n\n\n        // 获取get参数\n        let paramUrl = {};\n        if (fatherRecord) paramUrl['father_id'] = fatherRecord.id;\n\n        let url = tool.get_url(requestPath, false, paramUrl,);\n\n        let stateSplitTwo = false;\n        let dataObj;\n        //把数据分成两部分\n        let otherData = {};\n        let filesData = {};\n        for (let key in data) {\n            if (!data.hasOwnProperty(key)) continue;\n            let value = data[key];\n            if (value instanceof File) {\n                filesData[key] = value;\n            } else {\n                otherData[key] = value;\n            }\n\n        }\n        otherData = JSON.stringify(otherData);\n        if (JSON.stringify(filesData) !== '{}') {\n            stateSplitTwo = true;\n            dataObj = new FormData();\n            dataObj.append('stateSplitTwo', 'true');\n\n            dataObj.append('otherData', otherData);\n            for (let fileKey in filesData) dataObj.append(`files__${fileKey}`, filesData[fileKey]);\n        }\n\n\n        let requestParam = {\n            url: url,\n            data: otherData,\n            contentType: 'application/json',\n            success: data => {\n                //左键触发检测程序允许正常运行\n                // tool.rightInfo = Object.assign({}, tool.rightInfo, {\n                //     sign: false,\n                //     onTableMenu: false,\n                // },);\n                tool.show_success(['创建成功',]);\n\n                // 更新表单数据\n                if (last) {\n                    let infoModalPath = ['infoModal'];\n                    let infoModal = tool.getStateSpace(infoModalPath);\n                    infoModal = Object.assign({}, infoModal, {\n                        nowType: null,\n                        paramModal: null,\n                    });\n                    tool.setStateSpace(infoModalPath, infoModal,);\n                }\n\n\n                // 更新表格数据\n                let spacePrivate = tool.getStateSpace(spacePrivatePath);\n                spacePrivate = Object.assign({}, spacePrivate, {\n                    stateTableOnload: 'page',\n                });\n\n                // 设置当前页\n                let createPart = tool.getAttribute(spacePrivate, ['createPart',]);\n                let nowPage;\n                if (!last) {\n                    nowPage = tool.getAttribute(spacePrivate, ['createPart', 'nowPage',]);\n                    if (!nowPage) nowPage = 1;\n                    nowPage += 1;\n                } else {\n                    nowPage = 1;\n                }\n\n\n                createPart = Object.assign({}, createPart, {nowPage: nowPage});\n                spacePrivate = Object.assign({}, spacePrivate, {\n                    createPart: createPart,\n                });\n\n                // 更新modal内容\n                let infoModalPath = ['infoModal'];\n                let infoModal = tool.getStateSpace(infoModalPath);\n                infoModal = Object.assign({}, infoModal,);\n                setTimeout(() => tool.setStateSpace(infoModalPath, infoModal,), 50);\n\n                tool.setStateSpace(spacePrivatePath, spacePrivate);\n            },\n            error: data => {\n                //左键触发检测程序允许正常运行\n                // tool.rightInfo = Object.assign({}, tool.rightInfo, {\n                //     sign: false,\n                //     onTableMenu: false,\n                // },);\n\n                let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n                let columnsCreate = tool.getStateSpace(columnsCreatePath);\n                tool.show_error(data, columnsCreate);\n                // tool.show_error(data, columnsUpdate);\n            },\n        };\n        //数据分成两部分\n        if (stateSplitTwo) {\n            requestParam['contentType'] = false;\n            requestParam['processData'] = false;\n            requestParam['data'] = dataObj;\n        }\n        if (last) tool.post(requestParam);\n    }\n\n    onPrevious() {\n        let nowPage = this.getNowPage();\n        if (nowPage <= 1) return null;\n        nowPage -= 1;\n        let nowPagePath = this.getNowPagePath();\n        tool.setStateSpace(nowPagePath, nowPage);\n\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        infoModal = Object.assign({}, infoModal,);\n        tool.setStateSpace(infoModalPath, infoModal,);\n    }\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        if (!this.isShow()) return null;\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n\n        // 是否自定义的触发器\n        // let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        // let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = this.getColumnsCreatePart();\n        let react = tool.getAttribute(columnsCreate, 'react__');\n        if (react) {\n            let param;\n            // console.log('??>>',this.props)\n            param = Object.assign({}, this.props);\n            return react(param);\n        }\n\n\n        let textTitlePath = spacePublicPath.concat(['text__create_title']);\n        let textTitle = tool.getStateSpace(textTitlePath);\n        if (!textTitle) textTitle = '数据创建';\n\n        let content = this.getContent();\n\n        // 计算onOk及okText\n        let ok = this.getOk();\n\n        // 自定义脚\n        let nowPage = this.getNowPage();\n        let leftButton;\n        if (nowPage !== 1) leftButton = <Button onClick={() => this.onPrevious()}>上一页</Button>;\n\n        let footer = <div>\n            {leftButton}\n            <Button onClick={() => ok.onOk()}>{ok.okText}</Button>\n        </div>;\n\n        return (\n\n            <div>\n                <Modal\n                    title={textTitle}\n                    open={true}\n                    visible={true}\n                    // okText={'提交'}\n                    okText={ok.okText}\n                    cancelText={'关闭'}\n                    // onOk={() => this.onOk()}\n                    onOk={() => ok.onOk()}\n                    onCancel={() => this.onCancel()}\n                    footer={footer}\n                >\n                    {content}\n                </Modal>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        infoModal: state.infoModal,\n    }\n}\n\nCreateTablePart = connect(mapStateToUpdate)(CreateTablePart);\n\nexport {CreateTablePart};\n","import React from \"react\";\nimport {Button, Divider, Modal, Popconfirm, Progress, Radio, Select,} from \"antd\";\n\nimport $ from 'jquery';\nimport {tool} from \"../tools/tools\";\nimport {connect} from \"react-redux\";\nimport {openEditPath,} from \"../../index\";\nimport {DeleteOutlined, ToolOutlined} from \"@ant-design/icons\";\n\n//数据创建 space\nclass CreateTable extends React.Component {\n    getFieldReact(param) {\n        let columnKey = tool.getAttribute(param, 'columnKey');\n        let defaultValue = tool.getAttribute(param, 'defaultValue');\n\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n        let columnInfo = columnsCreate[columnKey];\n\n\n        //字段类型\n        let fieldType = columnInfo.type;\n        if (!fieldType) fieldType = 'char';\n\n\n        let fieldMapping = tool.getStateSpace(['setting', 'fieldMapping',]);\n        let func = tool.getAttribute(fieldMapping, fieldType);\n\n        return (\n            <div key={columnKey}>\n                {func({\n                    action: 'create',\n                    columnKey: columnKey,\n                    defaultValue: defaultValue,\n                })}\n                <Divider/>\n            </div>\n        );\n    }\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'Create') return null;\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n\n        //创建字段\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate',]);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        //显示字段\n        if (!columnsCreate) return null;\n\n        let fieldReacts = [];\n        for (let columnKey in columnsCreate) {\n            if (!columnsCreate.hasOwnProperty(columnKey)) continue;\n\n            //具体的创建列信息\n            let columnCreate = tool.getAttribute(columnsCreate, columnKey,);\n            let hidden = tool.getAttribute(columnCreate, 'hidden', false);\n            if (hidden) continue;\n            //默认值defaultValue\n            let defaultValue = tool.getAttribute(columnCreate, 'defaultValue',);\n\n            //决定是否添加这个字段\n            let state = true;\n            let fun_is_show = tool.getAttribute(columnCreate, 'is_show');\n            if (fun_is_show) {\n                let param = {infoModalPath: infoModalPath,};\n                state = fun_is_show(param);\n            }\n            if (state) {\n                fieldReacts.push(this.getFieldReact({\n                    columnKey: columnKey,\n                    defaultValue: defaultValue,\n                }));\n            }\n        }\n\n        return fieldReacts;\n    }\n\n    getProgress() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'Create') return null;\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let progressInfo = tool.getAttribute(spacePrivate, 'progressInfo');\n        let stateCreateUpload = tool.getAttribute(spacePrivate, 'stateCreateUpload');\n        if (!stateCreateUpload) return null;\n\n        let percent = tool.getAttribute(progressInfo, 'percent');\n        if (!percent) percent = 0;\n        return <div>\n            <Progress percent={percent} status=\"active\"/>\n        </div>;\n    }\n\n    onCancel() {\n        //关闭对话框/清空数据\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let stateCreateUploadPath = spacePrivatePath.concat(['stateCreateUpload']);\n\n        // let stateCreateUploadPath = spacePrivatePath.concat(['stateCreateUpload']);\n        let stateCreateUpload = tool.getStateSpace(stateCreateUploadPath);\n        if (stateCreateUpload) {\n            tool.show_info('请耐心等待数据创建完成.');\n            return null;\n        }\n\n        // tool.setStateSpace(stateCreateUploadPath, false);\n\n        infoModal = Object.assign({}, infoModal, {\n            nowType: null,\n            paramModal: null,\n        });\n        tool.setStateSpace(infoModalPath, infoModal,);\n\n\n    }\n\n    onOk() {\n        let infoModalPath = ['infoModal'];\n\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'Create') return null;\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let fatherRecord = tool.getAttribute(paramModal, 'fatherRecord');\n        let requestPathPath = spacePublicPath.concat(['path']);\n        let requestPath = tool.getStateSpace(requestPathPath);\n\n        let dataKey = `create__x`;\n        let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n        let data = tool.getStateSpace(dataPath);\n        if (!data) data = {};\n\n        // 获取get参数\n        let paramUrl = {};\n        if (fatherRecord) paramUrl['father_id'] = fatherRecord.id;\n\n        let url = tool.get_url(requestPath, false, paramUrl);\n\n        let stateSplitTwo = false;\n        let dataObj;\n\n        // 设置为正在上传\n        let stateCreateUploadPath = spacePrivatePath.concat(['stateCreateUpload']);\n        tool.setStateSpace(stateCreateUploadPath, true);\n        tool.setStateSpace(infoModalPath, Object.assign({}, infoModal),);\n\n        //把数据分成两部分\n        let otherData = {};\n        let filesData = {};\n        for (let key in data) {\n            if (!data.hasOwnProperty(key)) continue;\n            let value = data[key];\n            if (value instanceof File) {\n                filesData[key] = value;\n            } else {\n                otherData[key] = value;\n            }\n\n        }\n        otherData = JSON.stringify(otherData);\n        if (JSON.stringify(filesData) !== '{}') {\n            stateSplitTwo = true;\n            dataObj = new FormData();\n            dataObj.append('stateSplitTwo', 'true');\n\n            dataObj.append('otherData', otherData);\n            for (let fileKey in filesData) dataObj.append(`files__${fileKey}`, filesData[fileKey]);\n        }\n\n        // 置空进度条\n        let percent = 0; //进度值（百分比制）\n        let percentPath = spacePrivatePath.concat(['progressInfo', 'percent',]);\n        tool.setStateSpace(percentPath, percent);\n        tool.setStateSpace(infoModalPath, Object.assign({}, infoModal),);\n\n        let requestParam = {\n            url: url,\n            data: otherData,\n            contentType: 'application/json',\n            success: (data, _, response,) => {\n                let status = tool.getAttribute(response, 'status');\n                if (status === 299) {\n                    tool.show_success_299(data);\n                } else {\n                    tool.show_success(['创建成功',]);\n                }\n\n                // 清空表单数据\n                let infoModal = tool.getStateSpace(infoModalPath);\n                infoModal = Object.assign({}, infoModal, {\n                    nowType: null,\n                    paramModal: null,\n                });\n                tool.setStateSpace(infoModalPath, infoModal,);\n\n                // 更新表格数据\n                let spacePrivate = tool.getStateSpace(spacePrivatePath);\n                spacePrivate = Object.assign({}, spacePrivate, {\n                    stateTableOnload: 'page',\n                    stateCreateUpload: false,\n                    selfProgress: false,// 重置进度条为活跃\n                });\n                tool.setStateSpace(spacePrivatePath, spacePrivate);\n            },\n            error: data => {\n                let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n                let columnsCreate = tool.getStateSpace(columnsCreatePath);\n                tool.show_error(data, columnsCreate);\n                tool.setStateSpace(stateCreateUploadPath, false);\n            },\n            xhr: function () { //用以显示上传进度\n                let xhr = $.ajaxSettings.xhr();\n                if (xhr.upload) {\n                    xhr.upload.addEventListener('progress', function (event) {\n                        let percent = Math.floor(event.loaded / event.total * 100); //进度值（百分比制）\n                        let percentPath = spacePrivatePath.concat(['progressInfo', 'percent',]);\n                        tool.setStateSpace(percentPath, percent);\n                        tool.setStateSpace(infoModalPath, Object.assign({}, infoModal),);\n                    }, false);\n                }\n                return xhr\n            },\n        };\n\n        //数据分成两部分\n        if (stateSplitTwo) {\n            requestParam['contentType'] = false;\n            requestParam['processData'] = false;\n            requestParam['data'] = dataObj;\n        }\n\n        tool.post(requestParam);\n    }\n\n    isShowPart() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'Create') return null;\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let createPartPath = spacePublicPath.concat(['columnsCreate_1']);\n        let createPartSpace = tool.getStateSpace(createPartPath);\n        if (!createPartSpace) return null;\n        return true;\n    }\n\n    // 字段附加\n    getReactFieldAppend(columnPath) {\n        let react = null;\n        let typePath = columnPath.concat(['type',]);\n        let type = tool.getStateSpace(typePath, 'char');\n\n        // 单选类型\n        if (tool.isInArray([\n            'singleSmallChoice',\n            'multipleChoice',\n            'singSearchChoice',\n        ], type)) {\n            let choicesPath = columnPath.concat(['choices',]);\n            let choices = tool.getStateSpace(choicesPath, []);\n\n            let lines = [];\n\n            // 列表\n            for (const choice of choices) {\n                let value = choice['value'];\n                let help = choice['help'];\n                lines.push(\n                    <tr key={value}>\n\n                        {/*value*/}\n                        <th>\n                            <input\n                                onBlur={event => {\n                                    let newChoices = [];\n                                    for (const _choice of choices) {\n                                        let _value = _choice['value'];\n                                        let _help = _choice['help'];\n\n                                        let userObj = {\"value\": _value, \"help\": _help,};\n                                        if (_value === value) userObj = {\n                                            \"value\": event.target.value,\n                                            \"help\": _help,\n                                        };\n                                        newChoices.push(userObj);\n                                    }\n                                    tool.setStateSpace(choicesPath, newChoices);\n                                }}\n                                style={{width: '40px',}}\n                                defaultValue={value}\n                            />\n                        </th>\n\n                        {/*箭头*/}\n                        <th>\n                            {'<--->'}\n                        </th>\n\n                        {/*help*/}\n                        <th>\n                            <input\n                                onBlur={event => {\n                                    let newChoices = [];\n                                    for (const _choice of choices) {\n                                        let _value = _choice['value'];\n                                        let _help = _choice['help'];\n\n                                        let userObj = {\"value\": _value, \"help\": _help,};\n                                        if (_value === value) userObj = {\n                                            \"value\": _value,\n                                            \"help\": event.target.value,\n                                        };\n                                        newChoices.push(userObj);\n                                    }\n                                    tool.setStateSpace(choicesPath, newChoices);\n                                }}\n                                style={{width: '40px',}}\n                                defaultValue={help}\n                            />\n                        </th>\n\n                        {/*删除*/}\n                        <th>\n                            <Popconfirm\n                                title=\"确定删除吗?\"\n                                description=\"确定删除吗?\"\n                                onConfirm={() => {\n                                    let newChoices = [];\n                                    for (const _choice of choices) {\n                                        let _value = _choice['value'];\n                                        let _help = _choice['help'];\n                                        if (_value === value) continue;\n                                        let userObj = {\"value\": _value, \"help\": _help,};\n                                        newChoices.push(userObj);\n                                    }\n                                    tool.setStateSpace(choicesPath, newChoices);\n                                }}\n                                onCancel={() => {\n                                }}\n                                okText=\"删除\"\n                                cancelText=\"不要\"\n                            >\n                                <DeleteOutlined style={{color: 'red', marginLeft: '5px',}}/>\n                            </Popconfirm>\n\n                        </th>\n                    </tr>\n                );\n\n            }\n\n            // 增加单选\n            lines.push(<div key={'create'} style={{width: '180px',}}>\n                <button\n                    onClick={() => {\n                        let newChoices = Object.assign([], choices);\n                        let random = Math.random() * 1000;\n                        random = Math.floor(random);\n                        let userObj = {\n                            \"id\": `value_${random}`,\n                            \"value\": `value_${random}`,\n                            \"help\": 'new_read',\n                        };\n                        newChoices.push(userObj);\n\n                        tool.setStateSpace(choicesPath, newChoices);\n                    }}\n                    style={{width: '100%',}}\n                >增加选项\n                </button>\n            </div>)\n\n\n            react = <div\n                style={{\n                    width: '185px',\n                    overflow: 'auto',\n                    // border:'red 1px solid',\n                }}\n            >\n                <table style={{\n                    textAlign: 'left',\n                }}>\n                    <thead>\n\n                    {/*第1行 真值映射*/}\n                    <tr>\n                        <th>\n                            {/*真值映射:*/}\n                        </th>\n                        <th>\n                            {lines}\n                        </th>\n                    </tr>\n\n\n                    </thead>\n                </table>\n            </div>\n        }\n\n        return react;\n    }\n\n    getReactSetCreate() {\n        let openEdit = tool.getStateSpace(openEditPath, false);\n        if (!openEdit) return null;\n\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        // 字段位置移动\n        const moveCreatePos = (columnKey, direction = -1) => {\n            // direction=-1 上移 direction=1 下移\n            let columns = tool.getStateSpace(columnsCreatePath);\n            let columnsArray = Object.keys(columns);\n            let index = columnsArray.indexOf(columnKey);\n\n            let indexTarget = index + direction;\n            if (indexTarget < 0) {\n                tool.show_info('已经在最顶部.');\n                return;\n            }\n            if (indexTarget > columnsArray.length - 1) {\n                tool.show_info('已经在最底部.');\n                return;\n            }\n\n\n            let temp = columnsArray[indexTarget];\n            columnsArray[indexTarget] = columnsArray[index];\n            columnsArray[index] = temp;\n            let newColumns = {};\n            for (const _columnKey of columnsArray) newColumns[_columnKey] = columns[_columnKey];\n            tool.setStateSpace(columnsCreatePath, newColumns);\n        };\n\n        let reactColumns = [];\n        // 列表\n        for (const columnKey in columnsCreate) {\n            let columnPath = columnsCreatePath.concat([columnKey]);\n            let column = columnsCreate[columnKey];\n\n            let typePath = columnPath.concat(['type',]);\n            let type = tool.getStateSpace(typePath, 'char');\n\n            // 是否隐藏\n            let hiddenPath = columnPath.concat(['hidden']);\n            let hidden = tool.getStateSpace(hiddenPath,);\n\n\n            // 字段附加\n            let reactFieldAppend = this.getReactFieldAppend(columnPath);\n            let border = reactFieldAppend ? '#BEBEBE 1px solid' : '';\n\n            reactColumns.push(<div\n                key={columnKey}\n            >\n\n                {/*分割线*/}\n                <Divider>字段名:{column.title}</Divider>\n\n                {/*删除字段*/}\n                <div\n                    style={{float: 'right',}}>\n                    <Popconfirm\n                        title=\"删除这个字段吗?\"\n                        description=\"删除这个字段吗?\"\n                        onConfirm={() => {\n                            let newColumns = {};\n                            let columns = tool.getStateSpace(columnsCreatePath);\n                            for (const _columnKey in columns) {\n                                if (_columnKey === columnKey) continue;\n                                newColumns[_columnKey] = columns[_columnKey];\n                            }\n\n                            tool.setStateSpace(columnsCreatePath, newColumns);\n                        }}\n                        onCancel={() => tool.show_info('已取消')}\n                        okText=\"删除\"\n                        cancelText=\"不要\"\n                    >\n                        <DeleteOutlined style={{color: 'red',}}/>\n                    </Popconfirm>\n                </div>\n\n                {/*列表*/}\n                <table style={{textAlign: 'left',}}>\n                    <thead>\n\n                    {/*第1行 是否显示*/}\n                    <tr>\n                        <th>是否显示:</th>\n                        <th><Radio.Group\n                            onChange={event => {\n                                // tool.setStateSpace(columnPath, Object.assign(column, {hidden: event.target.value,}));\n                                tool.setStateSpace(hiddenPath, event.target.value,);\n                            }}\n                            value={hidden}\n                            style={{\n                                marginLeft: '10px',\n                            }}\n                        >\n                            <Radio value={false}>显示</Radio>\n                            <Radio value={true}>隐藏</Radio>\n                        </Radio.Group></th>\n                    </tr>\n\n                    {/*第2行 修改字段名*/}\n                    <tr>\n                        <th>\n                            修改字段名:\n                        </th>\n                        <th>\n\n                            <input\n                                defaultValue={column.title}\n                                // value={column.title}\n                                onBlur={event => {\n                                    tool.setStateSpace(columnPath, Object.assign(column, {title: event.target.value,}));\n                                }}\n                            />\n                        </th>\n                    </tr>\n\n                    {/*第3行 字段类型*/}\n                    <tr style={{border: border,}}>\n                        <th>\n                            字段类型:\n                        </th>\n                        <th>\n                            <div>\n                                <Select\n                                    style={{width: '100%',}}\n                                    // defaultValue={type}\n                                    value={type}\n                                    onChange={value => {\n                                        tool.setStateSpace(columnPath, Object.assign(column, {type: value,}));\n                                    }}\n                                    options={[\n                                        {\n                                            value: 'bool',\n                                            label: '布尔类型',\n                                        },\n                                        {\n                                            value: 'char',\n                                            label: '字符串(char)',\n                                        },\n                                        {\n                                            value: 'text',\n                                            label: '字符串(text)',\n                                        },\n                                        {\n                                            value: 'file',\n                                            label: '文件类型',\n                                        },\n                                        {\n                                            value: 'multipleFile',\n                                            label: '多文件类型',\n                                        },\n                                        {\n                                            value: 'multipleChoice',\n                                            label: '多项选择类型',\n                                        },\n                                        {\n                                            value: 'singleSmallChoice',\n                                            label: '单项选择(简单)',\n                                        },\n                                        {\n                                            value: 'singSearchChoice',\n                                            label: '单项选择(搜索)',\n                                        },\n                                        // {\n                                        //     value: 'singDeepChoice',\n                                        //     label: '单项选择(深度)',\n                                        // },\n                                        // {\n                                        //     value: 'singNewDeepChoice',\n                                        //     label: '单项选择(深度/新)',\n                                        // },\n                                        {\n                                            value: 'imgPath',\n                                            label: '图片类型(路径)',\n                                        },\n                                        {\n                                            value: 'imgShow',\n                                            label: '图片类型(展示)',\n                                        },\n                                        {\n                                            value: 'imgHead',\n                                            label: '图片类型(头像)',\n                                        },\n                                        {\n                                            value: 'multipleImg',\n                                            label: '图片类型(多项)',\n                                        },\n                                        // {\n                                        //     value: 'dynamic',\n                                        //     label: '动态类型',\n                                        // },\n                                        {\n                                            value: 'time',\n                                            label: '时间类型',\n                                        },\n                                        {\n                                            value: 'timeYear',\n                                            label: '时间类型(年份)',\n                                        },\n                                        {\n                                            value: 'timeDay',\n                                            label: '时间类型(日期)',\n                                        },\n                                        // {\n                                        //     value: 'react',\n                                        //     label: '渲染类型',\n                                        // },\n                                    ]}\n                                />\n                                <div style={{width: '100%',}}>\n                                    {reactFieldAppend}\n                                </div>\n\n                            </div>\n                        </th>\n                    </tr>\n\n                    {/*第4行 映射字段*/}\n                    <tr>\n                        <th>\n                            修改映射字段:\n                        </th>\n                        <th>\n\n                            <input\n                                defaultValue={columnKey}\n                                // value={columnKey}\n                                onBlur={event => {\n                                    let newColumnCreates = {};\n\n                                    let columnsCreate = tool.getStateSpace(columnsCreatePath);\n                                    for (const _columnKey in columnsCreate) {\n                                        let useKey = _columnKey;\n                                        if (_columnKey === columnKey) useKey = event.target.value;\n                                        newColumnCreates[useKey] = columnsCreate[_columnKey];\n                                    }\n                                    tool.setStateSpace(columnsCreatePath, newColumnCreates);\n\n                                    // tool.setStateSpace(columnPath, Object.assign(column, {title: event.target.value,}));\n                                }}\n                            />\n                        </th>\n                    </tr>\n\n                    {/*第6行 位置*/}\n                    <tr>\n                        <th>\n                            位置:\n                        </th>\n                        <th>\n                            <Button\n                                onClick={() => moveCreatePos(columnKey, -1)}\n                                style={{width: '50%',}}>上移</Button>\n                            <Button\n                                onClick={() => moveCreatePos(columnKey, 1)}\n                                style={{width: '50%',}}>下移</Button>\n                        </th>\n                    </tr>\n\n                    </thead>\n                </table>\n\n\n            </div>);\n        }\n        // 增加字段\n        reactColumns.push(<div key={'create_field'} style={{width: '100%',}}>\n            <Divider/>\n            <Button\n                onClick={() => {\n                    let columns = tool.getStateSpace(columnsCreatePath);\n                    let newData = {};\n                    let random = Math.random() * 100000;\n                    random = Math.floor(random);\n                    newData[`field_${random}`] = {title: '新字段',};\n                    let newColumns = Object.assign(columns, newData);\n                    tool.setStateSpace(columnsCreatePath, newColumns);\n                }}\n                style={{width: '100%',}}>增加字段</Button>\n            <Divider/>\n        </div>);\n\n        // 新建框\n        let isSetCreateColShowPath = infoModalPath.concat(['isSetCreateColShow']);\n        let isSetCreateColShow = tool.getStateSpace(isSetCreateColShowPath, false);\n\n        let content = <Modal\n            // closeIcon={' '}\n            visible={isSetCreateColShow}\n            open={isSetCreateColShow}\n            onCancel={() => tool.setStateSpace(isSetCreateColShowPath, false,)}\n            footer={null}\n        >\n            <br/><br/>\n            {reactColumns}\n        </Modal>\n\n\n        let react;\n        react = <div>\n            {content}\n            <Button\n                style={{width: '100%',}}\n                onClick={() => tool.setStateSpace(isSetCreateColShowPath, true,)}\n            ><ToolOutlined/>编辑</Button>\n            <Divider/>\n        </div>\n        return react;\n    }\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'Create') return null;\n        if (this.isShowPart()) return null;\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n\n        let textTitlePath = spacePublicPath.concat(['text__create_title']);\n        let textTitle = tool.getStateSpace(textTitlePath);\n        if (!textTitle) textTitle = '数据创建';\n\n        let content = this.getContent();\n        let progress = this.getProgress();\n\n        // 是否正在提交数据\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let stateCreateUpload = tool.getAttribute(spacePrivate, 'stateCreateUpload');\n        let disabled = false;\n        if (stateCreateUpload) disabled = true;\n        let reactSetCreate = this.getReactSetCreate();\n        return (\n\n            <div>\n                <Modal\n                    title={textTitle}\n                    open={true}\n                    visible={true}\n                    // okText={'提交'}\n                    // cancelText={'关闭'}\n                    onOk={() => this.onOk()}\n                    onCancel={() => this.onCancel()}\n                    footer={<div>\n                        <Button onClick={() => this.onCancel()}>关闭</Button>\n                        <Button\n                            onClick={() => this.onOk()}\n                            type={'primary'}\n                            disabled={disabled}\n                        >提交</Button>\n                    </div>}\n                >\n                    {reactSetCreate}\n                    {content}\n                    {progress}\n                </Modal>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToCreate(state) {\n    return {\n        infoModal: state.infoModal,\n        setting: state.setting,\n    }\n}\n\nCreateTable = connect(mapStateToCreate)(CreateTable);\n\nexport {CreateTable};","import React from \"react\";\nimport {Modal, Divider} from \"antd\";\n\nimport {tool} from \"../tools/tools\";\nimport {connect} from \"react-redux\";\n\n\n//数据拷贝\nclass CreateCopyTable extends React.Component {\n    getFieldReact(param) {\n        let columnKey = tool.getAttribute(param, 'columnKey');\n        let defaultValue = tool.getAttribute(param, 'defaultValue');\n\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n        let columnInfo = columnsCreate[columnKey];\n        let record = tool.getAttribute(infoModal, 'record');\n\n        //字段类型\n        let fieldType = columnInfo.type;\n        if (!fieldType) fieldType = 'char';\n\n\n        let fieldMapping = tool.getStateSpace(['setting', 'fieldMapping',]);\n        let func = tool.getAttribute(fieldMapping, fieldType);\n\n        return (\n            <div key={columnKey}>\n                {func({\n                    record: record,\n                    action: 'copy',\n                    columnKey: columnKey,\n                    defaultValue: defaultValue,\n                })}\n                <Divider/>\n            </div>\n        );\n    }\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'Copy') return null;\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let record = tool.getAttribute(paramModal, ['record']);\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n\n        //创建字段\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate',]);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        //显示字段\n        if (!columnsCreate) return null;\n\n        let fieldReacts = [];\n        for (let columnKey in columnsCreate) {\n            if (!columnsCreate.hasOwnProperty(columnKey)) continue;\n\n            //具体的创建列信息\n            let columnCreate = tool.getAttribute(columnsCreate, columnKey,);\n\n            //默认值 defaultValue\n            let defaultValue = tool.getAttribute(columnCreate, 'defaultValue',);\n\n            //默认值映射列mapColumnKey\n            let mapColumnKey = tool.getAttribute(columnCreate, 'map',);\n            if (!mapColumnKey) mapColumnKey = columnKey;\n\n            //映射值\n            let mapValue = record[mapColumnKey];\n            if (!defaultValue) {\n                defaultValue = mapValue;\n            }\n\n\n            fieldReacts.push(this.getFieldReact({\n                columnKey: columnKey,\n                defaultValue: defaultValue,\n            }));\n        }\n\n        return fieldReacts;\n    }\n\n    onCancel() {\n        //左键触发检测程序允许正常运行\n        tool.rightInfo = Object.assign({}, tool.rightInfo, {\n            sign: false,\n        },);\n\n        //关闭对话框/清空数据\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        infoModal = Object.assign({}, infoModal, {\n            nowType: null,\n            paramModal: null,\n        });\n\n        tool.setStateSpace(infoModalPath, infoModal,);\n    }\n\n    onOk() {\n        let infoModalPath = ['infoModal'];\n\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'Copy') return null;\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let requestPathPath = spacePublicPath.concat(['path']);\n        let requestPath = tool.getStateSpace(requestPathPath);\n        let fatherRecord = tool.getAttribute(paramModal, 'fatherRecord');\n\n        let dataKey = `create__x`;\n        let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n        let data = tool.getStateSpace(dataPath);\n        if (!data) data = {};\n\n        // 获取get参数\n        let paramUrl = {};\n        if (fatherRecord) paramUrl['father_id'] = fatherRecord.id;\n\n        let url = tool.get_url(requestPath, false, paramUrl);\n\n        let stateSplitTwo = false;\n        let dataObj;\n\n        //把数据分成两部分\n        let otherData = {};\n        let filesData = {};\n        for (let key in data) {\n            if (!data.hasOwnProperty(key)) continue;\n            let value = data[key];\n            if (value instanceof File) {\n                filesData[key] = value;\n            } else {\n                otherData[key] = value;\n            }\n\n        }\n        otherData = JSON.stringify(otherData);\n        if (JSON.stringify(filesData) !== '{}') {\n            stateSplitTwo = true;\n            dataObj = new FormData();\n            dataObj.append('stateSplitTwo', 'true');\n\n            dataObj.append('otherData', otherData);\n            for (let fileKey in filesData) dataObj.append(`files__${fileKey}`, filesData[fileKey]);\n        }\n        let requestParam = {\n            url: url,\n            data: otherData,\n            contentType: 'application/json',\n            success: data => {\n                //左键触发检测程序允许正常运行\n                tool.rightInfo = Object.assign({}, tool.rightInfo, {\n                    sign: false,\n                },);\n\n                tool.show_success(['创建成功',]);\n\n                // 清空表单数据\n                let infoModalPath = ['infoModal'];\n                let infoModal = tool.getStateSpace(infoModalPath);\n                infoModal = Object.assign({}, infoModal, {\n                    nowType: null,\n                    paramModal: null,\n                });\n                tool.setStateSpace(infoModalPath, infoModal,);\n\n                // 更新表格数据\n                let spacePrivate = tool.getStateSpace(spacePrivatePath);\n                spacePrivate = Object.assign({}, spacePrivate, {\n                    stateTableOnload: true,\n                });\n                tool.setStateSpace(spacePrivatePath, spacePrivate);\n            },\n            error: data => {\n                let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n                let columnsCreate = tool.getStateSpace(columnsCreatePath);\n                tool.show_error(data, columnsCreate);\n            },\n        };\n\n        //数据分成两部分\n        if (stateSplitTwo) {\n            requestParam['contentType'] = false;\n            requestParam['processData'] = false;\n            requestParam['data'] = dataObj;\n        }\n\n        tool.post(requestParam);\n    }\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'Copy') return null;\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n\n        let textTitlePath = spacePublicPath.concat(['text__copy_title']);\n        let textTitle = tool.getStateSpace(textTitlePath);\n        if (!textTitle) textTitle = '数据拷贝';\n\n        let content = this.getContent();\n\n        return (\n\n            <div>\n                <Modal\n                    title={textTitle}\n                    open={true}\n                    visible={true}\n                    okText={'提交'}\n                    cancelText={'关闭'}\n                    onOk={() => this.onOk()}\n                    onCancel={() => this.onCancel()}\n                >\n                    {content}\n                </Modal>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToCopy(state) {\n    return {\n        infoModal: state.infoModal,\n    }\n}\n\nCreateCopyTable = connect(mapStateToCopy)(CreateCopyTable);\n\nexport {CreateCopyTable};","import React from \"react\";\nimport {Button, Divider, Modal, Table, Tooltip,} from \"antd\";\n\nimport {tool} from \"../tools/tools\";\nimport {connect} from \"react-redux\";\nimport ExportJsonExcel from 'js-export-excel';\nimport * as XL from 'xlsx';\nimport ClockCircleOutlined from \"@ant-design/icons/lib/icons/ClockCircleOutlined\";\nimport LoadingOutlined from \"@ant-design/icons/lib/icons/LoadingOutlined\";\nimport CheckCircleOutlined from \"@ant-design/icons/lib/icons/CheckCircleOutlined\";\nimport CloseCircleOutlined from \"@ant-design/icons/lib/icons/CloseCircleOutlined\";\n\n\n// 批量数据创建\nclass CreateBatchTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.count = null;\n        this.count_error = null;\n        this.ok = true;\n    }\n\n    onImportExcel(file) {\n        // 得到创建列信息\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreateBatch',]);\n\n\n        // 更新状态\n        let updateState = data => {\n\n            // 制作映射表 help字段映射为key\n            let mapping = {};\n            let columnsCreate = tool.getStateSpace(columnsCreatePath);\n            for (let columnKey in columnsCreate) {\n                if (!columnsCreate.hasOwnProperty(columnKey)) continue;\n                let column = columnsCreate[columnKey];\n                mapping[column.title] = columnKey;\n            }\n\n            // 转换数据\n            let mapData = [];\n            for (let line of data) {\n                let newLine = {};\n                for (let key in line) {\n                    if (!line.hasOwnProperty(key)) continue;\n                    if (!mapping[key]) continue;\n                    newLine[mapping[key]] = line[key];\n                    newLine['info__state'] = 'wait';\n                }\n                mapData.push(newLine);\n            }\n\n\n            // 数据更新到私有空间\n            let spacePrivate = tool.getStateSpace(spacePrivatePath);\n            spacePrivate = Object.assign({}, spacePrivate, {\n                readData: data,\n                mapData: mapData,\n            });\n            tool.setStateSpace(spacePrivatePath, spacePrivate);\n        };\n\n        // 读取完毕的回调\n        let fileOnload = event => {\n            const {result} = event.target;\n            const workbook = XL.read(result, {type: 'binary'});\n            let data = [];\n            for (const sheet in workbook.Sheets) {\n                if (!workbook.Sheets.hasOwnProperty(sheet)) continue;\n                data = data.concat(XL.utils.sheet_to_json(workbook.Sheets[sheet]));\n                break;\n            }\n            updateState(data);\n        };\n\n        // 读取文件\n        const {files} = file.target;\n        const fileReader = new FileReader();\n        fileReader.onload = event => {\n            try {\n                fileOnload(event);\n            } catch (e) {\n                tool.show_info('表格文件读取失败了!');\n                return null;\n            }\n        };\n        fileReader.readAsBinaryString(files[0]);\n    }\n\n    // Excel模板下载\n    getDownloadExcelReact() {\n\n        // 得到列\n        let getData = () => {\n            // 得到创建列信息\n            let infoModalPath = ['infoModal'];\n            let infoModal = tool.getStateSpace(infoModalPath);\n            let paramModal = tool.getAttribute(infoModal, 'paramModal');\n            let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n            let columnsCreatePath = spacePublicPath.concat(['columnsCreateBatch',]);\n            let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n\n            if (!columnsCreate) {\n                tool.show_info('当前数据不支持批量创建!');\n                return null;\n            }\n\n            let line = [];\n            let lines = [line];\n            for (let columnKey in columnsCreate) {\n                if (!columnsCreate.hasOwnProperty(columnKey)) continue;\n                let columnCreate = columnsCreate[columnKey];\n                line.push(columnCreate.title);\n            }\n\n            return lines;\n        };\n\n        let onClick = () => {\n            let sheetData = getData();\n\n            let columnWidths = [];\n            for (let i = 0; i < sheetData[0].length; i++) columnWidths.push(10);\n\n            let option = {\n                fileName: '下载模板',\n                datas: [{\n                    sheetData: sheetData,\n                    columnWidths: columnWidths,\n                }],\n            };\n            let excel_obj = new ExportJsonExcel(option);\n            excel_obj.saveExcel();\n            tool.show_info('已启动下载!');\n        };\n\n        return <Button onClick={onClick}>下载Excel模板</Button>;\n    }\n\n    // Excel数据提交\n    getSubmitExcelReact() {\n        return <input type='file' accept='.xlsx, .xls' onChange={this.onImportExcel}/>;\n        // return <Button>提交Excel数据</Button>;\n    }\n\n    // 读取到数据展示\n    getDataReact() {\n        // 得到创建列信息\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreateBatch',]);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n\n        // 数据更新到私有空间\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let readData = tool.getAttribute(spacePrivate, ['readData',]);\n        if (!readData) readData = [];\n        let mapData = tool.getAttribute(spacePrivate, ['mapData',]);\n        if (!mapData) mapData = [];\n        // console.log('数据readData', readData, spacePrivate);\n\n        // {系统帐号: \"xiaoming250\", 名字: \"小明250\", 登录密码: \"xiaoming250\", __rowNum__: 1}\n\n        let dataSource = [];\n\n        let i = 0;\n        for (let line of mapData) {\n            i++;\n            line = Object.assign({}, line, {\n                key: i,\n            });\n            dataSource.push(line);\n        }\n\n\n        let columns = [];\n        for (let columnKey in columnsCreate) {\n            if (!columnsCreate.hasOwnProperty(columnKey)) continue;\n            let column = columnsCreate[columnKey];\n            columns.push({\n                title: column.title,\n                dataIndex: columnKey,\n                key: columnKey,\n            });\n\n        }\n        columns.push({\n            title: '上传状态',\n            // dataIndex: ,\n            key: 'uploadState',\n            render: (record) => {\n                let info__state = record.info__state;\n                let info__param = info__state.param;\n                if (info__param) info__state = info__state.info__state;\n\n                if (info__state === 'wait') return <ClockCircleOutlined/>;\n                if (info__state === 'upload') return <LoadingOutlined/>;\n                if (info__state === 'success') return <CheckCircleOutlined/>;\n                if (info__state === 'error') {\n                    let info = null;\n                    let info_show = '';\n                    let res_json = info__param['responseJSON'];\n\n                    if (res_json) {\n                        if (typeof (res_json) === 'string') {\n                            info = {'info': res_json};\n                        } else {\n                            info = Object.assign({}, res_json);\n                        }\n\n                        Object.keys(info).map(key => {\n                            // let temp = `${key}:${info[key]}    `;\n                            let temp = `${info[key]}    `;\n                            if (temp.length > 200) temp = '未知异常';\n                            info_show += temp;\n                            return null;\n                        });\n                    } else {\n                        let info_show = '操作失败[' + info__param.responseText + ']';\n                        if (info_show.length > 200) info_show = '未知异常';\n                    }\n\n\n                    return <Tooltip title={info_show}>\n                        <CloseCircleOutlined/>\n                    </Tooltip>;\n                }\n                return '未知错误';\n            },\n        });\n\n        return <Table\n            dataSource={dataSource}\n            columns={columns}\n            pagination={false}\n        />\n    }\n\n    getContent() {\n        let downloadExcel = this.getDownloadExcelReact();\n        let submitExcel = this.getSubmitExcelReact();\n        let dataReact = this.getDataReact();\n\n        return (<div>\n            {downloadExcel}\n            <Divider/>\n            {submitExcel}\n            <Divider/>\n            {dataReact}\n        </div>);\n    }\n\n    onCancel() {\n        //关闭对话框/清空数据\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        infoModal = Object.assign({}, infoModal, {\n            nowType: null,\n            paramModal: null,\n        });\n\n        tool.setStateSpace(infoModalPath, infoModal,);\n    }\n\n    onOk() {\n        if (!this.ok) {\n            tool.show_info('你不要点这么快,数据还没提交完呢.');\n            return null;\n        }\n        // 得到创建列信息\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let fatherRecord = tool.getAttribute(paramModal, 'fatherRecord');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n\n        let requestPathPath = spacePublicPath.concat(['path']);\n        let requestPath = tool.getStateSpace(requestPathPath);\n\n\n        // 数据更新到私有空间\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let mapDataPath = spacePrivatePath.concat(['mapData',]);\n        let mapData = tool.getAttribute(spacePrivate, ['mapData',]);\n        if (!mapData) mapData = [];\n\n\n        // 获取get参数\n        let paramUrl = {};\n        if (fatherRecord) paramUrl['father_id'] = fatherRecord.id;\n\n        let url = tool.get_url(requestPath, false, paramUrl);\n\n        // 请求成功或失败都要计数,如果达到条件去做一些事\n        let makeCount = () => {\n            this.count += 1;\n            if (this.count >= this.total) {\n                setTimeout(() => {\n                    this.ok = true;\n                    tool.show_success('所有的数据都已经创建完毕了');\n                    if (this.count_error !== 0) {\n                        tool.show_info(`其中有${this.count_error}条数据创建失败`);\n                    }\n\n                    // 准备刷新页面\n                    tool.show_success('准备刷新页面');\n                    let spacePrivate = tool.getStateSpace(spacePrivatePath);\n                    spacePrivate = Object.assign({}, spacePrivate, {\n                        stateTableOnload: 'page',\n                    });\n                    tool.setStateSpace(spacePrivatePath, spacePrivate);\n\n\n                }, 3000);\n            }\n        };\n\n        let reg = line => {\n            let newLine = {};\n            for (let key in line) {\n                if (!line.hasOwnProperty(key)) continue;\n                if (key !== 'info__state') newLine[key] = line[key];\n            }\n\n            line.info__state = 'upload';\n            let mapData = tool.getStateSpace(mapDataPath);\n            tool.setStateSpace(mapDataPath, mapData);\n            let requestParam = {\n                url: url,\n                data: newLine,\n                success: data => {\n                    makeCount();\n                    tool.show_success([`第${this.count}条数据创建成功`]);\n                    line.info__state = 'success';\n                    let mapData = tool.getStateSpace(mapDataPath);\n                    tool.setStateSpace(mapDataPath, mapData);\n                },\n                error: data => {\n                    makeCount();\n                    this.count_error += 1;\n                    tool.show_info(`第${this.count}条数据创建失败`);\n                    tool.show_error(data);\n                    line.info__state = {\n                        info__state: 'error',\n                        param: data,\n                    };\n                    let mapData = tool.getStateSpace(mapDataPath);\n                    tool.setStateSpace(mapDataPath, mapData);\n                },\n            };\n            tool.post(requestParam);\n        };\n        let t = 0;\n        this.count = 0;\n        this.count_error = 0;\n        this.total = 0;\n        this.ok = false;\n        for (let line of mapData) {\n            let info__state = line.info__state;\n            let param = info__state.param;\n            if (param) info__state = info__state.info__state;\n\n            if (info__state === 'success') continue;\n            setTimeout(() => reg(line), t);\n            t += 500;\n            this.total += 1;\n        }\n        if (this.total === 0) {\n            this.ok = true;\n            tool.show_info('没有需要提交的数据,请检查数据');\n        }\n\n    }\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'CreateBatch') return null;\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsCreateBatchPath = spacePublicPath.concat(['columnsCreateBatch']);\n        let columnsCreateBatch = tool.getStateSpace(columnsCreateBatchPath);\n        if (!columnsCreateBatch) return null;\n\n        let textTitlePath = spacePublicPath.concat(['text__create_batch-title']);\n        let textTitle = tool.getStateSpace(textTitlePath);\n        if (!textTitle) textTitle = '数据批量创建';\n\n        let content = this.getContent();\n\n        return (\n\n            <div>\n                <Modal\n                    title={textTitle}\n                    open={true}\n                    visible={true}\n                    okText={'提交'}\n                    cancelText={'关闭'}\n                    onOk={() => this.onOk()}\n                    onCancel={() => this.onCancel()}\n                >\n                    {content}\n                </Modal>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToCreate(state) {\n    return {\n        infoModal: state.infoModal,\n        setting: state.setting,\n    }\n}\n\nCreateBatchTable = connect(mapStateToCreate)(CreateBatchTable);\n\nexport {CreateBatchTable};\n","import React from \"react\";\nimport {Modal, Divider, Button, Radio, Popconfirm, Select, Input} from \"antd\";\n\nimport {tool} from \"../tools/tools\";\nimport {connect} from \"react-redux\";\nimport {DeleteOutlined, ToolOutlined} from \"@ant-design/icons\";\n\n\n//数据详情\nclass DetailLine extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getFieldReact = this.getFieldReact.bind(this);\n        this.getFieldType = this.getFieldType.bind(this);\n        this.getContent = this.getContent.bind(this);\n        this.onCancel = this.onCancel.bind(this);\n        this.getColumnsUpdate = this.getColumnsUpdate.bind(this);\n    }\n\n    updateData() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'Detail') return null;\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let detailOnload = tool.getAttribute(paramModal, 'detailOnload');\n        let record = tool.getAttribute(paramModal, 'record');\n        let fatherRecord = tool.getAttribute(paramModal, 'fatherRecord');\n        let recordId = record.id;\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n        let filter = tool.getAttribute(spacePrivate, 'filterValue');\n        if (!filter) {\n            filter = tool.getAttribute(spacePublic, ['filters', 'default',])\n        }\n\n        let requestPathPath = spacePublicPath.concat(['path']);\n        let requestPath = tool.getStateSpace(requestPathPath);\n        if (!detailOnload) return null;\n        let startUpdate = () => {\n\n            //请求数据\n            let paramUrl = {};\n            if (fatherRecord) paramUrl['father_id'] = fatherRecord.id;\n            if (filter) paramUrl['filter'] = filter;\n\n\n            let url = tool.get_url(requestPath, false, paramUrl, recordId);\n            let requestParam = {\n                url: url,\n                success: data => {\n                    //更新数据到Modal参数区的特定区域\n                    let dataKey = `detail__${recordId}`;\n                    let paramModalPath = ['infoModal', 'paramModal',];\n                    // paramModal = tool.getStateSpace(paramModalPath);\n                    paramModal = Object.assign({}, paramModal, {\n                        detailOnload: false,\n                    });\n                    paramModal[dataKey] = data;\n                    tool.setStateSpace(paramModalPath, paramModal);\n                },\n                error: data => {\n                    tool.show_error(data);\n                },\n            };\n            tool.get(requestParam);\n\n        };\n        setTimeout(startUpdate, 100);\n    }\n\n    getFieldType(param) {\n        let columnKey = param.columnKey;\n        let data = param.data ? param.data : {};\n        let columnsDetailLine = param.columnsDetailLine;\n        let columnInfo = columnsDetailLine[columnKey];\n\n        //字段类型\n        let fieldType = columnInfo.type;\n        if (fieldType) return fieldType;\n\n        //根据数据进行推定\n        if (data) {\n            let isHelpArray = () => {\n                let isArray = Array.isArray(data);\n                if (!isArray) return false;\n\n                if (data.length < 1) return 'emptyArray';\n\n                let first = data[0];\n                if (!first) return false;\n                if (first.id && first.help) return 'helpArray';\n\n                return false;\n\n            };\n            let type = isHelpArray();\n            if (type) fieldType = type;\n        }\n\n        if (!fieldType) fieldType = 'char';\n        return fieldType;\n    }\n\n    getFieldReact(param) {\n        let columnKey = param.columnKey;\n\n        //字段类型\n        let fieldType = this.getFieldType(param);\n        let fieldMapping = tool.getStateSpace(['setting', 'fieldDetailMapping',]);\n        let func = tool.getAttribute(fieldMapping, fieldType);\n        if (!func) func = tool.getAttribute(fieldMapping, 'char');\n\n        return (\n            <div key={columnKey}>\n                {func(param)}\n                <Divider/>\n            </div>\n        );\n    }\n\n    getColumnsUpdate() {\n        let infoModal = tool.getAttribute(this, ['props', 'infoModal',]);\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n        //更新字段\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate',]);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n\n        // 是否使用过滤器的字段\n        let filterValue = tool.getAttribute(spacePrivate, 'filterValue');\n        if (!filterValue) {\n            filterValue = tool.getAttribute(spacePublic, ['filters', 'default',])\n        }\n        let filtersInfo = tool.getAttribute(spacePublic, 'filters');\n        let filtersChoices = tool.getAttribute(filtersInfo, 'choices');\n        let filterNow = tool.getAttribute(filtersChoices, filterValue);\n        let filterColumnsUpdate = tool.getAttribute(filterNow, 'columnsUpdate');\n        if (filterValue && filtersInfo && filtersChoices && filterNow && filterColumnsUpdate) {\n            columnsUpdate = filterColumnsUpdate;\n        }\n        return columnsUpdate;\n    }\n\n    // 字段附加\n    getReactFieldAppend(columnPath) {\n        // return 'xx'\n        let react = null;\n        let typePath = columnPath.concat(['type',]);\n        let type = tool.getStateSpace(typePath, 'char');\n\n        // 布尔类型\n        if (type === 'bool') {\n            let textBoolPath = columnPath.concat(['textBool',]);\n            let textBool = tool.getStateSpace(textBoolPath, ['真值', '假值',]);\n            react = <div\n                style={{\n                    width: '185px',\n                    overflow: 'auto',\n                }}\n            >\n                <table style={{\n                    textAlign: 'left',\n                }}>\n                    <thead>\n\n                    {/*第1行 真值映射*/}\n                    <tr>\n                        <th>\n                            真值映射:\n                        </th>\n                        <th>\n                            <div>\n                                <input\n                                    style={{width: '100px',}}\n                                    onChange={event => {\n                                        tool.setStateSpace(textBoolPath, [\n                                            event.target.value,\n                                            textBool[1],\n                                        ]);\n                                    }}\n                                    value={textBool[0]}\n                                />\n                            </div>\n                        </th>\n                    </tr>\n\n                    {/*第2行 假值映射*/}\n                    <tr>\n                        <th>\n                            假值映射:\n                        </th>\n                        <th>\n                            <div>\n                                <input\n                                    style={{width: '100px',}}\n                                    onChange={event => {\n                                        tool.setStateSpace(textBoolPath, [\n                                            textBool[0],\n                                            event.target.value,\n                                        ]);\n                                    }}\n                                    value={textBool[1]}\n                                />\n                            </div>\n                        </th>\n                    </tr>\n\n                    </thead>\n                </table>\n            </div>\n        }\n\n        // 映射类型\n        if (type === 'map') {\n\n            let mapPath = columnPath.concat(['map',]);\n            let map = tool.getStateSpace(mapPath, {});\n\n            let lines = [];\n\n            // 列表\n            for (const mapKey in map) {\n                let value = map[mapKey];\n                lines.push(\n                    <tr key={mapKey}>\n                        {/*key*/}\n                        <th>\n                            <input\n                                onBlur={event => {\n                                    let value = event.target.value;\n                                    let newMap = {};\n                                    for (const _key in map) {\n                                        let userKey = _key;\n                                        if (_key === mapKey) userKey = value;\n                                        newMap[userKey] = map[_key];\n                                    }\n                                    tool.setStateSpace(mapPath, newMap);\n                                }}\n                                style={{width: '40px',}}\n                                // value={mapKey}\n                                defaultValue={mapKey}\n                            />\n                        </th>\n\n                        {/*箭头*/}\n                        <th>\n                            --->\n                        </th>\n\n                        {/*value*/}\n                        <th>\n                            <input\n                                onBlur={event => {\n                                    let value = event.target.value;\n                                    let newMap = {};\n                                    for (const _key in map) {\n                                        let userValue = map[_key];\n                                        if (_key === mapKey) userValue = value;\n                                        newMap[_key] = userValue;\n                                    }\n                                    tool.setStateSpace(mapPath, newMap);\n                                }}\n                                style={{width: '80px',}}\n                                // value={value}\n                                defaultValue={value}\n                            />\n                        </th>\n\n                        {/*删除*/}\n                        <th>\n                            <Popconfirm\n                                title=\"确定删除吗?\"\n                                description=\"确定删除吗?\"\n                                onConfirm={() => {\n                                    let newMap = {};\n                                    for (const _key in map) {\n                                        if (_key !== mapKey) newMap[_key] = map[_key];\n                                    }\n                                    tool.setStateSpace(mapPath, newMap);\n                                }}\n                                onCancel={() => {\n                                }}\n                                okText=\"删除\"\n                                cancelText=\"不要\"\n                            >\n                                <DeleteOutlined style={{color: 'red', marginLeft: '5px',}}/>\n                            </Popconfirm>\n\n                        </th>\n\n                    </tr>\n                );\n\n            }\n\n            // 增加映射\n            lines.push(<div key={'create'} style={{width: '180px',}}>\n                <button\n                    onClick={() => {\n                        let newMap = Object.assign({}, map,);\n                        let random = Math.random() * 100000;\n                        random = Math.floor(random);\n                        newMap[`key_${random}`] = '新映射';\n                        tool.setStateSpace(mapPath, newMap);\n                    }}\n                    style={{width: '100%',}}\n                >增加映射\n                </button>\n            </div>)\n\n\n            react = <div\n                style={{\n                    width: '185px',\n                    overflow: 'auto',\n                    // border:'red 1px solid',\n                }}\n            >\n                <table style={{\n                    textAlign: 'left',\n                }}>\n                    <thead>\n\n                    {/*第1行 真值映射*/}\n                    <tr>\n                        <th>\n                            {/*真值映射:*/}\n                        </th>\n                        <th>\n                            {lines}\n                        </th>\n                    </tr>\n\n\n                    </thead>\n                </table>\n            </div>\n        }\n\n        // 渲染类型\n        if (type === 'render') {\n\n            let renderPath = columnPath.concat(['render',]);\n            let defaultFunc = '(value, param)=>{return \"返回值\";}';\n            let render = tool.getStateSpace(renderPath, defaultFunc);\n\n            let errorInfo = '';\n            try {\n                // eslint-disable-next-line no-eval\n                let func = eval(`(${render})`);\n                if (typeof func !== 'function') {\n                    errorInfo = '字符串无法识别为函数';\n                }\n            } catch (error) {\n                errorInfo = '语法错误';\n            }\n\n            react = <div\n                style={{\n                    width: '185px',\n                    overflow: 'auto',\n                }}\n            >\n                <table style={{\n                    textAlign: 'left',\n                }}>\n                    <thead>\n                    {/*第1行 真值映射*/}\n                    <tr>\n                        <th>\n                            <Input.TextArea\n                                value={render}\n                                onChange={event => {\n                                    let value = event.target.value;\n                                    tool.setStateSpace(renderPath, value);\n                                }}\n                                row={10}\n                            />\n                            <button\n                                style={{width: '100%',}}\n                                onClick={() => {\n                                    let string = '(value, param)=>{return \"返回值(演示)\";}';\n                                    let func;\n                                    try {\n                                        // eslint-disable-next-line no-eval\n                                        func = eval(`(${render})`);\n                                    } catch (error) {\n                                    }\n                                    if (func) tool.setStateSpace(renderPath, func);\n                                    if (!func) tool.setStateSpace(renderPath, string);\n                                }}\n                            >快速输入\n                            </button>\n                            <div style={{color: 'red',}}>\n                                {errorInfo}\n                            </div>\n                            <div style={{color: 'grey', fontSize: '80%',}}>\n                                本功能存在<span style={{color: 'red',}}>注入攻击</span>的风险, 请在开发完成后及时关闭开发模式.<br/>\n                                提示:在IDE中写好代码然后直接粘贴.<br/>\n                            </div>\n                        </th>\n                    </tr>\n\n\n                    </thead>\n                </table>\n            </div>\n        }\n\n        return react;\n    }\n\n    getSetDetail() {\n        let infoModalPath = ['props', 'infoModal',];\n        let infoModal = tool.getAttribute(this, infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        // let spacePublic = tool.getStateSpace(spacePublicPath);\n        let spaceDetailPath = spacePublicPath.concat(['columnsDetailLine']);\n        let spaceDetail = tool.getStateSpace(spaceDetailPath);\n\n        // 字段位置移动\n        const moveDetailPos = (columnKey, direction = -1) => {\n            // direction=-1 上移 direction=1 下移\n            let columns = tool.getStateSpace(spaceDetailPath);\n            let columnsArray = Object.keys(columns);\n            let index = columnsArray.indexOf(columnKey);\n\n            let indexTarget = index + direction;\n            if (indexTarget < 0) {\n                tool.show_info('已经在最顶部.');\n                return;\n            }\n            if (indexTarget > columnsArray.length - 1) {\n                tool.show_info('已经在最底部.');\n                return;\n            }\n\n\n            let temp = columnsArray[indexTarget];\n            columnsArray[indexTarget] = columnsArray[index];\n            columnsArray[index] = temp;\n            let newColumns = {};\n            for (const _columnKey of columnsArray) newColumns[_columnKey] = columns[_columnKey];\n            tool.setStateSpace(spaceDetailPath, newColumns);\n        };\n\n        // 编辑组件\n        let reactColumns = [];\n\n        // 字段列表\n        for (const columnKey in spaceDetail) {\n            let column = spaceDetail[columnKey];\n            if (column === true || !column) continue;\n            let columnPath = spaceDetailPath.concat([columnKey]);\n\n            let typePath = columnPath.concat(['type',]);\n            let type = tool.getStateSpace(typePath, 'char');\n\n\n            // 是否隐藏\n            let hidden = tool.getAttribute(column, 'hidden',);\n\n            // 字段附加\n            let reactFieldAppend = this.getReactFieldAppend(columnPath);\n            let border = reactFieldAppend ? '#BEBEBE 1px solid' : '';\n            // let border = '';\n\n            reactColumns.push(<div\n                key={columnKey}\n            >\n\n                {/*分割线*/}\n                <Divider>字段名:{column.title}</Divider>\n\n                {/*删除字段*/}\n                <div style={{float: 'right',}}>\n                    <Popconfirm\n                        title=\"删除这个字段吗?\"\n                        description=\"删除这个字段吗?\"\n                        onConfirm={() => {\n                            let newSpaceDetail = {};\n                            let spaceDetail = tool.getStateSpace(spaceDetailPath);\n                            for (const _columnKey in spaceDetail) {\n                                if (_columnKey === columnKey) continue;\n                                newSpaceDetail[_columnKey] = spaceDetail[_columnKey];\n                            }\n                            tool.setStateSpace(spaceDetailPath, newSpaceDetail);\n                        }}\n                        onCancel={() => tool.show_info('已取消')}\n                        okText=\"删除\"\n                        cancelText=\"不要\"\n                    >\n                        <DeleteOutlined style={{color: 'red',}}/>\n                    </Popconfirm>\n                </div>\n\n                {/*列表*/}\n                <table style={{textAlign: 'left',}}>\n                    <thead>\n\n                    {/*第1行 是否显示*/}\n                    <tr>\n                        <th>是否显示:</th>\n                        <th><Radio.Group\n                            onChange={event => {\n                                tool.setStateSpace(\n                                    columnPath,\n                                    Object.assign(column, {hidden: event.target.value,}));\n                            }}\n                            value={hidden}\n                            style={{\n                                marginLeft: '10px',\n                            }}\n                        >\n                            <Radio value={false}>显示</Radio>\n                            <Radio value={true}>隐藏</Radio>\n                        </Radio.Group></th>\n                    </tr>\n\n                    {/*第2行 修改字段名*/}\n                    <tr>\n                        <th>\n                            修改字段名:\n                        </th>\n                        <th>\n\n                            <input\n                                value={column.title}\n                                onChange={event => {\n                                    tool.setStateSpace(\n                                        columnPath,\n                                        Object.assign(column, {title: event.target.value,}));\n                                }}\n                            />\n                        </th>\n                    </tr>\n\n                    {/*第3行 字段类型*/}\n                    <tr style={{border: border,}}>\n                        <th>\n                            字段类型:\n                        </th>\n                        <th>\n                            <div>\n                                <Select\n                                    style={{width: '100%',}}\n                                    // defaultValue={type}\n                                    value={type}\n                                    onChange={value => {\n                                        tool.setStateSpace(\n                                            columnPath,\n                                            Object.assign(column, {type: value,}));\n                                    }}\n                                    options={[\n                                        {\n                                            value: 'char',\n                                            label: '字符串',\n                                        },\n                                        {\n                                            value: 'money',\n                                            label: '人民币',\n                                        },\n                                        {\n                                            value: 'map',\n                                            label: '映射类型',\n                                        },\n                                        {\n                                            value: 'render',\n                                            label: '渲染类型',\n                                        },\n                                        {\n                                            value: 'chinaTime',\n                                            label: '时间类型(中国)',\n                                        },\n                                        {\n                                            value: 'yearTime',\n                                            label: '时间类型(年份)',\n                                        },\n                                        {\n                                            value: 'utcTime',\n                                            label: '时间类型(UTC)',\n                                        },\n                                        {\n                                            value: 'helpArray',\n                                            label: 'help数组',\n                                        },\n                                        {\n                                            value: 'bool',\n                                            label: '布尔类型',\n                                        },\n                                        {\n                                            value: 'imgPath',\n                                            label: '图片类型(路径)',\n                                        },\n                                        {\n                                            value: 'imgShow',\n                                            label: '图片类型(展示)',\n                                        },\n                                        {\n                                            value: 'imgHead',\n                                            label: '图片类型(头像)',\n                                        },\n                                        {\n                                            value: 'label',\n                                            label: '标签类型',\n                                        },\n                                        {\n                                            value: 'labelHelp',\n                                            label: '标签类型(帮助)',\n                                        },\n                                        {\n                                            value: 'dynamic',\n                                            label: '动态类型',\n                                        },\n                                        {\n                                            value: 'file',\n                                            label: '文件类型',\n                                        },\n                                        {\n                                            value: 'userInfo',\n                                            label: '用户信息类型',\n                                        },\n                                    ]}\n                                />\n                                <div style={{width: '100%',}}>\n                                    {reactFieldAppend}\n                                </div>\n\n                            </div>\n                        </th>\n                    </tr>\n\n                    {/*第4行 映射字段*/}\n                    <tr>\n                        <th>\n                            修改映射字段:\n                        </th>\n                        <th>\n\n                            <input\n                                defaultValue={columnKey}\n                                // value={columnKey}\n                                onBlur={event => {\n                                    let newColumns = {};\n                                    for (const _columnKey in spaceDetail) {\n                                        let useKey = _columnKey;\n                                        if (_columnKey === columnKey) useKey = event.target.value;\n                                        newColumns[useKey] = spaceDetail[_columnKey];\n                                    }\n                                    tool.setStateSpace(spaceDetailPath, newColumns);\n                                }}\n                            />\n                        </th>\n                    </tr>\n\n                    {/*第6行 位置*/}\n                    <tr>\n                        <th>\n                            位置:\n                        </th>\n                        <th>\n                            <Button\n                                onClick={() => moveDetailPos(columnKey, -1)}\n                                style={{width: '50%',}}>上移</Button>\n                            <Button\n                                onClick={() => moveDetailPos(columnKey, 1)}\n                                style={{width: '50%',}}>下移</Button>\n                        </th>\n                    </tr>\n\n                    </thead>\n                </table>\n\n\n            </div>);\n        }\n\n        // 增加字段\n        reactColumns.push(<div key={'create_field'} style={{width: '100%',}}>\n            <Divider/>\n            <Button\n                onClick={() => {\n                    let columns = tool.getStateSpace(spaceDetailPath);\n                    let newData = {};\n                    let random = Math.random() * 100000;\n                    random = Math.floor(random);\n                    newData[`field_${random}`] = {title: '新字段',};\n                    let newColumns = Object.assign(columns, newData);\n                    tool.setStateSpace(spaceDetailPath, newColumns);\n                }}\n                style={{width: '100%',}}>增加字段</Button>\n            <Divider/>\n        </div>);\n\n\n        let reacts = [];\n        reacts.push(<div key={'x'}>\n            <Divider>编辑字段</Divider>\n        </div>)\n\n        // 详情设置\n        let isSetDetailColShowPath = spacePrivatePath.concat(['isSetDetailColShow']);\n        let isSetDetailColShow = tool.getStateSpace(isSetDetailColShowPath, false);\n\n\n        let content = <Modal\n            visible={isSetDetailColShow}\n            open={isSetDetailColShow}\n            onCancel={() => tool.setStateSpace(isSetDetailColShowPath, false,)}\n            footer={null}\n        >\n            <br/><br/>\n            {reacts}\n            {reactColumns}\n        </Modal>\n\n        let react;\n        react = <div key={'x'}>\n            {content}\n            {/*<Button*/}\n            {/*    onClick={() => tool.setStateSpace(isSetDetailColShowPath, true,)}*/}\n            {/*    style={{width: '100%',}}*/}\n            {/*><ToolOutlined/>编辑</Button>*/}\n        </div>;\n        return react;\n    }\n\n    getContent() {\n        let infoModalPath = ['props', 'infoModal',];\n        let infoModal = tool.getAttribute(this, infoModalPath);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'Detail') return null;\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let onload = tool.getAttribute(paramModal, 'onload');\n        let record = tool.getAttribute(paramModal, 'record');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n        let spaceRowPath = tool.getAttribute(paramModal, 'spaceRowPath');\n\n        //显示字段\n        // let columnsDetailLinePath = spacePublicPath.concat(['columnsDetailLine',]);\n        // let columnsDetailLine = tool.getStateSpace(columnsDetailLinePath);\n\n        let columnsDetailLine = tool.getAttribute(spacePublic, 'columnsDetailLine');\n\n        // 是否使用过滤器的字段\n        let filterValue = tool.getAttribute(spacePrivate, 'filterValue');\n        if (!filterValue) {\n            filterValue = tool.getAttribute(spacePublic, ['filters', 'default',])\n        }\n        let filtersInfo = tool.getAttribute(spacePublic, 'filters');\n        let filtersChoices = tool.getAttribute(filtersInfo, 'choices');\n        let filterNow = tool.getAttribute(filtersChoices, filterValue);\n        let filterColumnsDetailLine = tool.getAttribute(filterNow, 'columnsDetailLine');\n        if (filterValue && filtersInfo && filtersChoices && filterNow && filterColumnsDetailLine) {\n            columnsDetailLine = filterColumnsDetailLine;\n        }\n\n\n        if (!columnsDetailLine) return null;\n\n        let fieldReacts = [];\n        fieldReacts.push(<div key={'x'}>\n            {this.getSetDetail()}\n        </div>);\n        for (let columnKey in columnsDetailLine) {\n            //得到具体的字段\n            if (!columnsDetailLine.hasOwnProperty(columnKey)) continue;\n\n            // 是否显示这个字段\n            let state = true;\n            let columnDetailLine = columnsDetailLine[columnKey];\n            let fun_is_show = tool.getAttribute(columnDetailLine, 'is_show');\n\n            // 是否隐藏这个字段\n            let hidden = tool.getAttribute(columnDetailLine, 'hidden');\n            // console.log('hid----', columnDetailLine['title'], hidden)\n            if (hidden) continue;\n\n            if (fun_is_show) {\n                let param = {infoModalPath: infoModalPath, infoModal: infoModal,};\n                state = fun_is_show(param);\n            }\n\n            if (state) {\n                fieldReacts.push(this.getFieldReact({\n                    infoModal: infoModal,\n                    paramModal: paramModal,\n                    onload: onload,\n                    record: record,\n                    spacePrivatePath: spacePrivatePath,\n                    spacePublicPath: spacePublicPath,\n                    spaceRowPath: spaceRowPath,\n\n                    columnsDetailLine: columnsDetailLine,\n                    columnKey: columnKey, // 详情列提交时的key\n                    action: 'detail',\n                }));\n            }\n        }\n\n        return fieldReacts;\n    }\n\n    onOk() {\n        //左键触发检测程序允许正常运行\n        tool.rightInfo = Object.assign({}, tool.rightInfo, {\n            sign: false,\n        },);\n\n        //关闭对话框/清空数据\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        infoModal = Object.assign({}, infoModal, {\n            nowType: 'Update',\n        });\n\n        tool.setStateSpace(infoModalPath, infoModal,);\n    }\n\n    onCancel() {\n        //左键触发检测程序允许正常运行\n        tool.rightInfo = Object.assign({}, tool.rightInfo, {\n            sign: false,\n        },);\n\n        //关闭对话框/清空数据\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        infoModal = Object.assign({}, infoModal, {\n            nowType: null,\n            paramModal: null,\n        });\n\n        tool.setStateSpace(infoModalPath, infoModal,);\n    }\n\n    render() {\n        this.updateData();\n        let infoModal = tool.getAttribute(this, ['props', 'infoModal',]);\n        let nowType = tool.getAttribute(infoModal, 'nowType');\n        if (nowType !== 'Detail') return null;\n\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let detailOnload = tool.getAttribute(paramModal, 'detailOnload');\n        if (detailOnload) return '加载中...';\n\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n\n        let content = this.getContent();\n\n        let textTitlePath = spacePublicPath.concat(['text__detail_title']);\n        let textTitle = tool.getStateSpace(textTitlePath);\n        if (!textTitle) textTitle = '数据详情';\n\n        // 是否允许编辑\n        let columnsUpdate = this.getColumnsUpdate();\n        let okText = '好的';\n        let onOk = () => this.onCancel();\n        if (columnsUpdate) {\n            okText = '切换到编辑模式';\n            onOk = () => this.onOk();\n        }\n        return (\n            <div>\n                <Modal\n                    title={textTitle}\n                    open={true}\n                    visible={true}\n                    okText={okText}\n                    cancelText={'关闭'}\n                    onOk={onOk}\n                    onCancel={() => this.onCancel()}\n                    // footer={null}\n                >\n                    {content}\n                </Modal>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToDetail(state) {\n    return {\n        infoModal: state.infoModal,\n        setting: state.setting,\n    }\n}\n\nDetailLine = connect(mapStateToDetail)(DetailLine);\n\nexport {DetailLine};","import React from 'react';\nimport {Input, message, Popover} from \"antd\";\nimport {SyncOutlined} from '@ant-design/icons';\n\nimport {connect} from 'react-redux';\nimport ExportJsonExcel from 'js-export-excel';\nimport {tool} from \"../../tools/tools\";\nimport {getColumnRender} from \"../columns/main\";\n\n\n//下载组件\nclass DownloadUnConnected extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.download = this.download.bind(this);\n        this.get_sheet_data = this.get_sheet_data.bind(this);\n        this.data_to_excel = this.data_to_excel.bind(this);\n        this.state = {\n            value: null,\n            down_text: '点击下载',\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps, _) {\n        this.setState(Object.assign({}, this.state, {value: null}));\n    }\n\n    data_to_excel(file_name, sheet_title, sheet_body) {\n\n        let columnWidths = [];\n        for (let i = 0; i < sheet_title.length; i++) columnWidths.push(10);\n\n        let option = {\n            fileName: file_name,\n            datas: [{\n                sheetData: sheet_body,\n                sheetHeader: sheet_title,\n                columnWidths: columnWidths,\n            }]\n        };\n\n        let excel_obj = new ExportJsonExcel(option);\n        excel_obj.saveExcel();\n    }\n\n    get_sheet_data(results) {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n        let columns = tool.getAttribute(spacePublic, 'columns');\n        if (!columns) columns = [];\n\n        let sheet_title = {};\n\n\n        // 得到渲染过的行\n        let sheet_body = results.map(line => {\n            let newLine = {};\n            for (let columnKey in columns) {\n                if (!columns.hasOwnProperty(columnKey)) continue;\n                let column = columns[columnKey];\n                let value = line[columnKey];\n                let type = column.type;\n                if (type === 'imgPath') {\n                    value = value ? '图片类型的数据' : '图片类型空数据';\n                } else {\n                    value = getColumnRender({\n                        value: value,\n                        record: line,\n\n                        spacePublicPath: spacePublicPath,\n                        spacePublic: spacePublic,\n                        columnsInfo: null,\n                        columnInfo: null,\n                        columnKey: columnKey,\n                    });\n                }\n                newLine[column.title] = value;\n                sheet_title[column.title] = null;\n            }\n            return newLine;\n\n        });\n\n\n        //取出列名\n        sheet_title = Object.keys(sheet_title);\n\n        return {\n            sheet_title: sheet_title,\n            sheet_body: sheet_body,\n        }\n    }\n\n    download() {\n        let value = this.state.value;\n\n        //空检测\n        if (!value) {\n            message.warning('输入下载数量!');\n            return null;\n        }\n\n        // 数字检测\n        value = parseFloat(value).toString();\n        if (value === 'NaN') {\n            message.warning('下载量必须是个数字!');\n            return null;\n        }\n\n        // 0检测\n        if (value === '0') {\n            message.warning(`下载量不可以为0`);\n            return null;\n        }\n\n        // 最高下载量检测\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let count = tool.getAttribute(spacePrivate, ['responseData', 'count',]);\n        if (!count) count = 0;\n\n        if (value > count) {\n            message.warning(`最高下载量:${count}条`);\n            return null;\n        }\n\n\n        message.info('请稍后!');\n        this.setState(Object.assign({}, this.state, {down_text: <SyncOutlined spin/>}));\n\n        //准备数据\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n        let path = tool.getAttribute(spacePublic, 'path');\n\n\n        let file_name = `数据下载__${value}条`;\n        // 获取get参数\n        let paramUrl = {\n            page_size: value,\n        };\n        let fatherRecord = tool.getAttribute(this, ['props', 'param', 'fatherRecord',]);\n        if (fatherRecord) paramUrl['father_id'] = fatherRecord.id;\n\n\n        let url = tool.get_url(path, false, paramUrl);\n\n        //请求\n        let args = {\n            url: url,\n            success: data => {\n                let results = data.results;\n                let sheet_data = this.get_sheet_data(results);\n                let sheet_title = sheet_data.sheet_title;\n                let sheet_body = sheet_data.sheet_body;\n\n                this.data_to_excel(file_name, sheet_title, sheet_body);\n                this.setState(Object.assign({}, this.state, {\n                    down_text: '点击下载',\n                }));\n                message.success('下载成功!');\n            },\n            error: data => {\n                tool.show_error(data);\n            }\n        };\n        tool.get(args);\n    }\n\n    render() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n        let disableDownload = tool.getAttribute(spacePublic, 'disableDownload');\n        if (disableDownload) return null;\n\n\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let count = tool.getAttribute(spacePrivate, ['responseData', 'count',]);\n        if (!count) count = 0;\n        let info = `共${count}条数据`;\n\n\n        return (\n            <div style={{display: 'inline-block', verticalAlign: 'super', marginLeft: '5px',}}><Popover content={info}>\n                <Input\n                    addonBefore={\"下载数量\"}\n                    addonAfter={<div\n                        style={{width: '80px', height: '100%',}}\n                        onClick={() => this.download()}\n                    >{this.state.down_text}</div>}\n                    style={{width: '250px',}}\n                    onChange={event => this.setState(Object.assign({}, this.state, {value: event.target.value}))}\n                    placeholder={info}\n                    value={this.state.value}\n                />\n            </Popover></div>);\n    }\n}\n\nfunction state_to_download(state) {\n\n    return {};\n}\n\nfunction download_to_state(_) {\n    return {};\n}\n\nlet Download = connect(state_to_download, download_to_state)(DownloadUnConnected);\n\nexport {Download}\n","import {tool} from \"../../tools/tools\";\nimport {funcMapping} from \"../../../setting\";\n\nfunction render(param) {\n    let value = param.value;\n    if (value === undefined || value === null) {\n        value = null;\n    } else {\n        value = value.toString();\n    }\n    let render = tool.getAttribute(param, ['columnInfo', 'render',]);\n\n    // 是个函数\n    if (typeof render === 'function') {\n        return render(value, param, param.value);\n    }\n\n    // 是字符串映射\n    if (typeof render === 'string' && funcMapping[render]) {\n        render = funcMapping[render];\n        return render(value, param, param.value);\n    }\n\n    // 是字符串eval\n    if (typeof render === 'string') {\n        let string = render;\n\n        let func = () => \"渲染失败[0]\";\n        try {\n            // eslint-disable-next-line no-eval\n            let funcTemp = eval(`(${string})`);\n            if (typeof funcTemp === 'function') func = funcTemp;\n        } catch (error) {\n        }\n\n        return func(value, param, param.value);\n    }\n    return \"渲染失败[1]\";\n}\n\nexport {render};\n\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Modal, Tooltip} from \"antd\";\nimport {tool} from \"../../../tools/tools\";\nimport {QuestionCircleOutlined} from \"@ant-design/icons\";\n\n\n//帮助组件\nclass HelpUnConnected extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getTextInfo = this.getTextInfo.bind(this);\n        this.getStateShowPath = this.getStateShowPath.bind(this);\n    }\n\n    getTextInfo() {\n        return {\n            help: '点击获取帮助',\n            okText: '好的',\n            cancelText: '关闭',\n            textTitle: '帮助信息',\n        }\n    }\n\n    getStateShowPath() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        return spacePublicPath.concat(['stateShow']);\n    }\n\n    getHelp() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let reactHelpPath = spacePublicPath.concat(['help', 'react',]);\n        let reactHelp = tool.getStateSpace(reactHelpPath);\n        if (reactHelp) return reactHelp;\n\n        let textHelpPath = spacePublicPath.concat(['help', 'text',]);\n        let help;\n        help = tool.getStateSpace(textHelpPath);\n        if (typeof help === 'string') help = <div dangerouslySetInnerHTML={{__html: help}}/>;\n        return help;\n    }\n\n    render() {\n        // 是否显示\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let helpHiddenPath = spacePublicPath.concat(['help', 'hidden',]);\n        let helpHidden = tool.getStateSpace(helpHiddenPath);\n        if (helpHidden) return null;\n        let helpPath = spacePublicPath.concat(['help']);\n        let help = tool.getStateSpace(helpPath);\n        if (!help) return null;\n\n        let textInfo = this.getTextInfo();\n        let stateShowPath = this.getStateShowPath();\n        let stateShow = tool.getStateSpace(stateShowPath);\n\n        return <div style={{\n            marginTop: '4px',\n        }}>\n            <Tooltip placement=\"leftTop\" title={textInfo.help}>\n                <QuestionCircleOutlined onClick={() => tool.setStateSpace(this.getStateShowPath(), true)}/>\n            </Tooltip>\n            <Modal\n                title={textInfo.textTitle}\n                open={stateShow}\n                visible={stateShow}\n                okText={textInfo.okText}\n                cancelText={textInfo.cancelText}\n                onOk={\n                    () => tool.setStateSpace(this.getStateShowPath(), false)\n                }\n                onCancel={\n                    () => tool.setStateSpace(this.getStateShowPath(), false)\n                }\n            >\n                {this.getHelp()}\n            </Modal>\n        </div>;\n    }\n}\n\nfunction state_to_help(state) {\n\n    return {};\n}\n\nfunction help_to_state(_) {\n    return {};\n}\n\nlet Help = connect(state_to_help, help_to_state)(HelpUnConnected);\n\nexport {Help}\n","import React from 'react';\nimport {Select, Radio} from \"antd\";\nimport {connect} from 'react-redux';\nimport {tool} from \"../../../tools/tools\";\n\nimport './filters.css';\n\n// 旧过滤器\nclass FilterOldUnConnected extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.getFilters = this.getFilters.bind(this);\n    }\n\n\n    onChange(value) {\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        // let spacePrivate = tool.getStateSpace(spacePrivatePath);\n\n        // 修改静态过滤器的值\n        let filterValuePath = spacePrivatePath.concat(['filterValue']);\n        tool.setStateSpace(filterValuePath, value);\n\n        // 修改更新状态\n        let stateTableOnloadPath = spacePrivatePath.concat(['stateTableOnload']);\n        tool.setStateSpace(stateTableOnloadPath, 'filter');\n\n        // 重新载入字段信息\n    }\n\n\n    getFilters() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n\n        // 过滤器信息\n        let filterSpace = tool.getAttribute(spacePublic, 'filters');\n        if (!filterSpace) return null;\n\n        // 过滤器选项信息\n        let filterChoices = tool.getAttribute(filterSpace, 'choices');\n\n        let Option = Select.Option;\n        let filterChoiceKeys = Object.keys(filterChoices);\n        let options = [];\n        for (let filterChoiceKey of filterChoiceKeys) {\n            let filterInfo = filterChoices[filterChoiceKey];\n            let filterText = tool.getAttribute(filterInfo, 'text');\n            if (!filterText) filterText = '未定义';\n            // console.log('--------', filterInfo)\n            options.push(<Option value={filterChoiceKey} key={filterText}>{filterText}</Option>);\n        }\n\n        // 得到当前的值\n        let filterValue = tool.getAttribute(spacePrivate, 'filterValue');\n        if (!filterValue) {\n            filterValue = tool.getAttribute(spacePublic, ['filters', 'default',])\n        }\n\n        return (<div className={'filters'}>\n            <Select\n                value={filterValue}\n                onChange={value => this.onChange(value)}\n                className={'filters_choices'}\n            >\n                {options}\n            </Select>\n        </div>);\n    }\n\n    render() {\n        return this.getFilters();\n    }\n}\n\nfunction state_to_old(state) {\n\n    return {};\n}\n\nfunction old_to_state(_) {\n    return {};\n}\n\nlet FilterOld = connect(state_to_old, old_to_state)(FilterOldUnConnected);\n\n\n// 行过滤器\nclass FilterRowUnConnected extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.getFilters = this.getFilters.bind(this);\n    }\n\n    onChange(value, filterKey) {\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        // let spacePrivate = tool.getStateSpace(spacePrivatePath);\n\n        // 修改静态过滤器的值\n        let filterValuePath = spacePrivatePath.concat(['params']);\n        let params = tool.getStateSpace(filterValuePath, {});\n        params[filterKey] = value;\n        tool.setStateSpace(filterValuePath, params);\n\n        // 修改更新状态\n        let stateTableOnloadPath = spacePrivatePath.concat(['stateTableOnload']);\n        tool.setStateSpace(stateTableOnloadPath, 'filter');\n    }\n\n    getFilters() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n\n        // 过滤器信息\n        let filtersInfo = {};\n        let sign = 'filter__';\n        const signLength = sign.length;\n        for (const key in spacePublic) {\n            if (!key.startsWith(sign)) continue;\n            let filterInfo = tool.getAttribute(spacePublic, key);\n            let type = tool.getAttribute(filterInfo, 'type');\n            let hidden = tool.getAttribute(filterInfo, 'hidden');\n            if (type !== 'row') continue;\n            if (hidden) continue;\n            filtersInfo[key] = filterInfo;\n        }\n        if (JSON.stringify(filtersInfo) === '{}') return null;\n\n        // 所有列表\n        let reactButtons = [];\n        for (let key in filtersInfo) {\n            const filterKey = key.substring(signLength);\n            let value = filtersInfo[key];\n\n            // 一个列表\n            let reactChoices = [];\n            const choices = tool.getAttribute(value, 'choices', []);\n            for (const choiceKey in choices) {\n                reactChoices.push(<Radio.Button value={choiceKey} key={choiceKey}>\n                    {choices[choiceKey]['text']}\n                </Radio.Button>)\n            }\n\n            // 当前选中\n            let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n            let filterValuePath = spacePrivatePath.concat(['params']);\n            let params = tool.getStateSpace(filterValuePath, {});\n            let valueSelected = params[filterKey];\n            if (valueSelected === undefined) valueSelected = tool.getAttribute(value, 'default', null);\n\n\n            let reactList = <div\n                style={{\n                    marginLeft: '10px',\n                    display: 'inline-block',\n                }}\n                key={key}\n            ><Radio.Group\n                value={valueSelected}\n                onChange={event => this.onChange(event.target.value, filterKey)}\n                key={filterKey}\n            >\n                {reactChoices}\n            </Radio.Group></div>;\n\n            reactButtons.push(reactList);\n        }\n\n        return <div\n            style={{\n                marginLeft: '10px',\n                marginRight: '10px',\n                display: 'inline-block',\n            }}\n        >{reactButtons}</div>;\n    }\n\n    render() {\n        return this.getFilters();\n    }\n}\n\nfunction state_to_row(state) {\n\n    return {};\n}\n\nfunction row_to_state(_) {\n    return {};\n}\n\nlet FilterRow = connect(state_to_row, row_to_state)(FilterRowUnConnected);\n\n\n// 列过滤器\nclass FilterColUnConnected extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.getFilters = this.getFilters.bind(this);\n    }\n\n    onChange(value, filterKey) {\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        // let spacePrivate = tool.getStateSpace(spacePrivatePath);\n\n        // 修改静态过滤器的值\n        let filterValuePath = spacePrivatePath.concat(['params']);\n        let params = tool.getStateSpace(filterValuePath, {});\n        params[filterKey] = value;\n        tool.setStateSpace(filterValuePath, params);\n\n        // 修改更新状态\n        let stateTableOnloadPath = spacePrivatePath.concat(['stateTableOnload']);\n        tool.setStateSpace(stateTableOnloadPath, 'filter');\n    }\n\n\n    getFilters() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n\n        // 过滤器信息\n        let filtersInfo = {};\n        let sign = 'filter__';\n        const signLength = sign.length;\n        for (const key in spacePublic) {\n            if (!key.startsWith(sign)) continue;\n            let filterInfo = tool.getAttribute(spacePublic, key);\n            let type = tool.getAttribute(filterInfo, 'type');\n            let hidden = tool.getAttribute(filterInfo, 'hidden');\n            if (hidden) continue;\n            if (type !== 'col') continue;\n            filtersInfo[key] = filterInfo;\n        }\n        if (JSON.stringify(filtersInfo) === '{}') return null;\n\n        // 所有列表\n        let reactButtons = [];\n        for (let key in filtersInfo) {\n            const filterKey = key.substring(signLength);\n            let value = filtersInfo[key];\n\n            // 一个列表\n            let reactChoices = [];\n            const choices = tool.getAttribute(value, 'choices', []);\n            for (const choiceKey in choices) {\n                reactChoices.push(<Select.Option value={choiceKey} key={choiceKey}>\n                    {choices[choiceKey]['text']}\n                </Select.Option>)\n            }\n\n            // 当前选中\n            let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n            let filterValuePath = spacePrivatePath.concat(['params']);\n            let params = tool.getStateSpace(filterValuePath, {});\n            let valueSelected = params[filterKey];\n            if (valueSelected === undefined) valueSelected = tool.getAttribute(value, 'default', null);\n\n\n            let reactList = <div\n                style={{\n                    marginLeft: '10px',\n                    display: 'inline-block',\n                }}\n                key={key}\n            ><Select\n                value={valueSelected}\n                onChange={value => this.onChange(value, filterKey)}\n                className={'filters_choices'}\n                key={filterKey}\n            >\n                {reactChoices}\n            </Select></div>;\n\n\n            reactButtons.push(reactList);\n        }\n\n        return <div\n            style={{\n                marginLeft: '10px',\n                marginRight: '10px',\n                display: 'inline-block',\n            }}\n        >{reactButtons}</div>;\n    }\n\n\n    render() {\n        return this.getFilters();\n    }\n}\n\nfunction state_to_col(state) {\n\n    return {};\n}\n\nfunction col_to_state(_) {\n    return {};\n}\n\nlet FilterCol = connect(state_to_col, col_to_state)(FilterColUnConnected);\n\n\n// 过滤器\nclass FilterUnConnected extends React.Component {\n    render() {\n        return <div>\n            <FilterOld param={this.props['param']}/>\n            <FilterCol param={this.props['param']}/>\n            <FilterRow param={this.props['param']}/>\n        </div>;\n    }\n}\n\nfunction state_to_filter(state) {\n\n    return {};\n}\n\nfunction filter_to_state(_) {\n    return {};\n}\n\nlet Filter = connect(state_to_filter, filter_to_state)(FilterUnConnected);\n\nexport {Filter}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {tool} from \"../../../tools/tools\";\nimport './dynamic_filter.css';\n\nimport {Select} from 'antd';\n\nconst {Option} = Select;\n\nlet lastUpdate = 0;\n\n\n//动态过滤器组件\nclass DynamicFilterUnConnected extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleMenuClick = this.handleMenuClick.bind(this);\n        this.updateData = this.updateData.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    // 更新表格数据\n    updateData(search) {\n        // 私有空间路径\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n\n        // 获取搜索关键字\n        let spacePublicPath = tool.getAttribute(this.props.param, 'spacePublicPath',);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n        let dynamicFilter = tool.getAttribute(spacePublic, 'dynamicFilter');\n        let searchKey = tool.getAttribute(dynamicFilter, 'searchKey',);\n\n        // 设置加载状态及相关参数\n        spacePrivate = Object.assign(spacePrivate, {\n            stateTableOnload: 'dynamic',\n            'searchKey': searchKey,\n            'dynamicSearchWord': search,\n        });\n\n        tool.setStateSpace(spacePrivatePath, spacePrivate,)\n    }\n\n    updateChoices() {\n        // 如果当前点击与父组件不相同则不更新\n        let fatherRecord = tool.getAttribute(this, ['props', 'param', 'fatherRecord',]);\n        if (fatherRecord) {\n            // 仅对当前点击更新\n            let fatherLastClickRecordId = tool.getAttribute(this, ['props', 'param', 'fatherLastClickRecordId',]);\n            if (fatherRecord.id !== fatherLastClickRecordId) return;\n        }\n\n        let now = (new Date()).valueOf();\n        let diff = now - lastUpdate;\n        if (diff < 3000) return null;\n        lastUpdate = (new Date()).valueOf();\n\n        let spacePublicPath = tool.getAttribute(this.props.param, 'spacePublicPath',);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n        let dynamicFilter = tool.getAttribute(spacePublic, 'dynamicFilter');\n        if (!dynamicFilter) return null;\n\n        let path = tool.getAttribute(dynamicFilter, 'path',);\n        let getFatherId = tool.getAttribute(this, ['props', 'getFatherId',]);\n        let fatherId = getFatherId();\n        if (!fatherId) fatherId = null;\n\n        let param = {\n            page_size: 10000,\n            father_id: fatherId,\n        };\n        path = tool.path_join(path, param,);\n        let requestParam = {\n            url: path,\n            success: data => {\n                let results = tool.getAttribute(data, 'results', []);\n                let dynamicFilterPath = spacePublicPath.concat(['dynamicFilter']);\n                let spacePublic = tool.getStateSpace(spacePublicPath);\n                let dynamicFilter = tool.getAttribute(spacePublic, 'dynamicFilter');\n                dynamicFilter = Object.assign(dynamicFilter, {\n                    menu: results,\n                },);\n                tool.setStateSpace(dynamicFilterPath, dynamicFilter);\n            },\n            error: error => {\n                tool.show_error(error);\n            },\n        };\n        tool.get(requestParam);\n\n    }\n\n    handleMenuClick(event) {\n        this.updateData(event.key);\n    }\n\n    handleChange(value) {\n        if (value === -1) value = '';\n        this.updateData(value);\n    }\n\n    getComponent(dynamicFilter,) {\n        let text = tool.getAttribute(dynamicFilter, 'text',);\n        let menu = tool.getAttribute(dynamicFilter, 'menu', [],);\n\n        let item = [];\n        item.push(\n            <Option value={-1} key={-1}>{'不选择'}</Option>\n        );\n        for (const line of menu) {\n            let id = line.id;\n            let help = line.help;\n            item.push(\n                <Option value={id} key={id}>{help}</Option>\n            );\n        }\n\n        menu = (\n            <Select defaultValue={text} style={{width: 120}} onChange={this.handleChange}>\n                {item}\n            </Select>\n        );\n        return menu;\n    }\n\n    render() {\n        this.updateChoices();\n        let spacePublicPath = tool.getAttribute(this.props.param, 'spacePublicPath',);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n        let dynamicFilter = tool.getAttribute(spacePublic, 'dynamicFilter');\n        if (!dynamicFilter) return null;\n        return this.getComponent(dynamicFilter,);\n    }\n\n}\n\nfunction state_to_dynamic(state) {\n\n    return {};\n}\n\nfunction dynamic_to_state(_) {\n    return {};\n}\n\nlet DynamicFilter = connect(state_to_dynamic, dynamic_to_state)(DynamicFilterUnConnected);\n\nexport {DynamicFilter,}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {tool} from \"../../../tools/tools\";\nimport './dynamics.css';\n\nimport {Menu, Dropdown, Tooltip} from 'antd';\n\n\nlet lastUpdate = 0;\n\n//多动态过滤器组件\nclass DynamicFiltersUnConnected extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleMenuClick = this.handleMenuClick.bind(this);\n        this.updateData = this.updateData.bind(this);\n    }\n\n    // 更新表格数据\n    updateData(search) {\n        // 私有空间路径\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n\n        // 获取搜索关键字\n        let spacePublicPath = tool.getAttribute(this.props.param, 'spacePublicPath',);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n        let dynamicFilter = tool.getAttribute(spacePublic, 'dynamicFilter');\n        let searchKey = tool.getAttribute(dynamicFilter, 'searchKey',);\n\n        // 设置加载状态及相关参数\n        spacePrivate = Object.assign(spacePrivate, {\n            stateTableOnload: 'dynamic',\n            'searchKey': searchKey,\n            'dynamicSearchWord': search,\n        });\n\n        tool.setStateSpace(spacePrivatePath, spacePrivate,)\n    }\n\n    updateChoices() {\n        let now = (new Date()).valueOf();\n        let diff = now - lastUpdate;\n        if (diff < 3000) return null;\n        lastUpdate = (new Date()).valueOf();\n\n        let spacePublicPath = tool.getAttribute(this.props.param, 'spacePublicPath',);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n        let dynamicFilter = tool.getAttribute(spacePublic, 'dynamicFilter');\n        if (!dynamicFilter) return null;\n\n        let path = tool.getAttribute(dynamicFilter, 'path',);\n        let requestParam = {\n            url: tool.path_join(path),\n            success: data => {\n                let results = tool.getAttribute(data, 'results', []);\n                let dynamicFilterPath = spacePublicPath.concat(['dynamicFilter']);\n                let spacePublic = tool.getStateSpace(spacePublicPath);\n                let dynamicFilter = tool.getAttribute(spacePublic, 'dynamicFilter');\n                dynamicFilter = Object.assign(dynamicFilter, {\n                    menu: results,\n                },);\n                tool.setStateSpace(dynamicFilterPath, dynamicFilter);\n            },\n            error: error => {\n                tool.show_error(error);\n            },\n        };\n        tool.get(requestParam);\n\n    }\n\n    handleMenuClick(event) {\n        this.updateData(event.key);\n    }\n\n    getComponent(dynamicFilter,) {\n        let text = tool.getAttribute(dynamicFilter, 'text',);\n        let menu = tool.getAttribute(dynamicFilter, 'menu', [],);\n\n\n        let items = [];\n        for (const line of menu) {\n            let id = line.id;\n            let help = line.help;\n            items.push({\n                key: id,\n                label: help,\n            });\n        }\n        menu = (\n            <Menu\n                onClick={this.handleMenuClick}\n                items={items}\n            >\n            </Menu>\n        );\n\n\n        // let item = [];\n        // for (const line of menu) {\n        //     let id = line.id;\n        //     let help = line.help;\n        //     item.push(\n        //         <Menu.Item key={id}>\n        //             {help}\n        //         </Menu.Item>,\n        //     );\n        // }\n        // menu = (\n        //     <Menu onClick={this.handleMenuClick}>\n        //         {item}\n        //     </Menu>\n        // );\n\n\n        return <Dropdown.Button\n            overlay={menu}\n            buttonsRender={([leftButton, rightButton]) => [\n                <Tooltip title=\"tooltip\" key=\"leftButton\">\n                    {leftButton}\n                </Tooltip>,\n                React.cloneElement(rightButton, {loading: false}),\n            ]}\n        >\n            {text}\n        </Dropdown.Button>\n    }\n\n    render() {\n        this.updateChoices();\n        let spacePublicPath = tool.getAttribute(this.props.param, 'spacePublicPath',);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n        let dynamicFilter = tool.getAttribute(spacePublic, 'dynamicFilters');\n        if (!dynamicFilter) return null;\n        return this.getComponent(dynamicFilter,);\n    }\n\n}\n\nfunction state_to_dynamic(state) {\n\n    return {};\n}\n\nfunction dynamic_to_state(_) {\n    return {};\n}\n\nlet DynamicFilters = connect(state_to_dynamic, dynamic_to_state)(DynamicFiltersUnConnected);\n\nexport {DynamicFilters,}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {PieChartOutlined} from \"@ant-design/icons\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './count.css';\nimport {Tooltip} from \"antd\";\nimport Text from \"antd/es/typography/Text\";\n\n\n//数量组件 显示数据量\nclass CountUnConnected extends React.Component {\n    isShow() {\n        let param = tool.getAttribute(this, ['props', 'param',])\n        let spacePublicPath = tool.getAttribute(param, ['spacePublicPath',])\n        let spacePrivatePath = tool.getAttribute(param, ['spacePrivatePath',])\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let count = tool.getAttribute(spacePrivate, ['responseData', 'count',],);\n        let showCount = tool.getAttribute(spacePublic, 'showCount', true,);\n        let data;\n        data = {\n            showCount: showCount,\n            count: count,\n        }\n        return data;\n    }\n\n    render() {\n        let data = this.isShow()\n        if (!data['showCount']) return null;\n        let count = data['count'];\n        return (<div className={'count_count'}>\n            <Tooltip placement=\"leftTop\" title={`当前${count}条数据`}>\n                <PieChartOutlined/>\n                <Text className={'count_text'}>{data['count']}</Text>\n            </Tooltip>\n        </div>)\n    }\n}\n\nfunction state_to_count(state) {\n\n    return {};\n}\n\nfunction count_to_state(_) {\n    return {};\n}\n\nlet Count = connect(state_to_count, count_to_state)(CountUnConnected);\n\nexport {Count}\n","export default __webpack_public_path__ + \"static/media/help.2e8c0a40.png\";","import React from 'react';\nimport {connect} from 'react-redux';\nimport {tool} from \"../../../tools/tools\";\nimport './jump.css';\n\n\n//跳转组件\nclass JumpUnConnected extends React.Component {\n\n    render() {\n        let spacePublicPath = tool.getAttribute(this.props.param, 'spacePublicPath',);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n        let jumps = tool.getAttribute(spacePublic, 'jumps');\n        if (!jumps) return null;\n\n        let div = [];\n        for (const jump of jumps) {\n            let link = jump[0];\n            link = tool.path_join(link);\n            let text = jump[1];\n            div.push(<a\n                href={link}\n                key={link + text}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                className={'jump__link'}\n            >{text}</a>);\n        }\n        return div;\n    }\n}\n\nfunction state_to_jump(state) {\n\n    return {};\n}\n\nfunction jump_to_state(_) {\n    return {};\n}\n\nlet Jump = connect(state_to_jump, jump_to_state)(JumpUnConnected);\n\nexport {Jump}\n","function isMobileDevice() {\n    let userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n    // 对于iPhone的检测，如果为iOS设备，且为移动设备，则返回true\n    if (/iPad|Macintosh/.test(userAgent) && 'ontouchend' in document) {\n        return true;\n    }\n\n    // 对于其他Android设备的检测\n    if (/Android/i.test(userAgent)) {\n        if (/mobile/i.test(userAgent)) {\n            return true;\n        }\n    }\n\n    // 对于其他移动设备的检测\n    return /iemobile/i.test(userAgent) || /mobile/i.test(userAgent);\n}\n\nlet isMobile = isMobileDevice();\nexport {isMobile};","import React from 'react';\nimport {Tooltip} from \"antd\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './InputFramework.css'\n\n\n//容纳输入框的框架\nclass InputFrameworkFieldUnConnected extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getFieldInfo = this.getFieldInfo.bind(this);\n    }\n\n    getFieldInfo() {\n        let param = tool.getAttribute(this, ['props', 'param',]);\n        let getContent = tool.getAttribute(param, 'getContent',);\n        let content = getContent();\n        let title = tool.getAttribute(param, 'title',);\n        let help = tool.getAttribute(param, 'help',);\n        let required = tool.getAttribute(param, 'required',);\n        return {\n            title: title,\n            help: help,\n            content: content,\n            required: required,\n        }\n    }\n\n    render() {\n        let fieldInfo = this.getFieldInfo();\n\n        let show_input = !this.props.param.no_show_input;\n        let show_border = !this.props.param.no_show_border;\n\n        //是否有内容区域边框\n        let class_name_content;\n        let out_height;\n        if (show_input) {\n            class_name_content = 'content';\n            out_height = '35px'\n        }\n\n        //内容区域边框是否设置为无色\n        let style_content;\n        if (show_border) {\n            style_content = {\n                border: \"#b4b4b4 solid 1px\",\n                display: 'inline-block',\n            }\n        }\n\n\n        return (\n            <div className={'out'} style={{\n                height: out_height,\n            }}>\n                <Tooltip placement=\"topLeft\" title={fieldInfo.help}>\n                    <div className={'front_text_out'}>\n                        <div className={'front_text_in'}>\n                            {fieldInfo.title}\n                        </div>\n                    </div>\n                </Tooltip>\n\n                <Tooltip placement=\"topLeft\" title={fieldInfo.help}>\n                    <div className={class_name_content} style={style_content}>{fieldInfo.content}</div>\n                </Tooltip>\n\n                &nbsp;&nbsp;&nbsp;\n                <div className={'required'} style={{display: 'inline-block',}}>\n                    {fieldInfo.required ? '必填' : null}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateTpInput(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nlet InputFrameworkField = connect(mapStateTpInput)(InputFrameworkFieldUnConnected);\n\nexport {InputFrameworkField,}\n","import React from \"react\";\nimport {InputFrameworkField} from \"../InputFramework/InputFramework\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './char.css';\n\n\n//Char类型的字段\nclass FieldChar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n    }\n\n    componentDidMount() {\n        //如果是拷贝模式,需要提前写入数据,而不是等到变化\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        if (action === 'copy') {\n            let infoModalPath = ['infoModal'];\n            let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n            let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n            let dataKey = `create__x`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            data = Object.assign({}, data);\n            data[columnKey] = defaultValue;\n            tool.setStateSpace(dataPath, data);\n        }\n    }\n\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n\n        let record = tool.getAttribute(paramModal, 'record');\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n\n        // 得到默认值\n        let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n\n        //得到帮助信息\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n\n        let textHelp = tool.getAttribute(spacePublic, ['columnsCreate', columnKey, 'help']);\n        if (action === 'update') textHelp = tool.getAttribute(spacePublic, ['columnsUpdate', columnKey, 'help']);\n\n        // 兼容获取textHelp\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        let mainTextHelp = tool.getAttribute(columnInfo, 'help');\n        if (mainTextHelp) textHelp = mainTextHelp;\n\n        return (\n            <input\n                className={'input'}\n                type={'text'}\n                defaultValue={defaultValue}\n                onChange={event => {\n                    if (action === 'update') {\n                        let dataKey = `update__${record.id}`;\n                        let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                        let data = tool.getStateSpace(dataPath);\n                        data = Object.assign({}, data);\n                        data[columnKey] = event.target.value;\n                        tool.setStateSpace(dataPath, data);\n                    } else if (action === 'create' || action === 'copy') {\n                        let dataKey = `create__x`;\n                        let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                        let data = tool.getStateSpace(dataPath);\n                        data = Object.assign({}, data);\n                        data[columnKey] = event.target.value;\n                        tool.setStateSpace(dataPath, data);\n                    }\n                }}\n                placeholder={textHelp}\n            />\n        )\n    }\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n        // 兼容获取columnCreate/columnUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) columnCreate = columnInfo;\n        if (columnInfo) columnUpdate = columnInfo;\n\n\n        let title = tool.getAttribute(columnUpdate, 'title');\n        let help = tool.getAttribute(columnUpdate, 'help');\n        if (action === 'create' || action === 'copy') {\n            title = tool.getAttribute(columnCreate, 'title');\n            help = tool.getAttribute(columnCreate, 'help');\n        }\n\n\n        return <InputFrameworkField param={{\n            getContent: this.getContent,\n            title: title,\n            help: help,\n            action: action,\n        }}/>;\n    }\n}\n\nfunction mapStateToChar(state) {\n    return {}\n}\n\nFieldChar = connect(mapStateToChar)(FieldChar);\n\nexport {FieldChar,};\n","import React from \"react\";\nimport {Input} from 'antd';\nimport {InputFrameworkField} from \"../InputFramework/InputFramework\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './text.css';\n\nconst {TextArea} = Input;\n\n//Text类型的字段\nclass FieldText extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n    }\n\n    componentDidMount() {\n        //如果是拷贝模式,需要提前写入数据,而不是等到变化\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        if (action === 'copy') {\n            let infoModalPath = ['infoModal'];\n            let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n            let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n            let dataKey = `create__x`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            data = Object.assign({}, data);\n            data[columnKey] = defaultValue;\n            tool.setStateSpace(dataPath, data);\n        }\n    }\n\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n\n        let record = tool.getAttribute(paramModal, 'record');\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n\n        // 得到默认值\n        let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n\n        //得到帮助信息\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n\n        let textHelp = tool.getAttribute(spacePublic, ['columnsCreate', columnKey, 'help']);\n        if (action === 'update') textHelp = tool.getAttribute(spacePublic, ['columnsUpdate', columnKey, 'help']);\n\n        // 兼容获取textHelp\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        let mainTextHelp = tool.getAttribute(columnInfo, 'help');\n        if (mainTextHelp) textHelp = mainTextHelp;\n\n        return (\n            <TextArea\n                className={'input'}\n                type={'text'}\n                defaultValue={defaultValue}\n                onChange={event => {\n                    if (action === 'update') {\n                        let dataKey = `update__${record.id}`;\n                        let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                        let data = tool.getStateSpace(dataPath);\n                        data = Object.assign({}, data);\n                        data[columnKey] = event.target.value;\n                        tool.setStateSpace(dataPath, data);\n                    } else if (action === 'create' || action === 'copy') {\n                        let dataKey = `create__x`;\n                        let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                        let data = tool.getStateSpace(dataPath);\n                        data = Object.assign({}, data);\n                        data[columnKey] = event.target.value;\n                        tool.setStateSpace(dataPath, data);\n                    }\n                }}\n                placeholder={textHelp}\n                rows={1}\n            />\n        )\n    }\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n        // 兼容获取columnCreate/columnUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) columnCreate = columnInfo;\n        if (columnInfo) columnUpdate = columnInfo;\n\n\n        let title = tool.getAttribute(columnUpdate, 'title');\n        let help = tool.getAttribute(columnUpdate, 'help');\n        if (action === 'create' || action === 'copy') {\n            title = tool.getAttribute(columnCreate, 'title');\n            help = tool.getAttribute(columnCreate, 'help');\n        }\n\n\n        return <InputFrameworkField param={{\n            getContent: this.getContent,\n            title: title,\n            help: help,\n            action: action,\n        }}/>;\n    }\n}\n\nfunction mapStateToText(state) {\n    return {}\n}\n\nFieldText = connect(mapStateToText)(FieldText);\n\nexport {FieldText,};\n","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './multiple-choices.css';\nimport {Tooltip} from \"antd\";\n\n\n//多选类型的字段\nclass FieldMultipleChoices extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n    }\n\n    updateChoices() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n        let record = tool.getAttribute(paramModal, 'record');\n        let fatherRecord = tool.getAttribute(paramModal, 'fatherRecord');\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdatePath = columnsUpdatePath.concat([columnKey]);\n        let columnCreatePath = columnsCreatePath.concat([columnKey]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n        // 兼容获取columnCreate/columnUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) columnCreate = columnInfo;\n        if (columnInfo) columnUpdate = columnInfo;\n\n        if (action === 'update') {\n            let path = tool.getAttribute(columnUpdate, 'path');\n            if (!path) return null;\n\n            let url = tool.get_url(path, false, {\n                line_id: record.id,\n                father_id: tool.getAttribute(fatherRecord, 'id'),\n                page_size: 10000,\n            });\n            let requestParam = {\n                url: url,\n                success: data => {\n                    columnUpdate = Object.assign({}, columnUpdate);\n                    columnUpdate['choices'] = data.results;\n                    tool.setStateSpace(columnUpdatePath, columnUpdate);\n                },\n                error: data => {\n                    tool.show_error(data);\n                },\n            };\n            tool.get(requestParam);\n        } else if (action === 'create' || action === 'copy') {\n            let path = tool.getAttribute(columnCreate, 'path');\n            if (!path) return null;\n\n            let url = tool.get_url(path, false, {\n                page_size: 10000,\n                father_id: tool.getAttribute(fatherRecord, 'id'),\n            });\n\n            let requestParam = {\n                url: url,\n                success: data => {\n                    columnCreate = Object.assign({}, columnCreate);\n                    columnCreate['choices'] = data.results;\n                    tool.setStateSpace(columnCreatePath, columnCreate);\n                },\n                error: data => {\n                    tool.show_error(data);\n                },\n            };\n            tool.get(requestParam);\n        }\n\n    }\n\n    componentDidMount() {\n        this.updateChoices();\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n\n        // 如果是拷贝模式,需要提前写入数据,而不是等到变化\n        if (action === 'copy') {\n            let infoModalPath = ['infoModal'];\n            let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n            let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n            let newDefaultValue = [];\n            for (let line of defaultValue) {\n                let id = line.id;\n                if (!id) id = line;\n                newDefaultValue.push(id);\n            }\n\n            let dataKey = `create__x`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            data = Object.assign({}, data);\n            data[columnKey] = newDefaultValue;\n            tool.setStateSpace(dataPath, data);\n        }\n    }\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let paramModalPath = infoModalPath.concat(['paramModal']);\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n        let record = tool.getAttribute(paramModal, 'record');\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let title = tool.getAttribute(columnUpdate, 'title');\n        let help = tool.getAttribute(columnUpdate, 'help');\n        if (action === 'create' || action === 'copy') {\n            title = tool.getAttribute(columnCreate, 'title');\n            help = tool.getAttribute(columnCreate, 'help');\n        }\n\n        let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n\n        if (!defaultValue) defaultValue = [];\n        let choices = tool.getAttribute(columnCreate, 'choices');\n        if (action === 'update') choices = tool.getAttribute(columnUpdate, 'choices');\n\n\n\n        let choiceReacts = [];\n        if (!choices) choices = [];\n\n        // 初始化缺省值\n        let newDefaultValue = [];\n        for (let choice of choices) if (choice.selected) newDefaultValue.push(choice.id);\n        if (newDefaultValue.length > 0) defaultValue = newDefaultValue;\n\n        for (let choice of choices) {\n\n            let dataKey = `create__x`;\n            if (action === 'update') dataKey = `update__${record.id}`;\n            let values = tool.getAttribute(paramModal, [dataKey, columnKey]);\n            let selectedState = false;\n            if (values) {\n                let index = values.findIndex(id => id.toString() === choice.id.toString());\n                if (index !== -1) selectedState = true;\n            } else {\n                let index = defaultValue.findIndex(line => {\n                    let id = line.id;\n                    if (id === undefined) id = line;\n                    return id.toString() === choice.id.toString();\n                });\n                if (index !== -1) selectedState = true;\n                if (action === 'create') selectedState = false;\n            }\n\n\n            choiceReacts.push(<div key={choice.id} className={'choice-line'}>\n                &nbsp;&nbsp;&nbsp;&nbsp;\n                <input\n                    // className={'choice-input'}\n                    type={'checkbox'}\n                    checked={selectedState}\n                    onChange={event => {\n                        if (action === 'update') {\n                            let dataKey = `update__${record.id}`;\n                            let valuePath = paramModalPath.concat([dataKey, columnKey]);\n                            let value = tool.getStateSpace(valuePath);\n                            if (!value) value = defaultValue.map(item => {\n                                let id = item.id;\n                                if (id === undefined) id = item;\n                                return id;\n                            });\n                            if (!value) value = [];\n\n                            let newValue = [];\n                            for (let id of value) if (choice.id.toString() !== id.toString()) newValue.push(id);\n                            if (event.target.checked) newValue.push(choice.id);\n                            tool.setStateSpace(valuePath, newValue);\n                        } else if (action === 'create' || action === 'copy') {\n                            let dataKey = `create__x`;\n                            let valuePath = paramModalPath.concat([dataKey, columnKey]);\n                            let value = tool.getStateSpace(valuePath);\n                            if (!value) value = [];\n\n                            let newValue = [];\n                            for (let id of value) if (choice.id.toString() !== id.toString()) newValue.push(id);\n                            if (event.target.checked) newValue.push(choice.id);\n                            tool.setStateSpace(valuePath, newValue);\n                        }\n                    }}\n                />\n                &nbsp;&nbsp;\n                {choice.help}\n            </div>);\n        }\n\n\n        return (\n            <div>\n                <Tooltip title={help}>\n                    <div>\n                        <div className={'title'}>\n                            {title}\n                        </div>\n                    </div>\n                </Tooltip>\n                <br/>\n                {choiceReacts}\n            </div>\n\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {this.getContent()}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nFieldMultipleChoices = connect(mapStateToUpdate)(FieldMultipleChoices);\n\nexport {FieldMultipleChoices,};\n","import React from \"react\";\n\nimport {InputFrameworkField} from \"../InputFramework/InputFramework\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './single-small-choices.css';\n\n\n//单选类型的字段(简短的)\nclass FieldSingleSmallChoices extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n    }\n\n    getPartPath() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n\n        // 计算正确的updatePart空间路径\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        if (!spacePrivatePath) return null;\n        let nowPagePath = spacePrivatePath.concat(['updatePart', 'nowPage',],);\n        let nowPage = tool.getStateSpace(nowPagePath);\n        if (!nowPage) nowPage = 1;\n        let updatePartSpaceKey = `columnsUpdate_${nowPage}`;\n        let columnsUpdatePartPath;\n        columnsUpdatePartPath = spacePublicPath.concat([updatePartSpaceKey]);\n        return columnsUpdatePartPath;\n    }\n\n    updateChoices() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        // 兼容获取columnsCreate/columnsUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) columnsCreate = columnInfo;\n        if (columnInfo) {\n            let columnsUpdatePartPath = this.getPartPath();\n            columnsUpdate = tool.getStateSpace(columnsUpdatePartPath);\n        }\n\n\n        let record = tool.getAttribute(paramModal, 'record');\n        let fatherRecord = tool.getAttribute(paramModal, 'fatherRecord');\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        // let columnUpdatePath = columnsUpdatePath.concat([columnKey]);\n        let columnCreatePath = columnsCreatePath.concat([columnKey]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n        let columnsUpdatePartPath = this.getPartPath();\n        if (action === 'update') {\n            let path = tool.getAttribute(columnUpdate, 'path');\n            if (!path) return null;\n\n            let url = tool.get_url(path, false, {\n                line_id: record.id,\n                father_id: tool.getAttribute(fatherRecord, 'id'),\n                record_id: record.id,\n                page_size: 10000,\n            });\n\n            let requestParam = {\n                url: url,\n                success: data => {\n                    // columnUpdate = Object.assign({}, columnUpdate);\n                    // columnUpdate['choices'] = data.results;\n                    // tool.setStateSpace(columnUpdatePath, columnUpdate);\n                    if(columnInfo){\n                        columnUpdate['choices'] = data.results;\n                        let columnUpdatePath = columnsUpdatePartPath.concat([columnKey]);\n\n\n                        tool.setStateSpace(columnUpdatePath, columnUpdate);\n                    }else{\n                        columnUpdate = Object.assign({}, columnUpdate);\n                        columnUpdate['choices'] = data.results;\n                        let columnUpdatePath = columnsUpdatePath.concat([columnKey]);\n                        tool.setStateSpace(columnUpdatePath, columnUpdate);\n                    }\n\n                },\n                error: data => {\n                    tool.show_error(data);\n                },\n            };\n            tool.get(requestParam);\n        } else if (action === 'create' || action === 'copy') {\n            let path = tool.getAttribute(columnCreate, 'path');\n            if (!path) return null;\n\n            let url = tool.get_url(path, false, {\n                // father_id: fatherRecord.id,\n                father_id: tool.getAttribute(fatherRecord, 'id'),\n                page_size: 10000,\n            });\n\n            let requestParam = {\n                url: url,\n                success: data => {\n                    columnCreate = Object.assign({}, columnCreate);\n                    columnCreate['choices'] = data.results;\n                    tool.setStateSpace(columnCreatePath, columnCreate);\n                },\n                error: data => {\n                    tool.show_error(data);\n                },\n            };\n            tool.get(requestParam);\n        }\n\n    }\n\n    componentDidMount() {\n        this.updateChoices();\n\n        //如果是拷贝模式,需要提前写入数据,而不是等到变化\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        if (action === 'copy') {\n            let infoModalPath = ['infoModal'];\n            let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n            let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n            let dataKey = `create__x`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            data = Object.assign({}, data);\n            data[columnKey] = defaultValue;\n            tool.setStateSpace(dataPath, data);\n        }\n    }\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n\n        let record = tool.getAttribute(paramModal, 'record');\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n\n        // 兼容获取columnCreate/columnUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) columnCreate = columnInfo;\n        if (columnInfo) columnUpdate = columnInfo;\n\n        let choices = tool.getAttribute(columnCreate, 'choices');\n        if (action === 'update') choices = tool.getAttribute(columnUpdate, 'choices');\n\n        // 是否是必须的\n        let required = tool.getAttribute(columnCreate, 'required');\n        if (action === 'update') required = tool.getAttribute(columnUpdate, 'required');\n\n        // 默认值\n        let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n\n        let choiceReacts = [<option value={'0'} key={-1}>{'不选择'}</option>];\n        if (required) choiceReacts = [];\n        if (!choices) choices = [];\n        let key_id = 1;\n        for (let choice of choices) {\n            // if (!choice.id) choice.id = key_id;\n            let key = choice.id;\n            if (!key) key = key_id;\n            key_id++;\n            choiceReacts.push(\n                <option value={choice.value ? choice.value : choice.id} key={key}>{choice.help}</option>\n            );\n        }\n        if (action === 'create') defaultValue = false;\n        return (\n            <select\n                className={'choice-input'}\n                defaultValue={defaultValue}\n                // multiple={false}\n                multiple={false}\n                onChange={event => {\n                    let target_value = event.target.value;\n                    if (target_value === '0') target_value = null;\n\n                    if (action === 'update') {\n                        let dataKey = `update__${record.id}`;\n                        let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                        let data = tool.getStateSpace(dataPath);\n                        data = Object.assign({}, data);\n                        data[columnKey] = target_value;\n                        tool.setStateSpace(dataPath, data);\n                    } else if (action === 'create' || action === 'copy') {\n                        let dataKey = `create__x`;\n                        let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                        let data = tool.getStateSpace(dataPath);\n                        data = Object.assign({}, data);\n                        data[columnKey] = target_value;\n                        tool.setStateSpace(dataPath, data);\n                    }\n                }}\n            >\n                {choiceReacts}\n            </select>\n        );\n    }\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n        // 兼容获取columnCreate/columnUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) columnCreate = columnInfo;\n        if (columnInfo) columnUpdate = columnInfo;\n\n        let title = tool.getAttribute(columnUpdate, 'title');\n        let help = tool.getAttribute(columnUpdate, 'help');\n        if (action === 'create' || action === 'copy') {\n            title = tool.getAttribute(columnCreate, 'title');\n            help = tool.getAttribute(columnCreate, 'help');\n        }\n\n        return <InputFrameworkField\n            param={{\n                getContent: this.getContent,\n                title: title,\n                help: help,\n                action: action,\n            }}\n\n        />;\n    }\n}\n\nfunction mapStateToSingle(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nFieldSingleSmallChoices = connect(mapStateToSingle)(FieldSingleSmallChoices);\n\nexport {FieldSingleSmallChoices,};\n","import React from \"react\";\nimport {Cascader} from 'antd';\nimport {InputFrameworkField} from \"../InputFramework/InputFramework\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './single-deep-choices.css';\n\n\n//单选类型的字段(简短的)\nclass FieldSingleDeepChoices extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n    }\n\n    getPartPath() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n\n        // 计算正确的updatePart空间路径\n        let spacePrivatePath = tool.getAttribute(this, ['props', 'param', 'spacePrivatePath',]);\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let nowPagePath;\n        if (action === 'update') {\n            if (spacePrivatePath) nowPagePath = spacePrivatePath.concat(['updatePart', 'nowPage',],);\n            let nowPage = tool.getStateSpace(nowPagePath);\n            if (!nowPage) nowPage = 1;\n            let updatePartSpaceKey = `columnsUpdate_${nowPage}`;\n            let columnsUpdatePartPath;\n            columnsUpdatePartPath = spacePublicPath.concat([updatePartSpaceKey]);\n            return columnsUpdatePartPath;\n        } else {\n            if (spacePrivatePath) nowPagePath = spacePrivatePath.concat(['createPart', 'nowPage',],);\n            let nowPage = tool.getStateSpace(nowPagePath);\n            if (!nowPage) nowPage = 1;\n            let createPartSpaceKey = `columnsCreate_${nowPage}`;\n            let columnsCreatePartPath;\n            columnsCreatePartPath = spacePublicPath.concat([createPartSpaceKey]);\n            return columnsCreatePartPath;\n        }\n\n    }\n\n    updateChoices() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        // 兼容获取columnsCreate/columnsUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) {\n            let columnsUpdatePartPath = this.getPartPath();\n            columnsUpdate = tool.getStateSpace(columnsUpdatePartPath);\n\n            let columnsCreatePartPath = this.getPartPath();\n            columnsCreate = tool.getStateSpace(columnsCreatePartPath);\n        }\n\n        let fatherRecord = tool.getAttribute(paramModal, 'fatherRecord');\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdatePath = columnsUpdatePath.concat([columnKey]);\n        // let columnCreatePath = columnsCreatePath.concat([columnKey]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n\n        let columnsUpdatePartPath = this.getPartPath();\n        let columnsCreatePartPath = this.getPartPath();\n        // console.log('columnsUpdatePartPath',columnsUpdatePartPath)\n        if (action === 'update' && columnInfo) {\n            let path = tool.getAttribute(columnUpdate, 'path');\n            if (!path) return null;\n            path = path[0];\n\n            let url = tool.get_url(path, false, {\n                // father_id: fatherRecord.id,\n                father_id: tool.getAttribute(fatherRecord, 'id'),\n                page_size: 10000,\n            });\n\n            let requestParam = {\n                url: url,\n                success: data => {\n                    // let columnsUpdatePart = tool.getStateSpace(columnsUpdatePartPath);\n                    // console.log('columnsUpdatePart',columnsUpdatePart)\n                    // 加工成框架要求的格式\n                    let choices = [];\n                    for (let i = 0; i < data.results.length; i++) {\n                        let line = data.results[i];\n                        let help = line.help;\n                        let value = line.value;\n\n                        choices.push({\n                            value: value,\n                            label: help,\n                            isLeaf: false,\n                        });\n                    }\n\n                    // 为字段添加choices\n                    columnUpdate['choices'] = choices;\n                    let columnUpdatePath = columnsUpdatePartPath.concat([columnKey]);\n\n                    tool.setStateSpace(columnUpdatePath, columnUpdate);\n                },\n                error: data => {\n                    tool.show_error(data);\n                },\n            };\n            tool.get(requestParam);\n        }\n        if (action === 'update' && !columnInfo) {\n            let path = tool.getAttribute(columnCreate, 'path');\n            if (!path) return null;\n            path = path[0];\n\n            let url = tool.get_url(path, false, {\n                // father_id: fatherRecord.id,\n                father_id: tool.getAttribute(fatherRecord, 'id'),\n                page_size: 10000,\n            });\n\n            let requestParam = {\n                url: url,\n                success: data => {\n                    columnUpdate = Object.assign({}, columnUpdate);\n                    // 加工成框架要求的格式\n                    let choices = [];\n                    for (let i = 0; i < data.results.length; i++) {\n                        let line = data.results[i];\n                        let help = line.help;\n                        let value = line.value;\n\n                        choices.push({\n                            value: value,\n                            label: help,\n                            isLeaf: false,\n                        });\n                    }\n\n                    columnUpdate['choices'] = choices;\n                    tool.setStateSpace(columnUpdatePath, columnUpdate);\n                },\n                error: data => {\n                    tool.show_error(data);\n                },\n            };\n            tool.get(requestParam);\n        }\n        if (action === 'create' || action === 'copy') {\n\n            let path = tool.getAttribute(columnCreate, 'path');\n            if (!path) return null;\n            path = path[0];\n\n            let url = tool.get_url(path, false, {\n                // father_id: fatherRecord.id,\n                father_id: tool.getAttribute(fatherRecord, 'id'),\n                page_size: 10000,\n            });\n\n            let requestParam = {\n                url: url,\n                success: data => {\n                    columnCreate = Object.assign({}, columnCreate);\n                    // 加工成框架要求的格式\n                    let choices = [];\n                    for (let i = 0; i < data.results.length; i++) {\n                        let line = data.results[i];\n                        let help = line.help;\n                        let value = line.value;\n\n                        choices.push({\n                            value: value,\n                            label: help,\n                            isLeaf: false,\n                        });\n                    }\n\n                    columnCreate['choices'] = choices;\n\n                    let columnCreatePartPath = columnsCreatePartPath.concat([columnKey]);\n                    tool.setStateSpace(columnCreatePartPath, columnCreate);\n                },\n                error: data => {\n                    tool.show_error(data);\n                },\n            };\n            tool.get(requestParam);\n        }\n    }\n\n    componentDidMount() {\n        this.updateChoices();\n\n        //如果是拷贝模式,需要提前写入数据,而不是等到变化\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        if (action === 'copy') {\n            let infoModalPath = ['infoModal'];\n            let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n            let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n            let dataKey = `create__x`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            data = Object.assign({}, data);\n            data[columnKey] = defaultValue;\n            tool.setStateSpace(dataPath, data);\n        }\n    }\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n\n        // 兼容获取columnCreate/columnUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) {\n            let columnsUpdatePartPath = this.getPartPath();\n            columnsUpdate = tool.getStateSpace(columnsUpdatePartPath);\n\n            let columnsCreatePartPath = this.getPartPath();\n            columnsCreate = tool.getStateSpace(columnsCreatePartPath);\n        }\n\n        let record = tool.getAttribute(paramModal, 'record');\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        if (columnInfo && action === 'update') {\n            let columnsUpdatePartPath = this.getPartPath();\n            columnsUpdate = tool.getStateSpace(columnsUpdatePartPath);\n\n            let columnsCreatePartPath = this.getPartPath();\n            columnsCreate = tool.getStateSpace(columnsCreatePartPath);\n        }\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n\n\n\n\n        let choices = tool.getAttribute(columnCreate, 'choices');\n        if (action === 'update') {\n            choices = tool.getAttribute(columnUpdate, 'choices');\n        }\n        if (action === 'create') {\n            choices = tool.getAttribute(columnCreate, 'choices');\n        }\n        if (!choices) choices = [];\n\n        // 请求路径\n        let path;\n        if (action === 'update') {\n            path = tool.getAttribute(columnUpdate, 'path');\n        }\n        if (action === 'create' || action === 'copy') {\n            path = tool.getAttribute(columnCreate, 'path');\n        }\n        let path_origin = path;\n        if (!path_origin) path_origin = [];\n\n\n        let onChange = (value, selectedOptions) => {\n            let count_path = path_origin.length;\n            if (selectedOptions.length < count_path) return null;\n\n            // 把值记录到私有域\n            let target_value = selectedOptions[selectedOptions.length - 1].value;\n            // if (target_value === '0') target_value = null;\n\n            if (action === 'update') {\n                let dataKey = `update__${record.id}`;\n                let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                let data = tool.getStateSpace(dataPath);\n                data = Object.assign({}, data);\n                data[columnKey] = target_value;\n                tool.setStateSpace(dataPath, data);\n            }\n            if (action === 'create' || action === 'copy') {\n                // let setting=Object.assign({},tool.getStateSpace(['setting']));\n                // tool.setStateSpace(['setting'],setting)\n                let dataKey = `create__x`;\n                let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                let data = tool.getStateSpace(dataPath);\n                data = Object.assign({}, data);\n                data[columnKey] = target_value;\n                tool.setStateSpace(dataPath, data);\n            }\n        };\n        let loadData = selectedOptions => {\n            const targetOption = selectedOptions[selectedOptions.length - 1];\n            targetOption.loading = true;\n\n            // 请求数据\n            let use_path = path[selectedOptions.length];\n\n            let url = tool.get_url(use_path, false, {\n                father_id: tool.getAttribute(targetOption, 'value'),\n                page_size: 10000,\n            });\n\n            let requestParam = {\n                url: url,\n                success: data => {\n                    // 计算是否需要枝叶\n                    let count_path = path_origin.length;\n                    let selectedOptionsCount = selectedOptions.length;\n                    let isLeaf = false;\n                    if ((selectedOptionsCount + 1) >= count_path) isLeaf = true;\n\n                    targetOption.loading = false;\n                    let results = data.results;\n                    let children = [];\n                    for (let i = 0; i < results.length; i++) {\n                        let line = results[i];\n                        let temp = {\n                            label: line.help,\n                            value: line.value,\n                            isLeaf: isLeaf,\n                        };\n                        if (!isLeaf) temp['loading'] = false;\n                        children.push(temp);\n\n                        targetOption.children = children;\n                    }\n                    let setting = tool.getStateSpace(['setting']);\n                    setting = Object.assign({}, setting);\n                    tool.setStateSpace(['setting'], setting);\n                },\n                error: data => {\n                    tool.show_error(data);\n                },\n            };\n            tool.get(requestParam);\n        };\n\n        return <Cascader\n            options={choices}\n            loadData={loadData}\n            onChange={onChange}\n            placeholder=\"请选择\"\n            changeOnSelect\n        />;\n\n    }\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n        // 兼容获取columnCreate/columnUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) columnCreate = columnInfo;\n        if (columnInfo) columnUpdate = columnInfo;\n\n        let title = tool.getAttribute(columnUpdate, 'title');\n        let help = tool.getAttribute(columnUpdate, 'help');\n        if (action === 'create' || action === 'copy') {\n            title = tool.getAttribute(columnCreate, 'title');\n            help = tool.getAttribute(columnCreate, 'help');\n        }\n\n        return <InputFrameworkField\n            param={{\n                getContent: this.getContent,\n                title: title,\n                help: help,\n                action: action,\n            }}\n\n        />;\n    }\n}\n\nfunction mapStateToSingle(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nFieldSingleDeepChoices = connect(mapStateToSingle)(FieldSingleDeepChoices);\n\nexport {FieldSingleDeepChoices,};\n","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\nimport $ from 'jquery';\n\nimport './file.css';\nimport {InputFrameworkField} from \"../InputFramework/InputFramework\";\n\n\n//文件类型的字段*\nclass FieldFile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n        this.getInputInfo = this.getInputInfo.bind(this);\n    }\n\n    componentDidMount() {\n    }\n\n    getInputInfo() {\n        let resultValue = tool.getAttribute(this, ['props', 'param', 'resultValue',]);\n        let record = tool.getAttribute(this, ['props', 'param', 'record',]);\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n\n        if (action === 'create' || action === 'copy') {\n            let columnCreatePath = tool.getAttribute(this, ['props', 'param', 'columnCreatePath',]);\n            let columnCreate = tool.getStateSpace(columnCreatePath);\n\n            // 兼容获取columnCreate/columnUpdate\n            let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n            if (columnInfo) columnCreate = columnInfo;\n\n            let title = tool.getAttribute(columnCreate, 'title');\n            let help = tool.getAttribute(columnCreate, 'help');\n            if (!help) help = title;\n\n            return {\n                defaultValue: resultValue,\n                title: title,\n                help: help,\n                columnCreate: columnCreate,\n                columnCreatePath: columnCreatePath,\n                record: record,\n                action: action,\n            };\n        } else if (action === 'update') {\n            let columnUpdatePath = tool.getAttribute(this, ['props', 'param', 'columnUpdatePath',]);\n            let columnUpdate = tool.getStateSpace(columnUpdatePath);\n            let title = tool.getAttribute(columnUpdate, 'title');\n            let help = tool.getAttribute(columnUpdate, 'help');\n            if (!help) help = title;\n\n            return {\n                defaultValue: resultValue,\n                title: title,\n                help: help,\n                columnUpdate: columnUpdate,\n                columnUpdatePath: columnUpdatePath,\n                record: record,\n                action: action,\n            };\n        }\n    }\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n\n        let inputInfo = this.getInputInfo();\n        let accept = tool.getAttribute(columnsCreate, [columnKey, 'accept']);\n        let action = inputInfo.action;\n        if (action === 'update') {\n            let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n            let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n            accept = tool.getAttribute(columnsUpdate, [columnKey, 'accept']);\n        }\n\n        //制作临时id\n        let inputId = Math.ceil(Math.random() * 10).toString();\n\n        return (\n            <div>\n                <input\n                    id={inputId}\n                    className={'file-input'}\n                    type={'file'}\n                    onChange={event => {\n                        let action = inputInfo.action;\n                        let files = event.target.files;\n                        let file = null;\n                        if (files.length > 0) file = event.target.files[0];\n\n                        if (action === 'update') {\n                            let record = tool.getAttribute(infoModal, ['paramModal', 'record',]);\n                            let dataKey = `update__${record.id}`;\n                            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                            let data = tool.getStateSpace(dataPath);\n                            data = Object.assign({}, data);\n                            data[columnKey] = file;\n                            tool.setStateSpace(dataPath, data);\n                        } else if (action === 'create' || action === 'copy') {\n                            let dataKey = `create__x`;\n                            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                            let data = tool.getStateSpace(dataPath);\n                            data = Object.assign({}, data);\n                            data[columnKey] = file;\n                            tool.setStateSpace(dataPath, data);\n                        }\n                    }}\n                    accept={accept ? accept : '*'}\n                />\n\n                <button\n                    className={'file-button'}\n                    onClick={() => $(`#${inputId}`).click()}\n                >\n                    点击选择\n                </button>\n\n            </div>\n        )\n    }\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let record = tool.getAttribute(paramModal, 'record');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n        // 兼容获取columnCreate/columnUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) columnCreate = columnInfo;\n        if (columnInfo) columnUpdate = columnInfo;\n\n\n        let title = tool.getAttribute(columnUpdate, 'title');\n        let help = tool.getAttribute(columnUpdate, 'help');\n\n        let accept = tool.getAttribute(columnUpdate, 'accept');\n\n        if (action === 'create' || action === 'copy') {\n            title = tool.getAttribute(columnCreate, 'title');\n            help = tool.getAttribute(columnCreate, 'help');\n            accept = tool.getAttribute(columnCreate, 'accept');\n        }\n\n\n        //得到正在储存的文件\n        let originFile;\n        if (action === 'create' || action === 'copy') {\n            let dataKey = `create__x`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            if (!data) data = {};\n            originFile = data[columnKey];\n        } else if (action === 'update') {\n            let dataKey = `update__${record.id}`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            if (!data) data = {};\n            originFile = data[columnKey];\n        }\n\n\n        let fileInfo;\n        if (originFile) {\n            //计算文件大小\n            let back = 'B';\n            let fileSize = originFile.size;\n            if (fileSize > 1024) {\n                fileSize = fileSize / 1024;\n                back = 'Kb';\n            }\n            if (fileSize > 1024) {\n                fileSize = fileSize / 1024;\n                back = 'Mb';\n            }\n            if (fileSize > 1024) {\n                fileSize = fileSize / 1024;\n                back = 'Gb';\n            }\n            if (fileSize > 1024) {\n                fileSize = fileSize / 1024;\n                back = 'Pb';\n            }\n            fileSize = fileSize.toFixed(2);\n            let sizeInfo = `${fileSize}${back}`;\n\n            fileInfo = (<div className={'file-infos'}>\n                <div className={'file-info-line'}>\n                    <div className={'file-info-left'}>已经选择文件:</div>\n                    {originFile.name}\n                </div>\n                <div className={'file-info-line'}>\n                    <div className={'file-info-left'}>文件大小:</div>\n                    {sizeInfo}\n                </div>\n                <div className={'file-info-line'}>\n                    <div className={'file-info-left'}>文件类型:</div>\n                    {originFile.type}\n                </div>\n            </div>);\n        }\n\n\n        return (<div>\n            <InputFrameworkField param={{\n                getContent: this.getContent,\n                title: title,\n                help: help,\n                action: action,\n            }}/>\n            <br/>\n            <div>{'支持的文件类型:' + (accept ? accept : '*')}</div>\n            <br/>\n            {fileInfo}\n        </div>);\n    }\n}\n\nfunction mapStateToFile(state) {\n    return {}\n}\n\nFieldFile = connect(mapStateToFile)(FieldFile);\n\nexport {FieldFile,};\n","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\nimport $ from 'jquery';\n\nimport './multiple-file.css';\nimport {InputFrameworkField} from \"../InputFramework/InputFramework\";\n\n\n//多文件类型的字段\nclass FieldMultipleFile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n        this.getInputInfo = this.getInputInfo.bind(this);\n    }\n\n    componentDidMount() {\n    }\n\n    getInputInfo() {\n        let resultValue = tool.getAttribute(this, ['props', 'param', 'resultValue',]);\n        let record = tool.getAttribute(this, ['props', 'param', 'record',]);\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n\n        if (action === 'create' || action === 'copy') {\n            let columnCreatePath = tool.getAttribute(this, ['props', 'param', 'columnCreatePath',]);\n            let columnCreate = tool.getStateSpace(columnCreatePath);\n\n            // 兼容获取columnCreate/columnUpdate\n            let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n            if (columnInfo) columnCreate = columnInfo;\n\n            let title = tool.getAttribute(columnCreate, 'title');\n            let help = tool.getAttribute(columnCreate, 'help');\n            if (!help) help = title;\n\n            return {\n                defaultValue: resultValue,\n                title: title,\n                help: help,\n                columnCreate: columnCreate,\n                columnCreatePath: columnCreatePath,\n                record: record,\n                action: action,\n            };\n        } else if (action === 'update') {\n            let columnUpdatePath = tool.getAttribute(this, ['props', 'param', 'columnUpdatePath',]);\n            let columnUpdate = tool.getStateSpace(columnUpdatePath);\n            let title = tool.getAttribute(columnUpdate, 'title');\n            let help = tool.getAttribute(columnUpdate, 'help');\n            if (!help) help = title;\n\n            return {\n                defaultValue: resultValue,\n                title: title,\n                help: help,\n                columnUpdate: columnUpdate,\n                columnUpdatePath: columnUpdatePath,\n                record: record,\n                action: action,\n            };\n        }\n    }\n\n    getContent() {\n\n\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n\n        let inputInfo = this.getInputInfo();\n        let accept = tool.getAttribute(columnsCreate, [columnKey, 'accept']);\n\n        //制作临时id\n        let inputId = Math.ceil(Math.random() * 10).toString();\n\n        return (\n            <div>\n                <input\n                    id={inputId}\n                    className={'file-input'}\n                    type={'file'}\n                    onChange={event => {\n                        let action = inputInfo.action;\n                        let files = event.target.files;\n                        let file = null;\n                        if (files.length > 0) file = event.target.files[0];\n\n                        if (action === 'update') {\n                            let record = tool.getAttribute(infoModal, ['paramModal', 'record',]);\n                            let dataKey = `update__${record.id}`;\n                            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                            let data = tool.getStateSpace(dataPath);\n                            data = Object.assign({}, data);\n                            data[columnKey] = file;\n                            tool.setStateSpace(dataPath, data);\n                        } else if (action === 'create' || action === 'copy') {\n                            let dataKey = `create__x`;\n                            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                            let data = tool.getStateSpace(dataPath);\n                            data = Object.assign({}, data);\n                            data[columnKey] = file;\n                            tool.setStateSpace(dataPath, data);\n                        }\n                    }}\n                    accept={accept ? accept : '*'}\n                />\n\n                <button\n                    className={'file-button'}\n                    onClick={() => $(`#${inputId}`).click()}\n                >\n                    点击选择\n                </button>\n\n            </div>\n        )\n    }\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let record = tool.getAttribute(paramModal, 'record');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n        // 兼容获取columnCreate/columnUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) columnCreate = columnInfo;\n        if (columnInfo) columnUpdate = columnInfo;\n\n\n        let title = tool.getAttribute(columnUpdate, 'title');\n        let help = tool.getAttribute(columnUpdate, 'help');\n        if (action === 'create' || action === 'copy') {\n            title = tool.getAttribute(columnCreate, 'title');\n            help = tool.getAttribute(columnCreate, 'help');\n        }\n\n\n        //得到正在储存的文件\n        let originFile;\n        if (action === 'create' || action === 'copy') {\n            let dataKey = `create__x`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            if (!data) data = {};\n            originFile = data[columnKey];\n        } else if (action === 'update') {\n            let dataKey = `update__${record.id}`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            if (!data) data = {};\n            originFile = data[columnKey];\n        }\n\n\n        let accept = tool.getAttribute(columnCreate, 'accept');\n\n\n        let fileInfo;\n        if (originFile) {\n            //计算文件大小\n            let back = 'B';\n            let fileSize = originFile.size;\n            if (fileSize > 1024) {\n                fileSize = fileSize / 1024;\n                back = 'Kb';\n            }\n            if (fileSize > 1024) {\n                fileSize = fileSize / 1024;\n                back = 'Mb';\n            }\n            if (fileSize > 1024) {\n                fileSize = fileSize / 1024;\n                back = 'Gb';\n            }\n            if (fileSize > 1024) {\n                fileSize = fileSize / 1024;\n                back = 'Pb';\n            }\n            fileSize = fileSize.toFixed(2);\n            let sizeInfo = `${fileSize}${back}`;\n\n            fileInfo = (<div className={'file-infos'}>\n                <div className={'file-info-line'}>\n                    <div className={'file-info-left'}>已经选择文件:</div>\n                    {originFile.name}\n                </div>\n                <div className={'file-info-line'}>\n                    <div className={'file-info-left'}>文件大小:</div>\n                    {sizeInfo}\n                </div>\n                <div className={'file-info-line'}>\n                    <div className={'file-info-left'}>文件类型:</div>\n                    {originFile.type}\n                </div>\n            </div>);\n        }\n\n\n        return (<div>\n            <InputFrameworkField param={{\n                getContent: this.getContent,\n                title: title,\n                help: help,\n                action: action,\n            }}/>\n            <br/>\n            <div>{'支持的文件类型:' + (accept ? accept : '*')}</div>\n            <br/>\n            {fileInfo}\n        </div>);\n    }\n}\n\nfunction mapStateToFile(state) {\n    return {}\n}\n\nFieldMultipleFile = connect(mapStateToFile)(FieldMultipleFile);\n\nexport {FieldMultipleFile,};\n","import React from \"react\";\nimport {Upload} from 'antd';\nimport {InboxOutlined} from '@ant-design/icons';\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nconst {Dragger} = Upload;\n\n\n//图片路径类型的字段\nclass FieldMultipleImage extends React.Component {\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n\n        const props = {\n            name: 'file',\n            multiple: true,\n            onChange: event => {\n                event.file.percent = 100\n                event.file.status = 'done'\n                let fileList = event.fileList;\n                let files = {};\n                for (let i = 0; i < fileList.length; i++) {\n                    let file = fileList[i].originFileObj;\n                    files[file.uid] = true;\n                }\n                let valueHandle = (dataKey, dataValue) => {\n                    if (dataKey.length < 6) return dataValue;\n                    if (dataKey.slice(0, 6) !== 'sign__') return dataValue;\n                    let uid = dataKey.slice(6, dataKey.length);\n                    if (files[uid]) return dataValue;\n                    return undefined;\n                };\n                if (action === 'update') {\n\n                }\n                if (action === 'create' || action === 'copy') {\n                    let dataKey = `create__x`;\n                    let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                    let data = tool.getStateSpace(dataPath);\n                    data = Object.assign({}, data);\n\n                    // 保留有效文件\n                    let dataNew = {};\n                    let dataKeys = Object.keys(data);\n                    for (let i = 0; i < dataKeys.length; i++) {\n                        let dataKey = dataKeys[i];\n                        let dataValue = data[dataKey];\n                        let result = valueHandle(dataKey, dataValue);\n                        if (result !== undefined) {\n                            dataNew[dataKey] = result;\n                        }\n                    }\n                    tool.setStateSpace(dataPath, dataNew);\n                }\n            },\n            beforeUpload: file => {\n                if (!tool.strIsInStr('image', file.type)) {\n                    let information = `${file.name} 不是图片`;\n                    tool.show_info(information);\n                    return Upload.LIST_IGNORE;\n                }\n                return true;\n            },\n            data: file => {\n                if (action === 'update') {\n\n                }\n                if (action === 'create' || action === 'copy') {\n                    let dataKey = `create__x`;\n                    let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                    let data = tool.getStateSpace(dataPath);\n                    data['sign__' + file.uid] = file;\n                    tool.setStateSpace(dataPath, data);\n                }\n            },\n            customRequest: (file) => {\n            },\n        };\n\n        return (<div>\n            <Dragger {...props}>\n                <p className=\"ant-upload-drag-icon\">\n                    <InboxOutlined/>\n                </p>\n                <p className=\"ant-upload-text\">单击选择文件以上传</p>\n                <p className=\"ant-upload-hint\">\n                    支持单次或批量上传\n                </p>\n            </Dragger>\n        </div>);\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nFieldMultipleImage = connect(mapStateToUpdate)(FieldMultipleImage);\n\nexport {FieldMultipleImage,};\n","import React from \"react\";\nimport {Switch} from 'antd';\nimport {CheckOutlined, CloseOutlined} from '@ant-design/icons';\nimport {InputFrameworkField} from \"../InputFramework/InputFramework\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './bool.css';\n\n\n//Bool类型的字段\nclass FieldBool extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n        this.getInputInfo = this.getInputInfo.bind(this);\n        this.getColumnsUpdate = this.getColumnsUpdate.bind(this);\n        this.getColumnsCreate = this.getColumnsCreate.bind(this);\n    }\n\n    getInputInfo() {\n        let resultValue = tool.getAttribute(this, ['props', 'param', 'resultValue',]);\n        let record = tool.getAttribute(this, ['props', 'param', 'record',]);\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n\n        if (action === 'create' || action === 'copy') {\n            let columnCreatePath = tool.getAttribute(this, ['props', 'param', 'columnCreatePath',]);\n            // let columnCreate = tool.getStateSpace(columnCreatePath);\n            let columnCreate = this.getColumnsCreate();\n\n            let title = tool.getAttribute(columnCreate, 'title');\n            let help = tool.getAttribute(columnCreate, 'help');\n            if (!help) help = title;\n\n            return {\n                defaultValue: resultValue,\n                title: title,\n                help: help,\n                columnCreate: columnCreate,\n                columnCreatePath: columnCreatePath,\n                record: record,\n                action: action,\n            };\n        } else if (action === 'update') {\n            let columnUpdatePath = tool.getAttribute(this, ['props', 'param', 'columnUpdatePath',]);\n            // let columnUpdate = tool.getStateSpace(columnUpdatePath);\n            let columnUpdate = this.getColumnsUpdate();\n\n            let title = tool.getAttribute(columnUpdate, 'title');\n            let help = tool.getAttribute(columnUpdate, 'help');\n            if (!help) help = title;\n\n            return {\n                defaultValue: resultValue,\n                title: title,\n                help: help,\n                columnUpdate: columnUpdate,\n                columnUpdatePath: columnUpdatePath,\n                record: record,\n                action: action,\n            };\n        }\n    }\n\n    componentDidMount() {\n        //如果是拷贝模式,需要提前写入数据,而不是等到变化\n        let inputInfo = this.getInputInfo();\n        if (inputInfo.action === 'copy') {\n            let valueKey = `value__x`;\n            let columnCreate = Object.assign({}, inputInfo.columnCreate);\n            columnCreate[valueKey] = inputInfo.defaultValue;\n            tool.setStateSpace(inputInfo.columnCreatePath, columnCreate);\n        }\n    }\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let record = tool.getAttribute(paramModal, 'record');\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n\n        // 得到默认值\n        let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n\n        return (\n            <Switch\n                checkedChildren={<CheckOutlined/>}\n                unCheckedChildren={<CloseOutlined/>}\n                defaultChecked={defaultValue}\n                onChange={event => {\n                    let value = event;\n                    if (action === 'update') {\n                        let dataKey = `update__${record.id}`;\n                        let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                        let data = tool.getStateSpace(dataPath);\n                        data = Object.assign({}, data);\n                        data[columnKey] = value;\n                        tool.setStateSpace(dataPath, data);\n                    } else if (action === 'create' || action === 'copy') {\n                        let dataKey = `create__x`;\n                        let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                        let data = tool.getStateSpace(dataPath);\n                        data = Object.assign({}, data);\n                        data[columnKey] = value;\n                        tool.setStateSpace(dataPath, data);\n                    }\n                }}\n                style={{\n                    marginLeft: '8px',\n                    marginTop: '7px',\n                }}\n            />\n        )\n    }\n\n    getColumnsUpdate() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n\n        //更新字段\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate',]);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n\n        // 是否使用过滤器的字段\n        let filterValue = tool.getAttribute(spacePrivate, 'filterValue');\n        if (!filterValue) {\n            filterValue = tool.getAttribute(spacePublic, ['filters', 'default',])\n        }\n        let filtersInfo = tool.getAttribute(spacePublic, 'filters');\n        let filtersChoices = tool.getAttribute(filtersInfo, 'choices');\n        let filterNow = tool.getAttribute(filtersChoices, filterValue);\n        let filterColumnsUpdate = tool.getAttribute(filterNow, 'columnsUpdate');\n        if (filterValue && filtersInfo && filtersChoices && filterNow && filterColumnsUpdate) {\n            columnsUpdate = filterColumnsUpdate;\n        }\n        return columnsUpdate;\n    }\n\n    getColumnsCreate() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n\n        //创建字段\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate',]);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        // 是否使用过滤器的字段\n        let filterValue = tool.getAttribute(spacePrivate, 'filterValue');\n        if (!filterValue) {\n            filterValue = tool.getAttribute(spacePublic, ['filters', 'default',])\n        }\n        let filtersInfo = tool.getAttribute(spacePublic, 'filters');\n        let filtersChoices = tool.getAttribute(filtersInfo, 'choices');\n        let filterNow = tool.getAttribute(filtersChoices, filterValue);\n        let filterColumnsCreate = tool.getAttribute(filterNow, 'columnsCreate');\n        if (filterValue && filtersInfo && filtersChoices && filterNow && filterColumnsCreate) {\n            columnsCreate = filterColumnsCreate;\n        }\n        return columnsCreate;\n    }\n\n    render() {\n        let columnsUpdate = this.getColumnsUpdate();\n        let columnsCreate = this.getColumnsCreate();\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n\n        let title = tool.getAttribute(columnUpdate, 'title');\n        let help = tool.getAttribute(columnUpdate, 'help');\n        if (action === 'create' || action === 'copy') {\n            title = tool.getAttribute(columnCreate, 'title');\n            help = tool.getAttribute(columnCreate, 'help');\n        }\n\n        // 兼容获取help和title\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        let mainTextHelp = tool.getAttribute(columnInfo, 'help');\n        let mainTitle = tool.getAttribute(columnInfo, 'title');\n        if (mainTextHelp) help = mainTextHelp;\n        if (mainTitle) title = mainTitle;\n\n\n        return <InputFrameworkField param={{\n            getContent: this.getContent,\n            title: title,\n            help: help,\n            action: action,\n            no_show_border: true,\n            // no_show_input: true,\n        }}/>;\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nFieldBool = connect(mapStateToUpdate)(FieldBool);\n\nexport {FieldBool,};\n","import React from \"react\";\nimport {Button} from 'antd';\nimport ArrowDownOutlined from \"@ant-design/icons/lib/icons/ArrowDownOutlined\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './img-path.css';\nimport $ from \"jquery\";\nimport {Image, Tooltip} from \"antd\";\n\n\n//图片路径类型的字段\nclass FieldImagePath extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n    }\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let record = tool.getAttribute(paramModal, 'record');\n        //制作临时id\n        let inputId = Math.ceil(Math.random() * 10).toString();\n\n\n        return (\n            <div className={'fields-img-path-button'}>\n                <input\n                    id={inputId}\n                    className={'file-input'}\n                    type={'file'}\n                    onChange={event => {\n                        let files = event.target.files;\n                        let file = null;\n                        if (files.length > 0) file = event.target.files[0];\n\n                        if (action === 'update') {\n                            let dataKey = `update__${record.id}`;\n                            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                            let data = tool.getStateSpace(dataPath);\n                            data = Object.assign({}, data);\n                            data[columnKey] = file;\n                            tool.setStateSpace(dataPath, data);\n                        } else if (action === 'create' || action === 'copy') {\n                            let dataKey = `create__x`;\n                            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                            let data = tool.getStateSpace(dataPath);\n                            data = Object.assign({}, data);\n                            data[columnKey] = file;\n                            // console.log('file3-------------',file)\n                            tool.setStateSpace(dataPath, data);\n                        }\n                    }}\n                    accept={\"image/gif, image/jpeg,image/jpg,image/png,image/bmp,\"}\n                />\n                <div className={'fields-img-path-button-one'}>\n                    <Button\n                        type={'primary'}\n                        onClick={() => $(`#${inputId}`).click()}\n                    >\n                        点击换图\n                    </Button>\n                </div>\n\n                <div className={'fields-img-path-button-one'}>\n                    <Button\n                        type={'primary'}\n                        onClick={() => {\n                            let dataKey = `create__x`;\n                            if (action === 'update') dataKey = `update__${record.id}`;\n                            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                            let data = tool.getStateSpace(dataPath);\n                            data = Object.assign({}, data);\n                            data[columnKey] = null;\n                            tool.setStateSpace(dataPath, data);\n                        }}\n                        danger\n                    >\n                        置空图片\n                    </Button>\n                </div>\n            </div>\n        )\n    }\n\n    getOriginImgReact() {\n\n        // 得到默认值\n        let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n        let src = tool.get_url(defaultValue);\n        return (<div className={'fields-img-path-img-border'}>\n            {defaultValue ? <Image\n                src={src}\n                className={'fields-img-path-img-border'}\n            /> : null}\n            {defaultValue ? null : '空的'}\n        </div>);\n    }\n\n    getMiddle() {\n\n        return (<div className={'fields-img-path-middle'}>\n            <ArrowDownOutlined/>\n        </div>);\n    }\n\n    getNowImgReact() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let record = tool.getAttribute(paramModal, 'record');\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n\n        //得到正在储存的文件\n        let originFile;\n        if (action === 'create' || action === 'copy') {\n            let dataKey = `create__x`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            if (!data) data = {};\n            originFile = data[columnKey];\n        } else if (action === 'update') {\n            let dataKey = `update__${record.id}`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            if (!data) data = {};\n            originFile = data[columnKey];\n        }\n\n\n        let fileInfo = '还没有选择图片';\n        if (!originFile && originFile !== undefined) fileInfo = '置空';\n        if (originFile) {\n            //计算文件大小\n            let back = 'B';\n            let fileSize = originFile.size;\n            if (fileSize > 1024) {\n                fileSize = fileSize / 1024;\n                back = 'Kb';\n            }\n            if (fileSize > 1024) {\n                fileSize = fileSize / 1024;\n                back = 'Mb';\n            }\n            if (fileSize > 1024) {\n                fileSize = fileSize / 1024;\n                back = 'Gb';\n            }\n            if (fileSize > 1024) {\n                fileSize = fileSize / 1024;\n                back = 'Pb';\n            }\n\n            fileSize = fileSize.toFixed(2);\n            let sizeInfo = `${fileSize}${back}`;\n\n            fileInfo = (<div>\n                <div className={'file-info-line'}>\n                    <div className={'file-info-left'}>图片名称:</div>\n                    {originFile.name}\n                </div>\n                <div className={'file-info-line'}>\n                    <div className={'file-info-left'}>图片大小:</div>\n                    {sizeInfo}\n                </div>\n                <div className={'file-info-line'}>\n                    <div className={'file-info-left'}>图片类型:</div>\n                    {originFile.type}\n                </div>\n            </div>);\n        }\n\n        return (<div className={'fields-img-path-img-border'}>\n            {fileInfo}\n        </div>);\n    }\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n        // 兼容获取columnCreate/columnUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) columnCreate = columnInfo;\n        if (columnInfo) columnUpdate = columnInfo;\n\n        let title = tool.getAttribute(columnUpdate, 'title');\n        let help = tool.getAttribute(columnUpdate, 'help');\n        if (action === 'create' || action === 'copy') {\n            title = tool.getAttribute(columnCreate, 'title');\n            help = tool.getAttribute(columnCreate, 'help');\n        }\n\n\n        let originImgReact = this.getOriginImgReact();\n        let middle = this.getMiddle();\n        let nowImageReact = this.getNowImgReact();\n\n        let content = this.getContent();\n\n\n        return (<div>\n            <Tooltip title={help}>\n                <div style={{marginBottom: '5px',}}>\n                    <div className={'title'}>\n                        {title}\n                    </div>\n                </div>\n            </Tooltip>\n            {originImgReact}\n            {middle}\n            {nowImageReact}\n\n            {content}\n        </div>);\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nFieldImagePath = connect(mapStateToUpdate)(FieldImagePath);\n\nexport {FieldImagePath,};\n","import React from \"react\";\nimport {Button} from 'antd';\nimport ArrowDownOutlined from \"@ant-design/icons/lib/icons/ArrowDownOutlined\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './img-show.css';\nimport $ from \"jquery\";\nimport {Image, Tooltip} from \"antd\";\n\n\n//图片路径类型的字段\nclass FieldImageShow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n        this.state = {\n            nowSrc: null,\n        };\n    }\n\n//获取文件路径\n    getObjectURL(file) {\n        let url = null\n        if (window.createObjectURL !== undefined) { // basic\n            url = window.createObjectURL(file)\n        } else if (window.URL !== undefined) { // mozilla(firefox)\n            url = window.URL.createObjectURL(file)\n        } else if (window.webkitURL !== undefined) { // webkit or chrome\n            url = window.webkitURL.createObjectURL(file)\n        }\n        return url;\n    }\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let record = tool.getAttribute(paramModal, 'record');\n        //制作临时id\n        let inputId = Math.ceil(Math.random() * 10).toString();\n\n\n        return (\n            <div className={'fields-img-path-button'}>\n                <input\n                    id={inputId}\n                    className={'file-input'}\n                    type={'file'}\n                    onChange={event => {\n                        let files = event.target.files;\n                        let file = null;\n                        if (files.length > 0) file = event.target.files[0];\n                        let nowSrc = this.getObjectURL(file);\n                        this.setState(Object.assign({}, this.state, {\n                            nowSrc: nowSrc,\n                        }));\n                        if (action === 'update') {\n                            let dataKey = `update__${record.id}`;\n                            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                            let data = tool.getStateSpace(dataPath);\n                            data = Object.assign({}, data);\n                            data[columnKey] = file;\n\n                            tool.setStateSpace(dataPath, data);\n                        } else if (action === 'create' || action === 'copy') {\n                            let dataKey = `create__x`;\n                            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                            let data = tool.getStateSpace(dataPath);\n                            data = Object.assign({}, data);\n                            data[columnKey] = file;\n                            // console.log('file3-------------',file)\n                            tool.setStateSpace(dataPath, data);\n                        }\n                    }}\n                    accept={\"image/gif, image/jpeg,image/jpg,image/png,image/bmp,\"}\n                />\n                <div className={'fields-img-path-button-one'}>\n                    <Button\n                        type={'primary'}\n                        onClick={() => $(`#${inputId}`).click()}\n                    >\n                        点击换图\n                    </Button>\n                </div>\n\n                <div className={'fields-img-path-button-one'}>\n                    <Button\n                        type={'primary'}\n                        onClick={() => {\n                            let dataKey = `create__x`;\n                            if (action === 'update') dataKey = `update__${record.id}`;\n                            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                            let data = tool.getStateSpace(dataPath);\n                            data = Object.assign({}, data);\n                            data[columnKey] = null;\n                            tool.setStateSpace(dataPath, data);\n                        }}\n                        danger\n                    >\n                        置空图片\n                    </Button>\n                </div>\n            </div>\n        )\n    }\n\n    getOriginImgReact() {\n\n        // 得到默认值\n        let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n        let src = tool.get_url(defaultValue);\n        return (<div className={'fields-img-path-img-border'}>\n            {defaultValue ? <Image\n                src={src}\n                className={'fields-img-path-img-border'}\n            /> : null}\n            {defaultValue ? null : '空的'}\n        </div>);\n    }\n\n    getMiddle() {\n\n        return (<div className={'fields-img-path-middle'}>\n            <ArrowDownOutlined/>\n        </div>);\n    }\n\n    getNowImgReact() {\n        let nowSrc = this.state.nowSrc;\n\n        return (<div className={'fields-img-path-img-border'}>\n            {nowSrc ? <Image\n                src={nowSrc}\n                className={'fields-img-path-img-border'}\n            /> : null}\n            {nowSrc ? null : '未选择'}\n        </div>);\n    }\n\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n        // 兼容获取columnCreate/columnUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) columnCreate = columnInfo;\n        if (columnInfo) columnUpdate = columnInfo;\n\n        let title = tool.getAttribute(columnUpdate, 'title');\n        let help = tool.getAttribute(columnUpdate, 'help');\n        if (action === 'create' || action === 'copy') {\n            title = tool.getAttribute(columnCreate, 'title');\n            help = tool.getAttribute(columnCreate, 'help');\n        }\n\n\n        let originImgReact = this.getOriginImgReact();\n        let middle = this.getMiddle();\n        let nowImageReact = this.getNowImgReact();\n\n        let content = this.getContent();\n\n\n        return (<div>\n            <Tooltip title={help}>\n                <div style={{marginBottom: '5px',}}>\n                    <div className={'title'}>\n                        {title}\n                    </div>\n                </div>\n            </Tooltip>\n            {originImgReact}\n            {middle}\n            {nowImageReact}\n\n            {content}\n        </div>);\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nFieldImageShow = connect(mapStateToUpdate)(FieldImageShow);\n\nexport\n{\n    FieldImageShow,\n}\n    ;\n","import React from \"react\";\n\nimport {InputFrameworkField} from \"../InputFramework/InputFramework\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './dynamic.css';\nimport {Tooltip} from \"antd\";\n\n\n//多选类型的字段\nclass FieldDynamic extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n    }\n\n    updateChoices() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n        let record = tool.getAttribute(paramModal, 'record');\n        let fatherRecord = tool.getAttribute(paramModal, 'fatherRecord');\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdatePath = columnsUpdatePath.concat([columnKey]);\n        let columnCreatePath = columnsCreatePath.concat([columnKey]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n        // 兼容获得columnUpdate/columnCreate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) columnUpdate = columnInfo;\n        if (columnInfo) columnCreate = columnInfo;\n\n\n        if (action === 'update') {\n            let path = tool.getAttribute(columnUpdate, 'path');\n            if (!path) return null;\n\n\n            //字段\n            let url = tool.get_url(path, false, {\n                line_id: record.id,\n                father_id: fatherRecord.id,\n                page_size: 10000,\n            });\n\n            let requestParam = {\n                url: url,\n                success: data => {\n                    columnUpdate = Object.assign({}, columnUpdate);\n                    columnUpdate['choices'] = data.results;\n                    tool.setStateSpace(columnUpdatePath, columnUpdate);\n                },\n                error: data => {\n                    tool.show_error(data);\n                },\n            };\n            tool.get(requestParam);\n        } else if (action === 'create' || action === 'copy') {\n            let path = tool.getAttribute(columnCreate, 'path');\n            if (!path) return null;\n\n            let url = tool.get_url(path, false, {page_size: 10000,});\n            let requestParam = {\n                url: url,\n                success: data => {\n                    columnCreate = Object.assign({}, columnCreate);\n                    columnCreate['choices'] = data.results;\n                    tool.setStateSpace(columnCreatePath, columnCreate);\n                },\n                error: data => {\n                    tool.show_error(data);\n                },\n            };\n            tool.get(requestParam);\n        }\n    }\n\n    componentDidMount() {\n        this.updateChoices();\n    }\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let paramModalPath = infoModalPath.concat(['paramModal']);\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n        let record = tool.getAttribute(paramModal, 'record');\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let title = tool.getAttribute(columnUpdate, 'title');\n        let help = tool.getAttribute(columnUpdate, 'help');\n\n        // 兼容获得columnUpdate/title/help\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        let mainTextHelp = tool.getAttribute(columnInfo, 'help');\n        let mainTitle = tool.getAttribute(columnInfo, 'title');\n        if (mainTextHelp) help = mainTextHelp;\n        if (mainTitle) title = mainTitle;\n        if (columnInfo) columnUpdate = columnInfo;\n        if (columnInfo) columnCreate = columnInfo;\n\n        let defaultValues = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n        if (!defaultValues) defaultValues = [];\n        let choices = tool.getAttribute(columnCreate, 'choices');\n        if (action === 'update') choices = tool.getAttribute(columnUpdate, 'choices');\n\n\n        let choiceReacts = [];\n        if (!choices) choices = [];\n        for (let choice of choices) {\n\n            let defaultValue;\n            let index = defaultValues.findIndex(item => item.id === choice.id);\n            if (index !== -1) defaultValue = defaultValues[index].value;\n\n            let onChange = (event, choice) => {\n                let dataKey = `create__x`;\n                if (action === 'update') dataKey = `update__${record.id}`;\n                let valuePath = paramModalPath.concat([dataKey, columnKey,]);\n                let value = tool.getStateSpace(valuePath);\n                value = Object.assign({}, value);\n                value[choice.key] = event.target.value;\n                tool.setStateSpace(valuePath, value);\n            };\n            let input_style = {width: '100%', height: '100%', border: 'none',};\n            let getInputFrameworkContent = () => (<input\n                onChange={event => onChange(event, choice)}\n                style={input_style}\n                defaultValue={defaultValue}\n            />);\n            choiceReacts.push(<div style={{marginBottom: '5px',}} key={choice.id}>\n                <InputFrameworkField\n                    param={{\n                        getContent: getInputFrameworkContent,\n                        title: choice.help,\n                        help: help,\n                        action: action,\n                    }}/>\n            </div>);\n        }\n\n\n        return (\n            <div>\n                <Tooltip title={help}>\n                    <div>\n                        <div className={'title'}>\n                            {title}\n                        </div>\n                    </div>\n                </Tooltip>\n                <br/>\n                {choiceReacts}\n            </div>\n\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {this.getContent()}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToDynamic(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nFieldDynamic = connect(mapStateToDynamic)(FieldDynamic);\n\nexport {FieldDynamic,};\n","import React from \"react\";\nimport {DatePicker, ConfigProvider,} from 'antd';\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport 'moment/locale/zh-cn';\nimport moment from 'moment';\nimport {InputFrameworkField} from \"../InputFramework/InputFramework\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './time.css';\n\n\n//Time类型的字段\nclass FieldTime extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n    }\n\n    componentDidMount() {\n        //如果是拷贝模式,需要提前写入数据,而不是等到变化\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        if (action === 'copy') {\n            let infoModalPath = ['infoModal'];\n            let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n            let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n            let dataKey = `create__x`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            data = Object.assign({}, data);\n            data[columnKey] = defaultValue;\n            tool.setStateSpace(dataPath, data);\n        }\n    }\n\n    getDefaultValue() {\n        let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n        if (!defaultValue) return null;\n        let moment_obj = moment(defaultValue, 'YYYY-MM-DDTHH:mm:ss');\n        if (!moment_obj) return null;\n        return moment_obj;\n    }\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let record = tool.getAttribute(paramModal, 'record');\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n\n        // 得到默认值\n        let defaultValue = this.getDefaultValue()\n\n        return (\n            <ConfigProvider locale={zh_CN}>\n                <DatePicker\n                    style={{\n                        width: '100%',\n                    }}\n                    showTime\n                    format=\"YYYY-MM-DD HH:mm:ss\"\n                    placeholder=\"Start\"\n                    defaultValue={defaultValue}\n                    onChange={time_obj => {\n                        let value = moment(time_obj).format('YYYY-MM-DDTHH:mm:ssZ');\n                        if (action === 'update') {\n                            let dataKey = `update__${record.id}`;\n                            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                            let data = tool.getStateSpace(dataPath);\n                            data = Object.assign({}, data);\n                            data[columnKey] = value;\n                            tool.setStateSpace(dataPath, data);\n                        } else if (action === 'create' || action === 'copy') {\n                            let dataKey = `create__x`;\n                            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                            let data = tool.getStateSpace(dataPath);\n                            data = Object.assign({}, data);\n                            data[columnKey] = value;\n                            tool.setStateSpace(dataPath, data);\n                        }\n                    }}\n                />\n            </ConfigProvider>\n\n\n        )\n    }\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        // 兼容获取columnsCreate/columnsUpdate\n        // let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        // if (columnInfo) columnsCreate = columnInfo;\n        // if (columnInfo) columnsUpdate = columnInfo;\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n        // 兼容获取columnCreate/columnUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) columnCreate = columnInfo;\n        if (columnInfo) columnUpdate = columnInfo;\n\n\n        let title = tool.getAttribute(columnUpdate, 'title');\n        let help = tool.getAttribute(columnUpdate, 'help');\n        if (action === 'create' || action === 'copy') {\n            title = tool.getAttribute(columnCreate, 'title');\n            help = tool.getAttribute(columnCreate, 'help');\n        }\n\n        return <InputFrameworkField param={{\n            getContent: this.getContent,\n            title: title,\n            help: help,\n            action: action,\n        }}/>;\n    }\n}\n\nfunction mapStateToTime(state) {\n    return {}\n}\n\nFieldTime = connect(mapStateToTime)(FieldTime);\n\nexport {FieldTime,};\n","import React from \"react\";\nimport {DatePicker, ConfigProvider,} from 'antd';\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport 'moment/locale/zh-cn';\nimport moment from 'moment';\nimport {InputFrameworkField} from \"../InputFramework/InputFramework\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './time.css';\n\n\n//Time类型的字段\nclass FieldTimeYear extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n    }\n\n    componentDidMount() {\n        //如果是拷贝模式,需要提前写入数据,而不是等到变化\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        if (action === 'copy') {\n            let infoModalPath = ['infoModal'];\n            let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n            let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n            let dataKey = `create__x`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            data = Object.assign({}, data);\n            data[columnKey] = defaultValue;\n            tool.setStateSpace(dataPath, data);\n        }\n    }\n\n    getDefaultValue() {\n        let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n        if (!defaultValue) return null;\n        let moment_obj = moment(defaultValue, 'YYYY-MM-DDTHH:mm:ss');\n        if (!moment_obj) return null;\n        return moment_obj;\n    }\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let record = tool.getAttribute(paramModal, 'record');\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n\n        // 得到默认值\n        let defaultValue = this.getDefaultValue()\n\n        return (\n            <ConfigProvider locale={zh_CN}>\n                <DatePicker\n                    style={{\n                        width: '100%',\n                    }}\n                    showTime\n                    // format=\"YYYY-MM-DD HH:mm:ss\"\n                    placeholder=\"Start\"\n                    defaultValue={defaultValue}\n                    onChange={time_obj => {\n                        let value = moment(time_obj).format('YYYY-MM-DDTHH:mm:ssZ');\n                        if (action === 'update') {\n                            let dataKey = `update__${record.id}`;\n                            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                            let data = tool.getStateSpace(dataPath);\n                            data = Object.assign({}, data);\n                            data[columnKey] = value;\n                            tool.setStateSpace(dataPath, data);\n                        } else if (action === 'create' || action === 'copy') {\n                            let dataKey = `create__x`;\n                            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                            let data = tool.getStateSpace(dataPath);\n                            data = Object.assign({}, data);\n                            data[columnKey] = value;\n                            tool.setStateSpace(dataPath, data);\n                        }\n                    }}\n                    picker=\"year\"\n                />\n            </ConfigProvider>\n\n\n        )\n    }\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        // 兼容获取columnsCreate/columnsUpdate\n        // let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        // if (columnInfo) columnsCreate = columnInfo;\n        // if (columnInfo) columnsUpdate = columnInfo;\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n        // 兼容获取columnCreate/columnUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) columnCreate = columnInfo;\n        if (columnInfo) columnUpdate = columnInfo;\n\n\n        let title = tool.getAttribute(columnUpdate, 'title');\n        let help = tool.getAttribute(columnUpdate, 'help');\n        if (action === 'create' || action === 'copy') {\n            title = tool.getAttribute(columnCreate, 'title');\n            help = tool.getAttribute(columnCreate, 'help');\n        }\n\n        return <InputFrameworkField param={{\n            getContent: this.getContent,\n            title: title,\n            help: help,\n            action: action,\n        }}/>;\n    }\n}\n\nfunction mapStateToTime(state) {\n    return {}\n}\n\nFieldTimeYear = connect(mapStateToTime)(FieldTimeYear);\n\nexport {FieldTimeYear,};\n","import React from \"react\";\nimport {DatePicker, ConfigProvider,} from 'antd';\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport 'moment/locale/zh-cn';\nimport moment from 'moment';\nimport {InputFrameworkField} from \"../InputFramework/InputFramework\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './time-day.css';\n\n\n//Time类型的字段\nclass FieldTimeDay extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n    }\n\n    componentDidMount() {\n        //如果是拷贝模式,需要提前写入数据,而不是等到变化\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        if (action === 'copy') {\n            let infoModalPath = ['infoModal'];\n            let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n            let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n            let dataKey = `create__x`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            data = Object.assign({}, data);\n            data[columnKey] = defaultValue;\n            tool.setStateSpace(dataPath, data);\n        }\n    }\n\n    getDefaultValue() {\n        let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n        if (!defaultValue) return null;\n        let moment_obj = moment(defaultValue, 'YYYY-MM-DDTHH:mm:ss');\n        if (!moment_obj) return null;\n        return moment_obj;\n    }\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let record = tool.getAttribute(paramModal, 'record');\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n\n        // 得到默认值\n        let defaultValue = this.getDefaultValue()\n\n        return (\n            <ConfigProvider locale={zh_CN}>\n                <DatePicker\n                    style={{\n                        width: '100%',\n                    }}\n                    // showTime\n                    placeholder=\"Start\"\n                    defaultValue={defaultValue}\n                    onChange={time_obj => {\n                        let value = moment(time_obj).format('YYYY-MM-DD');\n                        if (action === 'update') {\n                            let dataKey = `update__${record.id}`;\n                            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                            let data = tool.getStateSpace(dataPath);\n                            data = Object.assign({}, data);\n                            data[columnKey] = value;\n                            tool.setStateSpace(dataPath, data);\n                        } else if (action === 'create' || action === 'copy') {\n                            let dataKey = `create__x`;\n                            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                            let data = tool.getStateSpace(dataPath);\n                            data = Object.assign({}, data);\n                            data[columnKey] = value;\n                            tool.setStateSpace(dataPath, data);\n                        }\n                    }}\n                />\n            </ConfigProvider>\n\n\n        )\n    }\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        // 兼容获取columnsCreate/columnsUpdate\n        // let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        // if (columnInfo) columnsCreate = columnInfo;\n        // if (columnInfo) columnsUpdate = columnInfo;\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n        // 兼容获取columnCreate/columnUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) columnCreate = columnInfo;\n        if (columnInfo) columnUpdate = columnInfo;\n\n\n        let title = tool.getAttribute(columnUpdate, 'title');\n        let help = tool.getAttribute(columnUpdate, 'help');\n        if (action === 'create' || action === 'copy') {\n            title = tool.getAttribute(columnCreate, 'title');\n            help = tool.getAttribute(columnCreate, 'help');\n        }\n\n        return <InputFrameworkField param={{\n            getContent: this.getContent,\n            title: title,\n            help: help,\n            action: action,\n        }}/>;\n    }\n}\n\nfunction mapStateToTime(state) {\n    return {}\n}\n\nFieldTimeDay = connect(mapStateToTime)(FieldTimeDay);\n\nexport {FieldTimeDay,};\n","import React from \"react\";\nimport {Select} from 'antd';\nimport {InputFrameworkField} from \"../InputFramework/InputFramework\";\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\nimport './single-search-choices.css';\n\n\n//单选类型的字段(可以搜索的)\nclass FieldSingleSearchChoices extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n    }\n\n    updateChoices(extraParam) {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n        let record = tool.getAttribute(paramModal, 'record');\n        let fatherRecord = tool.getAttribute(paramModal, 'fatherRecord');\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdatePath = columnsUpdatePath.concat([columnKey]);\n        let columnCreatePath = columnsCreatePath.concat([columnKey]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n        // 兼容获取columnCreate/columnUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) columnCreate = columnInfo;\n        if (columnInfo) columnUpdate = columnInfo;\n\n        if (action === 'update') {\n            let path = tool.getAttribute(columnUpdate, 'path');\n            if (!path) return null;\n            let urlParam = Object.assign({\n                line_id: record.id,\n                father_id: tool.getAttribute(fatherRecord, 'id'),\n                record_id: record.id,\n                page_size: 10000,\n            }, extraParam);\n\n            let url = tool.get_url(path, false, urlParam);\n\n            let requestParam = {\n                url: url,\n                success: data => {\n                    columnUpdate = Object.assign({}, columnUpdate);\n                    columnUpdate['choices'] = data.results;\n                    tool.setStateSpace(columnUpdatePath, columnUpdate);\n                },\n                error: data => {\n                    tool.show_error(data);\n                },\n            };\n            tool.get(requestParam);\n        } else if (action === 'create' || action === 'copy') {\n            let path = tool.getAttribute(columnCreate, 'path');\n            if (!path) return null;\n\n            let urlParam = Object.assign({\n                father_id: tool.getAttribute(fatherRecord, 'id'),\n                page_size: 10000,\n            }, extraParam);\n\n            let url = tool.get_url(path, false, urlParam);\n\n            let requestParam = {\n                url: url,\n                success: data => {\n                    columnCreate = Object.assign({}, columnCreate);\n                    columnCreate['choices'] = data.results;\n                    tool.setStateSpace(columnCreatePath, columnCreate);\n                },\n                error: data => {\n                    tool.show_error(data);\n                },\n            };\n            tool.get(requestParam);\n        }\n\n    }\n\n    componentDidMount() {\n        this.updateChoices();\n\n        //如果是拷贝模式,需要提前写入数据,而不是等到变化\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        if (action === 'copy') {\n            let infoModalPath = ['infoModal'];\n            let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n            let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n            let dataKey = `create__x`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            data = Object.assign({}, data);\n            data[columnKey] = defaultValue;\n            tool.setStateSpace(dataPath, data);\n        }\n    }\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let record = tool.getAttribute(paramModal, 'record');\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n\n\n        let choices = tool.getAttribute(columnCreate, 'choices');\n        if (action === 'update') choices = tool.getAttribute(columnUpdate, 'choices');\n\n        // 是否是必须的\n        let required = tool.getAttribute(columnCreate, 'required');\n        if (action === 'update') required = tool.getAttribute(columnUpdate, 'required');\n\n        // 默认值\n        let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n        if (Object.prototype.toString.call(defaultValue) === '[object Object]') defaultValue = null;\n\n        let choiceReacts = [<Select.Option value={'0'} key={-1}>{'不选择'}</Select.Option>];\n        if (required) choiceReacts = [];\n        if (!choices) choices = [];\n        for (let choice of choices) {\n            choiceReacts.push(\n                <Select.Option value={choice.id} key={choice.id}>{choice.help}</Select.Option>\n            );\n        }\n        if (action === 'create') defaultValue = false;\n\n        return (\n            <Select\n                showSearch\n                className={'choice-input'}\n                defaultValue={defaultValue}\n                filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n\n                onChange={target_value => {\n                    if (target_value === '0') target_value = null;\n\n                    if (action === 'update') {\n                        let dataKey = `update__${record.id}`;\n                        let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                        let data = tool.getStateSpace(dataPath);\n                        data = Object.assign({}, data);\n                        data[columnKey] = target_value;\n                        tool.setStateSpace(dataPath, data);\n                    } else if (action === 'create' || action === 'copy') {\n                        let dataKey = `create__x`;\n                        let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                        let data = tool.getStateSpace(dataPath);\n                        data = Object.assign({}, data);\n                        data[columnKey] = target_value;\n                        tool.setStateSpace(dataPath, data);\n                    }\n                }}\n            >\n                {choiceReacts}\n            </Select>\n        );\n    }\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n\n        let title = tool.getAttribute(columnUpdate, 'title');\n        let help = tool.getAttribute(columnUpdate, 'help');\n        if (action === 'create' || action === 'copy') {\n            title = tool.getAttribute(columnCreate, 'title');\n            help = tool.getAttribute(columnCreate, 'help');\n        }\n\n\n        return <InputFrameworkField param={{\n            getContent: this.getContent,\n            title: title,\n            help: help,\n            action: action,\n        }}/>;\n    }\n}\n\nfunction mapStateToSingle(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nFieldSingleSearchChoices = connect(mapStateToSingle)(FieldSingleSearchChoices);\n\nexport {FieldSingleSearchChoices,};\n","import React from \"react\";\nimport {Cascader, Select} from 'antd';\nimport {InputFrameworkField} from \"../InputFramework/InputFramework\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './single-deep-new-choices.css';\n\n\n//单选类型的字段(简短的)\nclass FieldSingleDeepChoices extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getContent = this.getContent.bind(this);\n    }\n\n    updateChoices(extraParam) {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n        let record = tool.getAttribute(paramModal, 'record');\n        let fatherRecord = tool.getAttribute(paramModal, 'fatherRecord');\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdatePath = columnsUpdatePath.concat([columnKey]);\n        let columnCreatePath = columnsCreatePath.concat([columnKey]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n        // 兼容获取columnCreate/columnUpdate\n        let columnInfo = tool.getAttribute(this, ['props', 'param', 'columnInfo',]);\n        if (columnInfo) columnCreate = columnInfo;\n        if (columnInfo) columnUpdate = columnInfo;\n\n        if (action === 'update') {\n            let path = tool.getAttribute(columnUpdate, 'path');\n            if (!path) return null;\n\n            let urlParam = Object.assign({\n                line_id: record.id,\n                father_id: tool.getAttribute(fatherRecord, 'id'),\n                record_id: record.id,\n                page_size: 10000,\n            }, extraParam);\n\n            let url = tool.get_url(path, false, urlParam);\n\n            let requestParam = {\n                url: url,\n                success: data => {\n                    columnUpdate = Object.assign({}, columnUpdate);\n                    // columnUpdate['choices'] = data.results;\n                    columnUpdate['choices'] = data;\n                    tool.setStateSpace(columnUpdatePath, columnUpdate);\n                },\n                error: data => {\n                    tool.show_error(data);\n                },\n            };\n            tool.get(requestParam);\n        } else if (action === 'create' || action === 'copy') {\n            let path = tool.getAttribute(columnCreate, 'path');\n            if (!path) return null;\n\n            let urlParam = Object.assign({\n                father_id: tool.getAttribute(fatherRecord, 'id'),\n                page_size: 10000,\n            }, extraParam);\n\n            let url = tool.get_url(path, false, urlParam);\n\n            let requestParam = {\n                url: url,\n                success: data => {\n                    columnCreate = Object.assign({}, columnCreate);\n                    columnCreate['choices'] = data;\n                    tool.setStateSpace(columnCreatePath, columnCreate);\n                },\n                error: data => {\n                    tool.show_error(data);\n                },\n            };\n            tool.get(requestParam);\n        }\n\n    }\n\n    componentDidMount() {\n        this.updateChoices();\n\n        //如果是拷贝模式,需要提前写入数据,而不是等到变化\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        if (action === 'copy') {\n            let infoModalPath = ['infoModal'];\n            let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n            let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n            let dataKey = `create__x`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            data = Object.assign({}, data);\n            data[columnKey] = defaultValue;\n            tool.setStateSpace(dataPath, data);\n        }\n    }\n\n    getContent() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let record = tool.getAttribute(paramModal, 'record');\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n\n\n        let choices = tool.getAttribute(columnCreate, 'choices');\n        if (action === 'update') choices = tool.getAttribute(columnUpdate, 'choices');\n\n        // 是否是必须的\n        let required = tool.getAttribute(columnCreate, 'required');\n        if (action === 'update') required = tool.getAttribute(columnUpdate, 'required');\n\n        // 默认值\n        let defaultValue = tool.getAttribute(this, ['props', 'param', 'defaultValue',]);\n        if (Object.prototype.toString.call(defaultValue) === '[object Object]') defaultValue = null;\n\n        let choiceReacts = [<Select.Option value={'0'} key={-1}>{'不选择'}</Select.Option>];\n        if (required) choiceReacts = [];\n        if (!choices) choices = [];\n        for (let choice of choices) {\n            choiceReacts.push(\n                <Select.Option value={choice.id} key={choice.id}>{choice.help}</Select.Option>\n            );\n        }\n        if (action === 'create') defaultValue = false;\n        // console.log('cs--------', choices)\n\n        return <Cascader\n            options={choices}\n            onChange={target_value => {\n                target_value = target_value[target_value.length - 1];\n                if (target_value === '0') target_value = null;\n\n                if (action === 'update') {\n                    let dataKey = `update__${record.id}`;\n                    let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                    let data = tool.getStateSpace(dataPath);\n                    data = Object.assign({}, data);\n                    data[columnKey] = target_value;\n                    tool.setStateSpace(dataPath, data);\n                } else if (action === 'create' || action === 'copy') {\n                    let dataKey = `create__x`;\n                    let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n                    let data = tool.getStateSpace(dataPath);\n                    data = Object.assign({}, data);\n                    data[columnKey] = target_value;\n                    tool.setStateSpace(dataPath, data);\n                }\n            }}\n            placeholder=\"Please select\"/>;\n    }\n\n    render() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate']);\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate']);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n\n\n        let title = tool.getAttribute(columnUpdate, 'title');\n        let help = tool.getAttribute(columnUpdate, 'help');\n        if (action === 'create' || action === 'copy') {\n            title = tool.getAttribute(columnCreate, 'title');\n            help = tool.getAttribute(columnCreate, 'help');\n        }\n\n\n        return <InputFrameworkField param={{\n            getContent: this.getContent,\n            title: title,\n            help: help,\n            action: action,\n        }}/>;\n    }\n}\n\nfunction mapStateToSingle(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nlet FieldSingleDeepNewChoices = connect(mapStateToSingle)(FieldSingleDeepChoices);\n\nexport {FieldSingleDeepNewChoices,};\n","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\n\n//React类型的字段\nclass FieldReact extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.getInputInfo = this.getInputInfo.bind(this);\n        this.getColumnsUpdate = this.getColumnsUpdate.bind(this);\n        this.getColumnsCreate = this.getColumnsCreate.bind(this);\n    }\n\n    getInputInfo() {\n        let resultValue = tool.getAttribute(this, ['props', 'param', 'resultValue',]);\n        let record = tool.getAttribute(this, ['props', 'param', 'record',]);\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n\n        if (action === 'create' || action === 'copy') {\n            let columnCreatePath = tool.getAttribute(this, ['props', 'param', 'columnCreatePath',]);\n            // let columnCreate = tool.getStateSpace(columnCreatePath);\n            let columnCreate = this.getColumnsCreate();\n\n            let title = tool.getAttribute(columnCreate, 'title');\n            let help = tool.getAttribute(columnCreate, 'help');\n            if (!help) help = title;\n\n            return {\n                defaultValue: resultValue,\n                title: title,\n                help: help,\n                columnCreate: columnCreate,\n                columnCreatePath: columnCreatePath,\n                record: record,\n                action: action,\n            };\n        } else if (action === 'update') {\n            let columnUpdatePath = tool.getAttribute(this, ['props', 'param', 'columnUpdatePath',]);\n            // let columnUpdate = tool.getStateSpace(columnUpdatePath);\n            let columnUpdate = this.getColumnsUpdate();\n\n            let title = tool.getAttribute(columnUpdate, 'title');\n            let help = tool.getAttribute(columnUpdate, 'help');\n            if (!help) help = title;\n\n            return {\n                defaultValue: resultValue,\n                title: title,\n                help: help,\n                columnUpdate: columnUpdate,\n                columnUpdatePath: columnUpdatePath,\n                record: record,\n                action: action,\n            };\n        }\n    }\n\n    componentDidMount() {\n        //如果是拷贝模式,需要提前写入数据,而不是等到变化\n        let inputInfo = this.getInputInfo();\n        if (inputInfo.action === 'copy') {\n            let valueKey = `value__x`;\n            let columnCreate = Object.assign({}, inputInfo.columnCreate);\n            columnCreate[valueKey] = inputInfo.defaultValue;\n            tool.setStateSpace(inputInfo.columnCreatePath, columnCreate);\n        }\n    }\n\n    onChange(value) {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let record = tool.getAttribute(paramModal, 'record');\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n\n        if (action === 'update') {\n            let dataKey = `update__${record.id}`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            data = Object.assign({}, data);\n            data[columnKey] = value;\n            tool.setStateSpace(dataPath, data);\n        } else if (action === 'create' || action === 'copy') {\n            let dataKey = `create__x`;\n            let dataPath = infoModalPath.concat(['paramModal', dataKey]);\n            let data = tool.getStateSpace(dataPath);\n            data = Object.assign({}, data);\n            data[columnKey] = value;\n            tool.setStateSpace(dataPath, data);\n        }\n    }\n\n    getColumnsUpdate() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n\n        //更新字段\n        let columnsUpdatePath = spacePublicPath.concat(['columnsUpdate',]);\n        let columnsUpdate = tool.getStateSpace(columnsUpdatePath);\n\n        // 是否使用过滤器的字段\n        let filterValue = tool.getAttribute(spacePrivate, 'filterValue');\n        if (!filterValue) {\n            filterValue = tool.getAttribute(spacePublic, ['filters', 'default',])\n        }\n        let filtersInfo = tool.getAttribute(spacePublic, 'filters');\n        let filtersChoices = tool.getAttribute(filtersInfo, 'choices');\n        let filterNow = tool.getAttribute(filtersChoices, filterValue);\n        let filterColumnsUpdate = tool.getAttribute(filterNow, 'columnsUpdate');\n        if (filterValue && filtersInfo && filtersChoices && filterNow && filterColumnsUpdate) {\n            columnsUpdate = filterColumnsUpdate;\n        }\n        return columnsUpdate;\n    }\n\n    getColumnsCreate() {\n        let infoModalPath = ['infoModal'];\n        let infoModal = tool.getStateSpace(infoModalPath);\n        let paramModal = tool.getAttribute(infoModal, 'paramModal');\n        let spacePublicPath = tool.getAttribute(paramModal, 'spacePublicPath');\n        let spacePrivatePath = tool.getAttribute(paramModal, 'spacePrivatePath');\n        let spacePrivate = tool.getStateSpace(spacePrivatePath);\n        let spacePublic = tool.getStateSpace(spacePublicPath);\n\n        //创建字段\n        let columnsCreatePath = spacePublicPath.concat(['columnsCreate',]);\n        let columnsCreate = tool.getStateSpace(columnsCreatePath);\n\n        // 是否使用过滤器的字段\n        let filterValue = tool.getAttribute(spacePrivate, 'filterValue');\n        if (!filterValue) {\n            filterValue = tool.getAttribute(spacePublic, ['filters', 'default',])\n        }\n        let filtersInfo = tool.getAttribute(spacePublic, 'filters');\n        let filtersChoices = tool.getAttribute(filtersInfo, 'choices');\n        let filterNow = tool.getAttribute(filtersChoices, filterValue);\n        let filterColumnsCreate = tool.getAttribute(filterNow, 'columnsCreate');\n        if (filterValue && filtersInfo && filtersChoices && filterNow && filterColumnsCreate) {\n            columnsCreate = filterColumnsCreate;\n        }\n        return columnsCreate;\n    }\n\n    render() {\n        let columnsUpdate = this.getColumnsUpdate();\n        let columnsCreate = this.getColumnsCreate();\n        let action = tool.getAttribute(this, ['props', 'param', 'action',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let columnUpdate = tool.getAttribute(columnsUpdate, columnKey);\n        let columnCreate = tool.getAttribute(columnsCreate, columnKey);\n        let getReact = tool.getAttribute(columnUpdate, 'react');\n        if (action === 'create' || action === 'copy') getReact = tool.getAttribute(columnCreate, 'react');\n        let param = Object.assign({}, this.props.param, {\n            onChange: this.onChange,\n        });\n        return getReact(param);\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nFieldReact = connect(mapStateToUpdate)(FieldReact);\n\nexport {FieldReact,};\n","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './char.css';\n\n\n//Char类型的字段\nclass FieldDetailChar extends React.Component {\n\n    getContent() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let recordId = tool.getAttribute(this, ['props', 'param', 'record', 'id',]);\n\n        let columnsDetailLinePath = spacePublicPath.concat(['columnsDetailLine']);\n        let columnsDetailLineSpace = tool.getStateSpace(columnsDetailLinePath);\n\n        let column = tool.getAttribute(columnsDetailLineSpace, columnKey);\n        let title = tool.getAttribute(column, 'title');\n\n        // 获取值\n        let dataKey = `detail__${recordId}`;\n        let paramModalPath = ['infoModal', 'paramModal',]\n        let paramModal = tool.getStateSpace(paramModalPath);\n        paramModal = Object.assign({}, paramModal);\n        let data = paramModal[dataKey];\n        if (!data) data = {};\n\n        return (\n            <div>\n                <div className={'detail-title'}>\n                    {title}\n                </div>\n\n                {data[columnKey] ? data[columnKey].toString() : null}\n            </div>\n        )\n    }\n\n    render() {\n        let content = this.getContent();\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        infoModal: state.infoModal,\n    }\n}\n\nFieldDetailChar = connect(mapStateToUpdate)(FieldDetailChar);\n\nexport {FieldDetailChar,};\n","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './money.css';\n\n\n//Money类型的字段\nclass FieldDetailMoney extends React.Component {\n\n    getContent() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let recordId = tool.getAttribute(this, ['props', 'param', 'record', 'id',]);\n\n        let columnsDetailLinePath = spacePublicPath.concat(['columnsDetailLine']);\n        let columnsDetailLineSpace = tool.getStateSpace(columnsDetailLinePath);\n\n        let column = tool.getAttribute(columnsDetailLineSpace, columnKey);\n        let title = tool.getAttribute(column, 'title');\n\n        // 获取值\n        let dataKey = `detail__${recordId}`;\n        let paramModalPath = ['infoModal', 'paramModal',]\n        let paramModal = tool.getStateSpace(paramModalPath);\n        paramModal = Object.assign({}, paramModal);\n        let data = paramModal[dataKey];\n        if (!data) data = {};\n\n        let value = null;\n        if (data[columnKey]) value = data[columnKey].toString();\n        if (value !== null) value = value + '元';\n\n        return (\n            <div>\n                <div className={'money-detail-title'}>\n                    {title}\n                </div>\n\n                {value}\n            </div>\n        )\n    }\n\n    render() {\n        let content = this.getContent();\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        infoModal: state.infoModal,\n    }\n}\n\nFieldDetailMoney = connect(mapStateToUpdate)(FieldDetailMoney);\n\nexport {FieldDetailMoney,};\n","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './help-array.css';\n\n\n//HelpArray类型的字段\nclass FieldDetailHelpArray extends React.Component {\n\n    getContent() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let recordId = tool.getAttribute(this, ['props', 'param', 'record', 'id',]);\n\n        let columnsDetailLinePath = spacePublicPath.concat(['columnsDetailLine']);\n        let columnsDetailLineSpace = tool.getStateSpace(columnsDetailLinePath);\n\n        let column = tool.getAttribute(columnsDetailLineSpace, columnKey);\n        let title = tool.getAttribute(column, 'title');\n\n        // 获取值\n        let dataKey = `detail__${recordId}`;\n        let paramModalPath = ['infoModal', 'paramModal',];\n        let paramModal = tool.getStateSpace(paramModalPath);\n        paramModal = Object.assign({}, paramModal);\n        let data = paramModal[dataKey];\n        if (!data) data = {};\n\n        //迭代组件\n        let value = data[columnKey];\n        let valueReacts = [];\n        for (let line of value) {\n            valueReacts.push(\n                <div key={line.id}>\n                    {line.help}\n                </div>\n            );\n        }\n\n\n        return (\n            <div>\n                <div className={'help-array-title'}>\n                    {title}\n                </div>\n                {valueReacts}\n            </div>\n        )\n    }\n\n    render() {\n        let content = this.getContent();\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nFieldDetailHelpArray = connect(mapStateToUpdate)(FieldDetailHelpArray);\n\nexport {FieldDetailHelpArray,};\n","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './bool.css';\n\n\n//Bool类型的字段\nclass FieldDetailBool extends React.Component {\n\n    getContent() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let recordId = tool.getAttribute(this, ['props', 'param', 'record', 'id',]);\n\n        let columnsDetailLinePath = spacePublicPath.concat(['columnsDetailLine']);\n        let columnsDetailLineSpace = tool.getStateSpace(columnsDetailLinePath);\n\n        let column = tool.getAttribute(columnsDetailLineSpace, columnKey);\n        let title = tool.getAttribute(column, 'title');\n\n        // 获取值\n        let dataKey = `detail__${recordId}`;\n        let paramModalPath = ['infoModal', 'paramModal',]\n        let paramModal = tool.getStateSpace(paramModalPath);\n        paramModal = Object.assign({}, paramModal);\n        let data = paramModal[dataKey];\n        if (!data) data = {};\n\n\n        //得到bool值\n        let valueText = null;\n        if (data[columnKey] !== undefined) {\n            let textBool = tool.getAttribute(columnsDetailLineSpace, [columnKey, 'textBool']);\n            if (!textBool) textBool = ['True', 'False',];\n            if (data[columnKey]) {\n                valueText = textBool[0];\n            } else {\n                valueText = textBool[1];\n            }\n        }\n\n        return (\n            <div>\n                <div className={'detail-title'}>\n                    {title}\n                </div>\n\n                {valueText}\n            </div>\n        )\n    }\n\n    render() {\n        let content = this.getContent();\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nFieldDetailBool = connect(mapStateToUpdate)(FieldDetailBool);\n\nexport {FieldDetailBool,};\n","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './img-path.css';\nimport {Image} from \"antd\";\n\n\n//图片路径类型的字段\nclass FieldDetailImgPath extends React.Component {\n\n    getContent() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let recordId = tool.getAttribute(this, ['props', 'param', 'record', 'id',]);\n\n        let columnsDetailLinePath = spacePublicPath.concat(['columnsDetailLine']);\n        let columnsDetailLineSpace = tool.getStateSpace(columnsDetailLinePath);\n\n        let column = tool.getAttribute(columnsDetailLineSpace, columnKey);\n        let title = tool.getAttribute(column, 'title');\n\n        // 获取值\n        let dataKey = `detail__${recordId}`;\n        let paramModalPath = ['infoModal', 'paramModal',]\n        let paramModal = tool.getStateSpace(paramModalPath);\n        paramModal = Object.assign({}, paramModal);\n        let data = paramModal[dataKey];\n        if (!data) data = {};\n\n\n        //得到路径值\n        let valueImg = null;\n        let valueImgPath = data[columnKey];\n        if (valueImgPath) {\n            // let src = tool.get_url(valueImgPath);\n            let src = tool.path_join(valueImgPath);\n            valueImg = (<div className={'img-div'}>\n                <Image\n                    src={src}\n                    style={{\n                        height: '50px',\n                        width: '50px',\n                    }}\n                    width={'100%'}\n                    height={'100%'}\n                />\n            </div>);\n        }\n\n\n        return (\n            <div>\n                <div className={'detail-title'}>\n                    {title}\n                </div>\n                {valueImg}\n            </div>\n        )\n    }\n\n    render() {\n        let content = this.getContent();\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nFieldDetailImgPath = connect(mapStateToUpdate)(FieldDetailImgPath);\n\nexport {FieldDetailImgPath,};\n","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\nimport {getLabelReact} from \"../../columns/label\";\n\nimport './label.css';\n\n\n//标签类型的字段\nclass FieldDetailLabel extends React.Component {\n\n    getContent() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let recordId = tool.getAttribute(this, ['props', 'param', 'record', 'id',]);\n\n        let columnsDetailLinePath = spacePublicPath.concat(['columnsDetailLine']);\n        let columnsDetailLineSpace = tool.getStateSpace(columnsDetailLinePath);\n\n        let column = tool.getAttribute(columnsDetailLineSpace, columnKey);\n        let title = tool.getAttribute(column, 'title');\n\n        // 获取值\n        let dataKey = `detail__${recordId}`;\n        let paramModalPath = ['infoModal', 'paramModal',];\n        let paramModal = tool.getStateSpace(paramModalPath);\n        paramModal = Object.assign({}, paramModal);\n        let data = paramModal[dataKey];\n        if (!data) data = {};\n\n        //迭代组件\n        let value = data[columnKey];\n        let valueReacts = [];\n        for (let line of value) {\n            valueReacts.push(\n                <div key={line.id}>\n                    {getLabelReact(line.help)}\n                </div>\n            );\n        }\n\n\n        return (\n            <div>\n                <div className={'help-array-title'}>\n                    {title}\n                </div>\n                {valueReacts}\n            </div>\n        )\n    }\n\n    render() {\n        let content = this.getContent();\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nFieldDetailLabel = connect(mapStateToUpdate)(FieldDetailLabel);\n\nexport {FieldDetailLabel,};\n","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\nimport {getLabelReact} from \"../../columns/label\";\n\nimport './label.css';\n\n\n//标签类型的字段\nclass FieldDetailLabelHelp extends React.Component {\n\n    getContent() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let recordId = tool.getAttribute(this, ['props', 'param', 'record', 'id',]);\n\n        let columnsDetailLinePath = spacePublicPath.concat(['columnsDetailLine']);\n        let columnsDetailLineSpace = tool.getStateSpace(columnsDetailLinePath);\n\n        let column = tool.getAttribute(columnsDetailLineSpace, columnKey);\n        let title = tool.getAttribute(column, 'title');\n\n        // 获取值\n        let dataKey = `detail__${recordId}`;\n        let paramModalPath = ['infoModal', 'paramModal',];\n        let paramModal = tool.getStateSpace(paramModalPath);\n        paramModal = Object.assign({}, paramModal);\n        let data = paramModal[dataKey];\n        if (!data) data = {};\n\n\n        //迭代组件\n        let value = data[columnKey];\n        let valueReacts = [];\n        for (let line of value) {\n            valueReacts.push(\n                <div key={line.id} style={{marginTop: '4px',}}>\n                    {getLabelReact(line.help)}\n                    &nbsp;&nbsp;\n                    {line['help2']}\n                </div>\n            );\n        }\n\n\n        return (\n            <div>\n                <div className={'help-array-title'}>\n                    {title}\n                </div>\n                {valueReacts}\n            </div>\n        )\n    }\n\n    render() {\n        let content = this.getContent();\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        setting: state.setting,\n    }\n}\n\nFieldDetailLabelHelp = connect(mapStateToUpdate)(FieldDetailLabelHelp);\n\nexport {FieldDetailLabelHelp,};\n","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './dynamic.css';\n\n\n// 动态字段 这个字段可能存在多个子字段\nclass FieldDetailDynamic extends React.Component {\n\n    getContent() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let recordId = tool.getAttribute(this, ['props', 'param', 'record', 'id',]);\n\n        let columnsDetailLinePath = spacePublicPath.concat(['columnsDetailLine']);\n        let columnsDetailLineSpace = tool.getStateSpace(columnsDetailLinePath);\n\n        let column = tool.getAttribute(columnsDetailLineSpace, columnKey);\n        let title = tool.getAttribute(column, 'title');\n\n        // 获取值\n        let dataKey = `detail__${recordId}`;\n        let paramModalPath = ['infoModal', 'paramModal',]\n        let paramModal = tool.getStateSpace(paramModalPath);\n        paramModal = Object.assign({}, paramModal);\n        let data = paramModal[dataKey];\n        if (!data) data = {};\n        let values = data[columnKey];\n        if (!values) return null;\n\n\n        let valueReacts = [];\n        for (let line of values) {\n            valueReacts.push(\n                <div key={line.id}>\n                    <div  className={'detail-title'}>\n                        {line.help}\n                    </div>\n                    {line.value}\n                </div>\n            );\n        }\n\n\n        return (\n            <div>\n                <div className={'help-array-title'}>\n                    {title}\n                </div>\n                {valueReacts}\n            </div>\n        )\n    }\n\n    render() {\n        let content = this.getContent();\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToDynamic(state) {\n    return {\n        // setting: state.setting,\n    }\n}\n\nFieldDetailDynamic = connect(mapStateToDynamic)(FieldDetailDynamic);\n\nexport {FieldDetailDynamic,};\n","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './file.css';\n\n\n//file类型的字段\nclass FieldDetailFile extends React.Component {\n\n    getContent() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let recordId = tool.getAttribute(this, ['props', 'param', 'record', 'id',]);\n\n        let columnsDetailLinePath = spacePublicPath.concat(['columnsDetailLine']);\n        let columnsDetailLineSpace = tool.getStateSpace(columnsDetailLinePath);\n\n        let column = tool.getAttribute(columnsDetailLineSpace, columnKey);\n        let title = tool.getAttribute(column, 'title');\n\n        // 获取值\n        let dataKey = `detail__${recordId}`;\n        let paramModalPath = ['infoModal', 'paramModal',];\n        let paramModal = tool.getStateSpace(paramModalPath);\n        paramModal = Object.assign({}, paramModal);\n        let data = paramModal[dataKey];\n        if (!data) data = {};\n\n        let value = data[columnKey];\n        if (value) {\n            // 链接文字\n            let textLink = tool.getAttribute(column, ['textLink',]);\n            if (!textLink) textLink = '链接';\n\n            value = tool.get_url(value);\n            value = <a href={value} target=\"_blank\" rel=\"noreferrer\">{textLink}</a>\n        }\n\n        return (\n            <div>\n                <div className={'detail-title'}>\n                    {title}\n                </div>\n                {value}\n            </div>\n        )\n    }\n\n    render() {\n        let content = this.getContent();\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        infoModal: state.infoModal,\n    }\n}\n\nFieldDetailFile = connect(mapStateToUpdate)(FieldDetailFile);\n\nexport {FieldDetailFile,};\n","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './map.css';\n\n\n//Map类型的字段\nclass FieldDetailMap extends React.Component {\n\n    getContent() {\n        // return 'x1'\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let recordId = tool.getAttribute(this, ['props', 'param', 'record', 'id',]);\n\n        let columnsDetailLinePath = spacePublicPath.concat(['columnsDetailLine']);\n        let columnsDetailLineSpace = tool.getStateSpace(columnsDetailLinePath);\n\n        let column = tool.getAttribute(columnsDetailLineSpace, columnKey);\n        let title = tool.getAttribute(column, 'title');\n        // return 'x2'\n        // 获取值\n        let dataKey = `detail__${recordId}`;\n        let paramModalPath = ['infoModal', 'paramModal',];\n        let paramModal = tool.getStateSpace(paramModalPath);\n        paramModal = Object.assign({}, paramModal);\n        let data = paramModal[dataKey];\n        if (!data) data = {};\n        let value = data[columnKey] ? data[columnKey].toString() : null;\n        // return 'x3'\n        // 映射值\n        console.log('map--', column)\n\n        let map = tool.getAttribute(column, 'map',{});\n        value = map[value];\n\n        return (\n            <div>\n                <div className={'detail-title'}>\n                    {title}\n                </div>\n                {value}\n            </div>\n        )\n    }\n\n    render() {\n        // return 'xxx'\n        let content = this.getContent();\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        infoModal: state.infoModal,\n    }\n}\n\nFieldDetailMap = connect(mapStateToUpdate)(FieldDetailMap);\n\nexport {FieldDetailMap,};\n","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './china-time.css';\n\n\n//ChinaTime类型的字段\nclass FieldDetailChinaTime extends React.Component {\n\n    getContent() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let recordId = tool.getAttribute(this, ['props', 'param', 'record', 'id',]);\n\n        let columnsDetailLinePath = spacePublicPath.concat(['columnsDetailLine']);\n        let columnsDetailLineSpace = tool.getStateSpace(columnsDetailLinePath);\n\n        let column = tool.getAttribute(columnsDetailLineSpace, columnKey);\n        let title = tool.getAttribute(column, 'title');\n\n        // 获取值\n        let dataKey = `detail__${recordId}`;\n        let paramModalPath = ['infoModal', 'paramModal',];\n        let paramModal = tool.getStateSpace(paramModalPath);\n        paramModal = Object.assign({}, paramModal);\n        let data = paramModal[dataKey];\n        if (!data) data = {};\n\n\n        let value = data[columnKey];\n        if (value === null || value === undefined) {\n            value = null;\n        } else {\n            value = value.toString();\n        }\n\n        // 显示为中国时间\n        let date_obj = new Date(value);\n        let year = date_obj.getFullYear();\n        let month = date_obj.getMonth() + 1;\n        let day = date_obj.getDate();\n\n        let hours = date_obj.getHours();\n        let minutes = date_obj.getMinutes();\n        value = `${year}年${month}月${day}日 ${hours}点${minutes}分`;\n\n        return (\n            <div>\n                <div className={'detail-title'}>\n                    {title}\n                </div>\n                {value}\n            </div>\n        )\n    }\n\n    render() {\n        let content = this.getContent();\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        infoModal: state.infoModal,\n    }\n}\n\nFieldDetailChinaTime = connect(mapStateToUpdate)(FieldDetailChinaTime);\n\nexport {FieldDetailChinaTime,};\n","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './year-time.css';\n\n\n//YearTime类型的字段\nclass FieldDetailYearTime extends React.Component {\n\n    getContent() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let recordId = tool.getAttribute(this, ['props', 'param', 'record', 'id',]);\n\n        let columnsDetailLinePath = spacePublicPath.concat(['columnsDetailLine']);\n        let columnsDetailLineSpace = tool.getStateSpace(columnsDetailLinePath);\n\n        let column = tool.getAttribute(columnsDetailLineSpace, columnKey);\n        let title = tool.getAttribute(column, 'title');\n\n        // 获取值\n        let dataKey = `detail__${recordId}`;\n        let paramModalPath = ['infoModal', 'paramModal',];\n        let paramModal = tool.getStateSpace(paramModalPath);\n        paramModal = Object.assign({}, paramModal);\n        let data = paramModal[dataKey];\n        if (!data) data = {};\n\n\n        let value = data[columnKey];\n        if (value === null || value === undefined) {\n            value = null;\n        } else {\n            value = value.toString();\n        }\n\n        // 显示为中国时间\n        let date_obj = new Date(value);\n        let year = date_obj.getFullYear();\n        value = `${year}年`;\n\n        return (\n            <div>\n                <div className={'detail-title'}>\n                    {title}\n                </div>\n                {value}\n            </div>\n        )\n    }\n\n    render() {\n        let content = this.getContent();\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        infoModal: state.infoModal,\n    }\n}\n\nFieldDetailYearTime = connect(mapStateToUpdate)(FieldDetailYearTime);\n\nexport {FieldDetailYearTime,};\n","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './utc-time.css';\n\n\n//UtcTime类型的字段\nclass FieldDetailUtcTime extends React.Component {\n\n    getContent() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let recordId = tool.getAttribute(this, ['props', 'param', 'record', 'id',]);\n\n        let columnsDetailLinePath = spacePublicPath.concat(['columnsDetailLine']);\n        let columnsDetailLineSpace = tool.getStateSpace(columnsDetailLinePath);\n\n        let column = tool.getAttribute(columnsDetailLineSpace, columnKey);\n        let title = tool.getAttribute(column, 'title');\n\n        // 获取值\n        let dataKey = `detail__${recordId}`;\n        let paramModalPath = ['infoModal', 'paramModal',];\n        let paramModal = tool.getStateSpace(paramModalPath);\n        paramModal = Object.assign({}, paramModal);\n        let data = paramModal[dataKey];\n        if (!data) data = {};\n\n\n        let value = data[columnKey];\n        if (value === null || value === undefined) {\n            value = null;\n        } else {\n            value = value.toString();\n        }\n\n        // 显示为中国时间\n        value = tool.utc_to_china(value);\n        // let date_obj = new Date(value);\n        // let year = date_obj.getFullYear();\n        // let month = date_obj.getMonth() + 1;\n        // let day = date_obj.getDate();\n        //\n        // let hours = date_obj.getHours();\n        // let minutes = date_obj.getMinutes();\n        // value = `${year}年${month}月${day}日 ${hours}点${minutes}分`;\n\n        return (\n            <div>\n                <div className={'detail-title'}>\n                    {title}\n                </div>\n                {value}\n            </div>\n        )\n    }\n\n    render() {\n        let content = this.getContent();\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        infoModal: state.infoModal,\n    }\n}\n\nFieldDetailUtcTime = connect(mapStateToUpdate)(FieldDetailUtcTime);\n\nexport {FieldDetailUtcTime,};\n","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {tool} from \"../../../tools/tools\";\n\nimport './char.css';\n\n\n//userInfo类型的字段\nclass FieldDetailUserInfo extends React.Component {\n\n    getContent() {\n        let spacePublicPath = tool.getAttribute(this, ['props', 'param', 'spacePublicPath',]);\n        let columnKey = tool.getAttribute(this, ['props', 'param', 'columnKey',]);\n        let recordId = tool.getAttribute(this, ['props', 'param', 'record', 'id',]);\n\n        let columnsDetailLinePath = spacePublicPath.concat(['columnsDetailLine']);\n        let columnsDetailLineSpace = tool.getStateSpace(columnsDetailLinePath);\n\n        let column = tool.getAttribute(columnsDetailLineSpace, columnKey);\n        let title = tool.getAttribute(column, 'title');\n\n        // 获取值\n        let dataKey = `detail__${recordId}`;\n        let paramModalPath = ['infoModal', 'paramModal',]\n        let paramModal = tool.getStateSpace(paramModalPath);\n        paramModal = Object.assign({}, paramModal);\n        let data = paramModal[dataKey];\n        if (!data) data = {};\n        let right;\n        if (data[columnKey]) {\n            let lineDatum = data[columnKey];\n            right = `${lineDatum.name}(${lineDatum.username})`;\n        }\n\n\n        return (\n            <div>\n                <div className={'detail-title'}>\n                    {title}\n                </div>\n\n                {right}\n            </div>\n        )\n    }\n\n    render() {\n        let content = this.getContent();\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToUpdate(state) {\n    return {\n        infoModal: state.infoModal,\n    }\n}\n\nFieldDetailUserInfo = connect(mapStateToUpdate)(FieldDetailUserInfo);\n\nexport {FieldDetailUserInfo,};\n","import React from \"react\";\n\n\n//编辑映射字段\nimport {FieldChar} from \"./apps/power-table/fields/char/char\";\nimport {FieldText} from \"./apps/power-table/fields/text/text\";\nimport {FieldMultipleChoices} from \"./apps/power-table/fields/multiple-choices/multiple-choices\";\nimport {FieldSingleSmallChoices} from \"./apps/power-table/fields/single-small-choices/single-small-choices\";\nimport {FieldSingleDeepChoices} from \"./apps/power-table/fields/single-deep-choices/single-deep-choices\";\nimport {FieldFile} from \"./apps/power-table/fields/file/file\";\nimport {FieldMultipleFile} from \"./apps/power-table/fields/multiple-file/multiple-file\";\nimport {FieldMultipleImage} from \"./apps/power-table/fields/multiple-img/multiple-img\";\nimport {FieldBool} from \"./apps/power-table/fields/bool/bool\";\nimport {FieldImagePath} from \"./apps/power-table/fields/img-path/img-path\";\nimport {FieldImageShow} from \"./apps/power-table/fields/img-show/img-show\";\nimport {FieldImageHead} from \"./apps/power-table/fields/img-head/img-head\";\nimport {FieldDynamic} from \"./apps/power-table/fields/dynamic/dynamic\";\nimport {FieldTime} from \"./apps/power-table/fields/time/time\";\nimport {FieldTimeYear} from \"./apps/power-table/fields/time-year/time\";\nimport {FieldTimeDay} from \"./apps/power-table/fields/time-day/time-day\";\nimport {FieldSingleSearchChoices} from \"./apps/power-table/fields/single-search-choices/single-search-choices\";\nimport {FieldSingleDeepNewChoices} from \"./apps/power-table/fields/single-deep-choices-new/single-deep-new-choices\";\nimport {FieldReact} from \"./apps/power-table/fields/react-field/react-field\";\n\n//详情映射字段\nimport {FieldDetailChar} from \"./apps/power-table/coumns-detail/char/char\";\nimport {FieldDetailMoney} from \"./apps/power-table/coumns-detail/money/money\";\nimport {FieldDetailHelpArray} from \"./apps/power-table/coumns-detail/help-array/help-array\";\nimport {FieldDetailBool} from \"./apps/power-table/coumns-detail/bool/bool\";\nimport {FieldDetailImgPath} from \"./apps/power-table/coumns-detail/img-path/img-path\";\nimport {FieldDetailLabel} from \"./apps/power-table/coumns-detail/label/label\";\nimport {FieldDetailLabelHelp} from \"./apps/power-table/coumns-detail/label/label-help\";\nimport {FieldDetailDynamic} from \"./apps/power-table/coumns-detail/dynamic/dynamic\";\nimport {FieldDetailFile} from \"./apps/power-table/coumns-detail/file/file\";\nimport {FieldDetailMap} from \"./apps/power-table/coumns-detail/map/map\";\nimport {FieldDetailRender} from \"./apps/power-table/coumns-detail/render/render\";\nimport {FieldDetailChinaTime} from \"./apps/power-table/coumns-detail/chinaTime/china-time\";\nimport {FieldDetailYearTime} from \"./apps/power-table/coumns-detail/yearTime/year-time\";\nimport {FieldDetailUtcTime} from \"./apps/power-table/coumns-detail/utcTime/utc-time\";\nimport {FieldDetailUserInfo} from \"./apps/power-table/coumns-detail/userInfo/char\";\n// import {FieldProgress} from \"./apps/power-table/columns/电影进度\";\n\n\n// 编辑字段映射\nlet fieldMapping = {\n    bool: param => <FieldBool param={param}/>,\n    char: param => <FieldChar param={param}/>,\n    text: param => <FieldText param={param}/>,\n    file: param => <FieldFile param={param}/>,\n    multipleFile: param => <FieldMultipleFile param={param}/>,\n    multipleChoice: param => <FieldMultipleChoices param={param}/>,\n    SingleSmallChoice: param => <FieldSingleSmallChoices param={param}/>,\n    singleSmallChoice: param => <FieldSingleSmallChoices param={param}/>,\n    singSearchChoice: param => <FieldSingleSearchChoices param={param}/>,\n    singDeepChoice: param => <FieldSingleDeepChoices param={param}/>,\n    singNewDeepChoice: param => <FieldSingleDeepNewChoices param={param}/>,\n    imgPath: param => <FieldImagePath param={param}/>,\n    imgShow: param => <FieldImageShow param={param}/>,\n    imgHead: param => <FieldImageHead param={param}/>,\n    multipleImg: param => <FieldMultipleImage param={param}/>,\n    dynamic: param => <FieldDynamic param={param}/>,\n    time: param => <FieldTime param={param}/>,\n    timeYear: param => <FieldTimeYear param={param}/>,\n    timeDay: param => <FieldTimeDay param={param}/>,\n    react: param => <FieldReact param={param}/>,\n};\n\n\n// 详情字段映射\nlet fieldDetailMapping = {\n    char: param => <FieldDetailChar param={param}/>,\n    money: param => <FieldDetailMoney param={param}/>,\n    map: param => <FieldDetailMap param={param}/>,\n    render: param => <FieldDetailRender param={param}/>,\n    chinaTime: param => <FieldDetailChinaTime param={param}/>,\n    yearTime: param => <FieldDetailYearTime param={param}/>,\n    utcTime: param => <FieldDetailUtcTime param={param}/>,\n    helpArray: param => <FieldDetailHelpArray param={param}/>,\n    bool: param => <FieldDetailBool param={param}/>,\n    imgPath: param => <FieldDetailImgPath param={param}/>,\n    imgShow: param => <FieldDetailImgPath param={param}/>,\n    imgHead: param => <FieldDetailImgPath param={param}/>,\n    label: param => <FieldDetailLabel param={param}/>,\n    labelHelp: param => <FieldDetailLabelHelp param={param}/>,\n    dynamic: param => <FieldDetailDynamic param={param}/>,\n    file: param => <FieldDetailFile param={param}/>,\n    userInfo: param => <FieldDetailUserInfo param={param}/>,\n    // 电影进度: param => <FieldProgress param={param}/>,\n};\n\n\nexport {fieldMapping, fieldDetailMapping}\n\n","import {fieldDetailMapping, fieldMapping,} from \"./public_setting\";\nimport {tool} from \"./apps/tools/tools\";\n\n\nconst conf = [\n    ['输入你的系统帐号', 'Enter your system account number.',],\n    ['输入你的密码', 'Enter your password.',],\n    ['登录', 'Login',],\n];\n\nfunction language() {\n    return 1;\n}\n\nfunction conf2mapping() {\n    // 仅运行一次, 转化为符合js语法并可以哈希查询的格式\n    let mapping = {};\n    for (const line of conf) {\n        let key = encodeURIComponent(line[0]);\n        mapping[key] = line[1];\n    }\n    return mapping;\n}\n\nconst mapping = conf2mapping();\n\nfunction Text(text) {\n    if (language() === 1) return text;\n    let key = encodeURIComponent(text);\n    if (mapping[key]) return mapping[key];\n    console.log('未翻译的汉语---', text);\n    return text;\n}\n\n//个人助理系统后台 sub__\nlet FormFooter = '©2025 Form';\nlet funcMapping = {};\nlet setting = {\n    // stateAffixMenu: true,\n    title: Text('Form系统后台'),\n    authenticate: {\n        loginPath: '/programmer/jwt/',\n        setPath: '/programmer/set_password/',\n        headers: null,\n        role: null,\n        username: null,\n        responseData: null,\n        jwtToken: null,\n        abstract_role_name: null,\n        logoImage: '',\n        english: false,\n    },\n    // programmer: {},\n    programmer: {\n        webTitle: 'Form系统-programmer控制台',\n        systemTitle: 'programmer控制台',\n        footer: FormFooter,\n        menu__sys: {\n            name: '系统',\n            sub: {\n                menu__base_account: {\n                    name: '账号',\n                    table: {\n                        path: 'programmer/user/',\n                        columns: {\n                            name: {title: '名字',},\n                            username: {title: '系统帐号',},\n                            email: {title: 'email',},\n                            role: {title: '角色信息',},\n                            cover: {title: '头像', type: 'imgHead',},\n                            age: {title: '年龄',},\n                            sign: {\n                                title: '标记', type: 'map', map: {\n                                    0: \"未标记\",\n                                    1: \"家庭成员\",\n                                },\n                            },\n                        },\n                        columnsUpdate: {\n                            name: {title: '名字',},\n                            username: {title: '系统帐号',},\n                            email: {title: 'email',},\n                            password: {title: '密码',},\n                            cover: {title: '头像', type: 'imgHead',},\n                            age: {title: '年龄',},\n                            sign: {\n                                title: '标记', type: 'singleSmallChoice', choices: [\n                                    {value: 0, help: \"未标记\",},\n                                    {value: 1, help: \"家庭成员\",},\n                                ],\n                            },\n                        },\n                        text__update_title: '修改这个系统账号',\n                        disableDownload: true,\n                    },\n                },\n                menu__roles: {\n                    name: '角色一览',\n                    table: {\n                        path: 'programmer/role/',\n                        columns: {\n                            role_name: {title: '角色名',},\n                            code: {title: '系统识别名',},\n                        },\n                        disableDownload: true,\n                    },\n                },\n                menu__setting: {\n                    name: '系统设置',\n                    table: {\n                        path: 'programmer/setting/',\n                        columns: {\n                            info: {title: '项',},\n                            key: {title: '项(机器友好)',},\n                            value: {title: '值',},\n                            follow: {\n                                title: '位置', type: 'map', map: {\n                                    1: '跟随数据库',\n                                    2: '跟随代码',\n                                },\n                            },\n                            updated_at: {title: '更新时间', type: 'utcTime',},\n                        },\n                        columnsUpdate: {\n                            info: {title: '项',},\n                            key: {title: '项(机器友好)',},\n                            value: {\n                                title: '值',\n                                is_show: param => {\n                                    let is_choice = tool.getAttribute(param, ['record', 'is_choice',],);\n                                    return is_choice !== 1;\n                                },\n                            },\n                            value_choice: {\n                                title: '值',\n                                type: 'singSearchChoice',\n                                path: 'programmer/choices_setting_choices/',\n                                is_show: param => {\n                                    let is_choice = tool.getAttribute(param, ['record', 'is_choice',],);\n                                    return is_choice === 1;\n                                },\n                            },\n                            follow: {\n                                title: '跟随', type: 'singleSmallChoice', choices: [\n                                    {value: 1, help: '跟随数据库',},\n                                    {value: 2, help: '跟随代码',},\n                                ],\n                            },\n                        },\n                        columnsCreate: {\n                            info: {title: '项',},\n                            key: {title: '项(机器友好)',},\n                            value: {title: '值',},\n                            follow: {\n                                title: '跟随', type: 'singleSmallChoice', choices: [\n                                    {value: 1, help: '跟随数据库',},\n                                    {value: 2, help: '跟随代码',},\n                                ],\n                            },\n                        },\n                        disableDownload: true,\n                        text__update_right: '设置',\n                        sub__sub_setting_choices: {\n                            columnTitle: '选项',\n                            path: 'programmer/sub_setting_choices/',\n                            columns: {\n                                value: {title: '值',},\n                                info: {title: '帮助',},\n                                index: {title: '排序索引',},\n                            },\n                            columnsCreate: {\n                                value: {title: '值',},\n                                info: {title: '帮助',},\n                                index: {title: '排序索引',},\n                            },\n                            columnsUpdate: {\n                                value: {title: '值',},\n                                info: {title: '帮助',},\n                                index: {title: '排序索引',},\n                            },\n                            disableDownload: true,\n                            disableCopy: true,\n                            disableCreate: true,\n                        },\n                    },\n                },\n                menu__front: {\n                    name: '前端静态文件',\n                    table: {\n                        path: 'programmer/front/',\n                        columns: {\n                            name: {title: '目录名',},\n                            file_count: {title: '文件数量',},\n                        },\n                        columnsUpdate: {\n                            order: {\n                                title: '执行指令',\n                                type: 'singleSmallChoice',\n                                choices: [\n                                    {value: 1, help: '发送到服务器',},\n                                    {value: 2, help: '上传auto中js大文件到COS/定位index中此js路径修改为speed',},\n                                ],\n                                path: 'programmer/choices_build_setting/',\n                            },\n                        },\n                        columnsUpdate_1: {\n                            order: {\n                                title: '执行指令',\n                                type: 'singleSmallChoice',\n                                choices: [\n                                    {value: 2, help: '上传auto中js大文件到css/定位index中此js路径修改为static_speed',},\n                                ],\n                            },\n                        },\n                        disableDownload: true,\n                        disableDelete: true,\n                        text__update_right: '操作',\n                    },\n                },\n                menu__backend: {\n                    name: '数据库备份及恢复',\n                    table: {\n                        path: 'programmer/backend/',\n                        columns: {\n                            name: {title: '备份文件名', type: 'utcTime',},\n                            filesize: {title: '文件大小',},\n                            path: {title: '下载链接', type: 'file',},\n                            name_origin: {title: '源文件名称',},\n                        },\n                        columnsCreate: {\n                            order: {\n                                title: '指令', type: 'singleSmallChoice', choices: [\n                                    {value: '1', help: '备份数据库',},\n                                    {value: '2', help: '恢复数据库',},\n                                    {value: '3', help: '清理无效cloud文件',},\n                                ], path: 'programmer/get_order_choices/',\n                            },\n                            file: {\n                                title: '上传sql文件(or zip)',\n                                type: 'file',\n                                accept: ['.sql', '.zip',],\n                                is_show: (param) => {\n                                    let infoModalPath = tool.getAttribute(param, 'infoModalPath');\n                                    let infoModal = tool.getStateSpace(infoModalPath);\n                                    let order = tool.getAttribute(infoModal,\n                                        ['paramModal', 'create__x', 'order',]\n                                    )\n                                    return (order === '2') || (order === '5');\n                                },\n                            },\n                            password: {\n                                title: '恢复密码', is_show: (param) => {\n                                    let infoModalPath = tool.getAttribute(param, 'infoModalPath');\n                                    let infoModal = tool.getStateSpace(infoModalPath);\n                                    let order = tool.getAttribute(infoModal,\n                                        ['paramModal', 'create__x', 'order',]\n                                    )\n                                    return (order === '2') || (order === '5');\n                                },\n                            },\n                        },\n                        text__create_button: '发送指令',\n                        disableDownload: true,\n                        disableCreate: true,\n                        disableCopy: true,\n                    },\n                },\n                menu__cloud: {\n                    name: '抽象文件',\n                    table: {\n                        path: 'api_v1/cloud/',\n                        columns: {\n                            file_type: {title: '文件类型',},\n                            path_local: {title: '本地路径',},\n                            path_cloud: {title: '云端路径',},\n                            use_path: {\n                                title: '文件位置', type: 'map', map: {\n                                    1: '本地',\n                                    2: '云端',\n                                },\n                            },\n                            relation_count: {title: '关联数量',},\n                        },\n                        columnsDetailLine: {\n                            file_type: {title: '文件类型',},\n                            path_local: {title: '本地路径',},\n                            path_cloud: {title: '云端路径',},\n                            use_path: {\n                                title: '文件位置', type: 'map', map: {\n                                    1: '本地',\n                                    2: '云端',\n                                },\n                            },\n                            relation_count: {title: '关联数量',},\n                        },\n                        columnsUpdate: {\n                            order: {\n                                title: '命令', type: 'singleSmallChoice', choices: [\n                                    {value: 1, help: '此服务器端文件迁移到oss云',},\n                                    {value: 2, help: '此oss云文件迁移到服务器',},\n                                    // {value: 3, help: '删除此文件',},\n                                ],\n                            },\n                        },\n                        columnsCreate: {\n                            order: {\n                                title: '命令', type: 'singleSmallChoice', choices: [\n                                    {value: 1, help: '清理所有孤儿文件',},\n                                    {value: 2, help: '服务器端文件全部迁移到oss云',},\n                                    {value: 3, help: 'oss云文件全部迁移到服务器',},\n                                ],\n                            },\n                        },\n                        disableDownload: true,\n                        disableCopy: true,\n                        disableCreate: true,\n                        disableDelete: true,\n\n                        text__update_right: '局部指令',\n                        text__create_button: '全局指令',\n                        text__detail_right: '详细信息',\n\n                        filters: {\n                            choices: {\n                                'all': {\n                                    text: '全部',\n                                },\n                                'clear': {\n                                    text: '孤儿文件',\n                                },\n                            },\n                            default: 'all',\n                        },\n                    },\n                },\n                menu__robot_info: {\n                    name: '机器人消息',\n                    table: {\n                        path: 'programmer/robot_info/',\n                        columns: {\n                            created_at: {title: '创建时间', type: 'utcTime',},\n                            info: {title: '消息',},\n                            info_type: {title: '消息类型',},\n                            // robot_obj: {title: '文件类型',},\n                        },\n                        disableDownload: true,\n                        disableCopy: true,\n                        disableCreate: true,\n                    },\n                },\n                menu__robot_public: {\n                    name: '机器人全局信息',\n                    table: {\n                        path: 'programmer/robot_public/',\n                        columns: {\n                            last_year: {title: '年级任务最后执行时间', type: 'utcTime',},\n                            executing_year: {\n                                title: '正在执行年级任务',\n                                type: 'bool',\n                                textBool: ['正在执行', '正在休眠',],\n                            },\n\n                            last_month: {title: '月级任务最后执行时间', type: 'utcTime',},\n                            executing_month: {\n                                title: '正在执行月级任务',\n                                type: 'bool',\n                                textBool: ['正在执行', '正在休眠',],\n                            },\n\n                            last_day: {title: '日级任务最后执行时间', type: 'utcTime',},\n                            executing_day: {\n                                title: '正在执行日级任务',\n                                type: 'bool',\n                                textBool: ['正在执行', '正在休眠',],\n                            },\n\n                            last_hour: {title: '时级任务最后执行时间', type: 'utcTime',},\n                            executing_hour: {\n                                title: '正在执行时级任务',\n                                type: 'bool',\n                                textBool: ['正在执行', '正在休眠',],\n                            },\n\n                            last_minute: {title: '分级任务最后执行时间', type: 'utcTime',},\n                            executing_minute: {\n                                title: '正在执行分级任务',\n                                type: 'bool',\n                                textBool: ['正在执行', '正在休眠',],\n                            },\n                        },\n                        columnsDetailLine: {\n                            last_year: {title: '年级任务最后执行时间', type: 'utcTime',},\n                            executing_year: {\n                                title: '正在执行年级任务',\n                                type: 'bool',\n                                textBool: ['正在执行', '正在休眠',],\n                            },\n\n                            last_month: {title: '月级任务最后执行时间', type: 'utcTime',},\n                            executing_month: {\n                                title: '正在执行月级任务',\n                                type: 'bool',\n                                textBool: ['正在执行', '正在休眠',],\n                            },\n\n                            last_day: {title: '日级任务最后执行时间', type: 'utcTime',},\n                            executing_day: {\n                                title: '正在执行日级任务',\n                                type: 'bool',\n                                textBool: ['正在执行', '正在休眠',],\n                            },\n\n                            last_hour: {title: '时级任务最后执行时间', type: 'utcTime',},\n                            executing_hour: {\n                                title: '正在执行时级任务',\n                                type: 'bool',\n                                textBool: ['正在执行', '正在休眠',],\n                            },\n\n                            last_minute: {title: '分级任务最后执行时间', type: 'utcTime',},\n                            executing_minute: {\n                                title: '正在执行分级任务',\n                                type: 'bool',\n                                textBool: ['正在执行', '正在休眠',],\n                            },\n                        },\n                        columnsUpdate: {\n                            last_year: {title: '年级任务最后执行时间', type: 'time',},\n                            executing_year: {title: '正在执行年级任务', type: 'bool',},\n\n                            last_month: {title: '月级任务最后执行时间', type: 'time',},\n                            executing_month: {title: '正在执行月级任务', type: 'bool',},\n\n                            last_day: {title: '日级任务最后执行时间', type: 'time',},\n                            executing_day: {title: '正在执行日级任务', type: 'bool',},\n\n                            last_hour: {title: '时级任务最后执行时间', type: 'time',},\n                            executing_hour: {title: '正在执行时级任务', type: 'bool',},\n\n                            last_minute: {title: '分级任务最后执行时间', type: 'time',},\n                            executing_minute: {title: '正在执行分级任务', type: 'bool',},\n                        },\n                        disableDownload: true,\n                        disableCopy: true,\n                        disableCreate: true,\n                    },\n                },\n            },\n        },\n    },\n    admin: {\n        webTitle: 'Form系统-admin控制台',\n        systemTitle: 'admin控制台',\n        footer: FormFooter,\n        menu__submit: {\n            name: '已提交',\n            table: {\n                path: 'api_v1/form/',\n                columnsDetailLine: {\n                    first_name: {title: 'First Name',},\n                    last_name: {title: 'Last Name',},\n                    gender: {title: 'Gender',},\n                    date_of_birth: {title: 'Date Of Birth',},\n                    age: {title: 'age',},\n                    location: {title: 'Location',},\n                    email: {title: 'Email',},\n                    instagram: {title: 'Instagram',},\n                    resume: {title: 'Resume', type: 'file',},\n\n\n                    how_did_you_hear: {title: 'How did you hear about Accezz',},\n                    art_attention: {title: 'Which work of art has recently captured your attention? And why?',},\n\n                    favorite_ways: {title: 'What is your favorite way to engage with art?',},\n                    current_status: {title: 'What is your current status?',},\n\n                    why_join: {title: 'Why do you want to join?',},\n                    expectations: {title: 'What are your expectations from this community? ',},\n                    additional_info: {title: 'Anything else you would like us to know?',},\n\n                    submitted_at: {title: 'Submitted At', type: 'utcTime',},\n                },\n                columns: {\n                    first_name: {title: 'First Name',},\n                    last_name: {title: 'Last Name',},\n                    gender: {title: 'Gender',},\n                    date_of_birth: {title: 'Date Of Birth',},\n                    email: {title: 'Email',},\n                    resume: {title: 'Resume', type: 'file',},\n                    submitted_at: {title: 'Submitted At', type: 'utcTime',},\n                },\n            },\n        },\n    },\n    selectedMenu: {},\n    fieldMapping: fieldMapping,\n    fieldDetailMapping: fieldDetailMapping,\n    pageMap: {},\n    confUrl: '',\n    open_edit: true,\n};\n\n// todo 开发模式下\nsetting['confUrl'] = setting['confUrl'].replace('3000', '8000',)\n\n\nexport {setting, Text, funcMapping,}\n"],"sourceRoot":""}